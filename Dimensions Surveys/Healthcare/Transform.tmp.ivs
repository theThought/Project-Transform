Metadata(en-US, Question, Label)
Coke "Coca Cola" define
    {
        regular "Original",
        diet "Diet",
        cherry "Cherry",
        nocaffine "caffine free",
        zerovanilla "zero sugar vanilla",
        zerocherry "zero sugar cherry"
    };
    Pepsi "Pepsi Cola" define
    {
        Original "Original",
        Max "Max",
        MaxCherry "Max (Cherry)",
        MaxLime "Max (Lime)",
        Raspberry "Raspberry",
        Fire "Fire"
    };
    OtherDrinks "Others" define
    {
        FantaOrange "Fanta (Orange)",
        DrPepper "Dr Pepper",
        RWhites "R Whites Lemonade",
        Sprite "Sprite",
        Lilt "Lilt"
    };
    CokeRandom ""
    define
    {
        regular "Original",
        diet "Diet",
        cherry "Cherry",
        nocaffine "caffine free",
        zerovanilla "zero sugar vanilla",
        zerocherry "zero sugar cherry"
    } ran;
    PepsiRandom ""
    define
    {
        Original "Original",
        Max "Max",
        MaxCherry "Max (Cherry)",
        MaxLime "Max (Lime)",
        Raspberry "Raspberry",
        Fire "Fire"
    } ran;
    OtherDrinksRandom ""
    define
    {
        FantaOrange "Fanta (Orange)",
        DrPepper "Dr Pepper",
        RWhites "R Whites Lemonade",
        Sprite "Sprite",
        Lilt "Lilt",
        OtherDrink "please specify" other(otherDrinkDetail "please specify"
            style(
                ZIndex = -20
            )
        text [0..200] )
    } ran;
    druglist "" define
    {
        select "{#emptylabel}", '        _1_7148_7148 "Abagovomab",
        _3_7674_7674 "177Lu-PSMA-617", 'CS 02/09/2022
        _3_0002_0002 "5-FU",
        _3_0004_0004 "6-Mercaptopurine",
        _3_0006_0006 "6-Thioguanine",
        _1_9999_9997 "7 + 3 (cytarabine + dauorubicin)", 'UDSH 10/01/2023
        _2_9999_9997 "7 + 3 (cytarabine + idarubicin)", 'UDSH 10/01/2023
        _3_9999_9997 "7 + 3 (cytarabine + mitoxantrone)", 'UDSH 10/01/2023
        _1_9999_9998 "5 + 2 (cytarabine + dauorubicin)", 'UDSH 10/01/2023
        _2_9999_9998 "5 + 2 (cytarabine + idarubicin)", 'UDSH 10/01/2023
        _3_9999_9998 "5 + 2 (cytarabine + mitoxantrone)", 'UDSH 10/01/2023
        _1_9999_9917 "A+AVD", ' CS pre Q2 2022
        _1_6775_6775 "Abarelix",
        _2_7645_7645 "Abecma", '=============UDSH ADDED NEW BRAND ON 07/04/2021
        _1_7511_7511 "Abemaciclib", '        _2_7660_7660 "Abevmy", '=============UDSH ADDED NEW BRAND ON 20/09/2021
        _2_6757_7660 "Abevmy", '=============UDSH ADDED NEW BRAND ON 20/09/2021 'CS Amended category to use 4 digit generic pre 2022 Q1
        _1_7316_7316 "Abiraterone",
        _3_7719_7719 "Abiraterone + Niraparib [Akeega]", 'UDSH ADDED ON 18/08/2023
        _2_6939_6939 "Abraxane", '        _1_7295_7295 "Absorbable gelatin",
        '        _1_7092_7092 "Acitretin",
        _1_9999_9906 "ABVD",
        _1_9999_9912 "AC",
        _1_7512_7512 "Acalabrutinib",
        _2_0014_6246 "Aclacinon",
        _1_0014_0014 "Aclarubicin",
        _1_7690_7690 "Adagrasib", 'UDSH ADDED ON 19/12/2022
        _2_7324_7324 "Adcetris",
        _1_9999_9962 "ADE", 'UDSH 21/12/2022
        _1_7709_7709 "Adebrelimab", 'UDSH ADDED ON 29/05/2023
        _1_7302_7302 "Ado-trastuzumab",
        _2_0233_6200 "Adriacin",
        _2_0233_0023 "Adriamycin",
        _2_7701_7701 "Adstiladrin", 'UDSH 27/03/2023
        _1_7320_7320 "Afatinib",
        _2_7007_7309 "Afinitor",
        _1_7203_7203 "Aflibercept", '        _1_1118_1118 "Alcohol",
        _2_7677_7677 "Aidixi", '=============UDSH ADDED ON 23/05/2022        
        _2_7612_7612 "AiRuiKa",
        _2_7709_7709 "Airuili", 'UDSH ADDED ON 29/05/2023
        _2_7629_7629 "Akalux", ' CS added 9/11/20
        _2_7719_7719 "Akeega", 'UDSH ADDED ON 18/08/2023
        _2_7469_7469 "Alecensa",
        _1_7469_7469 "Alectinib",
        _1_6862_6862 "Alemtuzumab",
        _2_1076_5445 "Alimta",
        _2_7509_7509 "Aliqopa",
        _2_0386_0027 "Alkeran",
        _1_7642_7642 "Almonertinib", '=============UDSH ADDED NEW BRAND ON 12/03/2021
        _1_7576_7576 "Alpelisib",
        _1_0301_0301 "Altretamine",
        _2_7501_7501 "Alunbrig", '        _1_3024_3024 "Amilomer 25-45",
        '        _2_7661_7661 "Alymsys", '=============UDSH ADDED NEW BRAND ON 20/09/2021
        _2_6757_7661 "Alymsys", '=============UDSH ADDED NEW BRAND ON 20/09/2021 'CS Amended category to use 4 digit generic pre 2022 Q1
        _2_7642_7642 "AMEILE", '=============UDSH ADDED NEW BRAND ON 12/03/2021
        _1_7651_7651 "Amivantamab", ' UDSH added 28/05/2021
        _2_7039_7039 "Amnolake",
        _1_6490_6490 "Amrubicin (hydrochloride)",
        _1_0042_0042 "Amsacrine",
        _1_1139_1139 "Anagrelide Hydrochloride",
        _1_5008_5008 "Anastrozole", '        _1_1086_1086 "Anti-androgens",
        '        _1_7259_7259 "Anti-CD40",
        _2_7667_7667 "Aniko", 'UDSH ADDED ON 24/02/2022
        _1_7596_7596 "Anlotinib Hydrocloride", ' UDSH added 21/01/2020
        _2_7707_7707 "Anping Xi", 'UDSH ADDED ON 28/03/2023
        _1_0824_0824 "Antithymocyte Immunoglobulin",
        _1_7527_7527 "Apalutamide",
        _1_7490_7490 "Apatinib",
        _2_5250_5251 "Aqupla",
        _2_0177_0056 "Ara-C",
        _2_6735_5346 "Aranesp", 'UDSH 23/06/2023
        _2_5008_1025 "Arimidex",
        _2_5158_5075 "Aromasin", '        _1_5479_5479 "Aromatase inhibitor",
        _2_7093_7093 "Arranon",
        _1_6110_6110 "Arsenic Trioxide",
        _2_7188_7433 "Arzerra",
        _1_7664_7664 "Asciminib", ' CS 1/12/21
        _1_0059_0059 "Asparaginase",
        _2_7570_7570 "Asparlas",
        _1_7493_7493 "Atezolizumab",
        _1_7595_7595 "Avapritinib",
        _2_6757_6909 "Avastin",
        _1_9999_9916 "AVD", ' CS pre Q2 2022
        _1_7498_7498 "Avelumab",
        _1_7239_7239 "Axitinib",
        _1_7524_7524 "Axicabtagene Ciloleucel", '        _2_7625_7625 "Aybintio", '8/10/20 CS
        _2_6757_7625 "Aybintio", '8/10/20 CS 'CS Amended category to use 4 digit generic pre 2022 Q1
        _2_7595_7595 "Ayvakit",
        _1_0065_0065 "Azacitidine",
        _2_7533_7533 "Azedra",
        _2_7680_7680 "Baihuize", '=============UDSH ADDED ON 23/05/2022
        _2_7600_7600 "Baizean",
        _2_7563_7563 "Balversa", ' CS Added 7563 16/4/19
        _2_7498_7498 "Bavencio",
        _1_0071_0071 "BCG vaccine",
        _2_9999_9982 "Bd (bortezomib + dexamethasome)", 'UDSH ADDED ON 31/03/2023
        _1_9999_9915 "BEACOPP – escalated dose", ' CS pre Q2 2022
        _1_9999_9016 "BEACOPP", 'UDSH ADDED ON 21/07/2023
        _1_9999_9940 "BEAM", 'CS 13/12/2022
        _1_9999_9967 "BeGEV", 'UDSH 21/12/2022
        _1_7621_7621 "Belantamab mafodotin", '6/8/20 CS
        _2_7394_7394 "Beleodaq",
        _1_7394_7394 "Belinostat",
        _2_0076_7575 "Belrapzo",
        _1_0076_0076 "Bendamustine",
        _2_0076_7573 "Bendeka",
        _2_7506_7506 "Besponsa",
        _2_7665_7665 "Besremi", ' 1/12/21 CS
        _2_6035_6035 "Bestatin",
        _1_0079_0079 "Betamethasone",
        _1_6757_6757 "Bevacizumab", '        _2_7522_7522 "Bevacizumab Biosimilar",
        _2_9999_9015 "Bevacizumab-CP", 'UDSH ADDED ON 21/07/2023
        _2_6757_7522 "Bevacizumab Biosimilar", 'CS Amended category to use 4 digit generic pre 2022 Q1
        _1_7096_7096 "Bexarotene",
        _1_9999_9002 "BG (bendamustine + obinutuzumab)", 'UDSH ADDED ON 31/03/2023
        _2_0253_7107 "Biasetyl", '        _1_7233_7233 "BIBW-2992",
        _1_1135_1135 "Bicalutamide",
        _1_7530_7530 "Binimetinib",
        _2_7621_7621 "Blenrep", '6/8/20 CS
        _2_0086_7127 "Bleo",
        _1_0086_0086 "Bleomycin",
        _1_7475_7475 "Blinatumomab",
        _2_7475_7475 "Blincyto", '        _2_7513_7513 "Blitzima",
        _2_1159_7513 "Blitzima", 'CS Amended category to use 4 digit generic pre 2022 Q1
        _3_9999_9002 "BO (bendamustine + obinutuzumab)", 'UDSH ADDED ON 31/03/2023
        _2_0781_6890 "Bonzol",
        _1_7613_7613 "Borofalan", '===========UDSH ADDED 02/07/2020
        _1_6758_6758 "Bortezomib",
        _1_7211_7211 "Bosutinib",
        _2_7211_7211 "Bosulif",
        _1_9999_9928 "BR (bendamustine + rituximab)", 'CS 13/12/2022
        _2_7529_7529 "Braftovi",
        _1_7324_7324 "Brentuximab vedotin",
        _1_7619_7619 "Brexucabtagene autoleucel", '6/8/20 CS
        _2_7636_7636 "Breyanzi", '===========UDSH ADDED 11/02/2021
        _1_7501_7501 "Brigatinib",
        _2_0140_5259 "Briplatin", '        _1_7223_7223 "Brivanib alaninate",
        _2_7591_7591 "Brukinsa", '===========UDSH ADDED 25/11/2019
        _2_9999_9969 "BTd (bortezomib + thalidomide + dex)", 'UDSH 10/01/2023
        _1_0725_0725 "Buserelin",
        _2_0094_6531 "Busulfex",
        _1_0094_0094 "Busulfan",
        _3_9999_9917 "BV+AVD", ' CS pre Q2 2022
        _1_7290_7290 "Cabazitaxel",
        _2_7410_7492 "Cabometyx",
        _1_7410_7410 "Cabozantinib",
        _1_7710_7710 "Cadolinimab", 'UDSH ADDED ON 29/05/2023
        _2_5313_1132 "Caelyx",
        _1_7570_7570 "Calaspargase pegol-mknl", ' CS Added 7570 23/1/19
        _1_6954_6954 "Calcitriol",
        _2_7512_7512 "Calquence",
        _2_6490_6444 "Calsed",
        _2_6862_5082 "Campath",
        _1_7612_7612 "Camrelizumab",
        _2_0995_3256 "CAMPTO",
        _1_3047_3047 "Capecitabine",
        _1_7609_7609 "Capmatinib", 'UDSH ADDED on 02/06/2020
        _3_9999_9910 "CAPOX",
        _2_7072_7072 "Caprelsa",
        _2_0104_7081 "Carbomerck",
        _1_0104_0104 "Carboplatin",
        _1_7393_7393 "Carfilzomib",
        _1_0108_0108 "Carmustine",
        _2_7681_7681 "Carteyva", '=============UDSH ADDED ON 23/05/2022
        _2_7670_7670 "Carvykti", 'UDSH ADDED on 30/03/2022
        _2_1135_0811 "Casodex", '        _1_6887_6887 "Catumaxomab", '        _1_7267_7267 "CEP-701",
        _2_9999_9952 "CDOP-R", 'UDSH 21/12/2022
        _3_7617_7617 "Cedazuridine + decitabine [Inqovi]", '==========UDSH ADDED NEW CODE ON 4/08/2020
        _2_7666_7666 "Cejemly", 'UDSH ADDED ON 24/02/2022
        _1_7540_7540 "Cemiplimab",
        _1_9999_9953 "CEOP", 'UDSH 21/12/2022
        _3_9999_9939 "CEOP-R", 'CS 13/12/2022
        _2_9999_9954 "CEPP-R", 'UDSH 21/12/2022
        _1_7460_7460 "Ceritinib",
        _1_6084_6084 "Cetuximab",
        _1_7629_7629 "Cetuximab saratolacan sodium", ' CS added 9/11/20
        _1_9999_9011 "CHASE", 'UDSH ADDED ON 31/03/2023
        _1_9999_9012 "CHASE-R", 'UDSH ADDED ON 31/03/2023
        _1_7542_7542 "Chidamide", ' UDSH added 21/01/2020
        _1_0126_0126 "Chlorambucil", '        _1_6439_6439 "Chlormadinone",
        _1_6332_6332 "Chlormadinone acetate",
        _1_9999_9959 "CHOEP", 'UDSH 21/12/2022
        _3_9999_9932 "CHOEP-R", 'CS 13/12/2022
        _1_9999_9901 "CHOP",
        _1_9999_9902 "CHOP-R",
        _1_7670_7670 "Ciltacabtagene autoleucel", 'UDSH ADDED on 30/03/2022
        _2_7643_7643 "Cipterbin", '=============UDSH ADDED NEW BRAND ON 12/03/2021
        _2_0140_7043 "Cisplamerck",
        _1_0140_0140 "Cisplatin",
        _1_1110_1110 "Cladribine", '        _1_7070_7070 "Clobetasol Propionate",
        _1_9999_9944 "CLAG-M", 'CS 13/12/2022
        _1_6927_6927 "Clofarabine", '        _1_0128_0128 "Clomiphene",
        _1_7449_7449 "Cobimetinib",
        _2_0481_6841 "Coforin",
        _2_7715_7715 "Columvi", 'UDSH ADDED on 04/07/2023
        _2_7357_7357 "Conmana", '=============UDSH ADDED NEW BRAND ON 12/03/2021
        _2_7410_7410 "Cometriq",
        _1_9999_9921 "COP", ' CS pre Q2 2022
        _1_7509_7509 "Copanlisib",
        _2_7539_7539 "Copiktra",
        _1_0165_0165 "Corticosteroids", ' CS 0165 IS NEEDED FOR DOWNLOADS FORCES BUT IS NOT USED ONLINE
        _1_5042_5042 "Cortisone",
        _2_7449_7449 "Cotellic",
        _1_9999_9015 "CP-bevacizumab", 'UDSH ADDED ON 21/07/2023
        _2_9999_9988 "CPd (carfilzomib + pomalidomide + dex)", 'UDSH 10/01/2023
        _3_0995_0995 "CPT-11",
        _2_9999_9976 "CRd (carfilzomib + lenalidomide + dex)", 'UDSH 10/01/2023
        _1_7312_7312 "Crizotinib",
        _1_9999_9913 "CTA",
        _1_9999_9907 "CVP",
        _1_9999_9971 "CyBorD", 'UDSH 10/01/2023
        _1_0172_0172 "Cyclophosphamide",
        _1_0173_0173 "Cyclosporin",
        _2_0177_6236 "Cylocide",
        _2_6337_6294 "Cymerin",
        _1_0176_0176 "Cyproterone",
        _2_7379_7379 "Cyramza",
        _1_0177_0177 "Cytarabine",
        _1_6232_6232 "Cytarabine (ocfosfate)",
        _3_7507_7507 "Cytarabine + daunorubicin (liposomal) [Vyxeos]", '==========UDSH ADDED NEW CODE ON 4/08/2020
        _1_7396_7396 "Dabrafenib",
        _1_9999_9963 "DAC", 'UDSH 21/12/2022
        _1_0180_0180 "Dacarbazine",
        _1_0676_0676 "Dactinomycin",
        _1_7413_7413 "Dacomitinib", '        _1_1146_1146 "Dalteparin/ tedelparin sodium",
        _1_7703_7703 "Dalpiciclib Isethionate", 'UDSH ADDED ON 28/03/2023
        _1_0781_0781 "Danazol",
        _2_7630_7630 "Danyelza", '==========UDSH ADDED NEW CODE ON 21/12/2020
        _1_7437_7437 "Daratumumab", 'UDSH 21/12/2022
        _3_7437_7607 "Daratumumab + hyaluronidase",
        _4_9999_9983 "Dara-Bd (daratumumab + bortezomib + dex)", 'UDSH ADDED ON 31/03/2023
        _2_9999_9977 "Dara-CRd", 'UDSH 10/01/2023
        _1_9999_9979 "Dara-Kd (daratumumab + carfilzomib + dex)", 'UDSH 10/01/2023
        _1_9999_9977 "Dara-KRd", 'UDSH 10/01/2023
        _1_9999_9987 "Dara-Pd (daratumumab + pomalidomide + dex)", 'UDSH 10/01/2023
        _2_9999_9973 "Dara-Rd (daratumumab + lenalidomide + dex)", 'UDSH 10/01/2023
        _1_9999_9991 "Dara-RVd", 'UDSH 10/01/2023
        _1_9999_9983 "Dara-Vd (daratumumab + bortezomib + dex)", 'UDSH 10/01/2023
        _1_9999_9981 "Dara-VMP", 'UDSH 10/01/2023
        _2_9999_9991 "Dara-VRd", 'UDSH 10/01/2023
        _1_9999_9970 "Dara-VTd", 'UDSH 10/01/2023
        _1_6735_6735 "Darbepoetin alpha", 'UDSH 23/06/2023
        _1_7682_7682 "Darinaparsin", 'UDSH ADDED THIS DRUG ON 23/06/2022
        _1_7588_7588 "Darolutamide",
        _2_7682_7682 "Darvias", 'UDSH ADDED THIS DRUG ON 23/06/2022
        _2_7437_7437 "Darzalex",
        _2_7437_7607 "Darzalex Faspro", '==========UDSH ADDED NEW CODE ON 7/05/2020
        _2_7437_7656 "Darzquro", ' CS 2/8/21
        _1_6959_6959 "Dasatinib",
        _2_0186_0185 "Daunomycin",
        _1_0186_0186 "Daunorubicin",
        _1_7507_7507 "Daunorubicin + cytarabine (liposomal) [Vyxeos]", ' CS 20/7/20 label changed
        _2_1073_1073 "Daunoxome",
        _2_7551_7551 "Daurismo",
        _3_9999_9983 "DBd (daratumumab + bortezomib + dex)", 'UDSH ADDED ON 31/03/2023
        _1_9999_9989 "Dd (daratumumab + dexamethasone)", 'UDSH 10/01/2023
        _2_0202_0188 "Decadron",
        _2_0731_0189 "Decapeptyl",
        _1_7059_7059 "Decitabine", '        _1_7235_7235 "Deforolimus",
        _1_7617_7617 "Decitabine + cedazuridine [Inqovi]", '==========UDSH ADDED NEW CODE ON 15/07/2020 CS 20/7/20 label changed
        _1_7231_7231 "Degarelix", ' CS 6908 removed Q1 2019        _1_6908_6908 "Denosumab", '        _1_0801_0801 "Deslorelin",
        _2_7658_7658 "Delytact", '==========UDSH ADDED NEW CODE ON 28/01/2021
        _1_6779_6779 "Denileukin Diftitox", '==========UDSH ADDED NEW CODE ON 28/01/2021
        _2_0180_0199 "Deticene",
        _1_0202_0202 "Dexamethasone",
        _2_0202_6849 "Dexart",
        _1_9999_9009 "DeViC", 'UDSH ADDED ON 31/03/2023
        _1_9999_9934 "DHAP", 'CS 13/12/2022
        _1_9999_9930 "DHAP-R", 'CS 13/12/2022
        _1_9999_9955 "DHAX", 'UDSH 21/12/2022
        _1_9999_9936 "DHAX-R", 'CS 13/12/2022
        _1_0732_0732 "Diethylstilbestrol",
        _2_7334_7537 "Difolta", 'Difolta added by Shashank on 12th Sept'18 - Q4 2018 changes
        _1_7677_7677 "Disitamab vedotin", '=============UDSH ADDED ON 23/05/2022
        _1_7618_7618 "Dinutuximab", '==========UDSH ADDED NEW CODE ON 04/08/2020
        _2_9999_9979 "DKd (daratumumab + carfilzomib + dex)", 'UDSH 10/01/2023
        _1_1071_1071 "Docetaxel",
        _1_7676_7676 "Donafenib", '=============UDSH ADDED ON 23/05/2022
        _1_7649_7649 "Dostarlimab", 'UDSH ADDED ON 10/05/2021
        _1_0275_0275 "Doxifluridine",
        _2_5313_5313 "Doxil",
        _1_0233_0233 "Doxorubicin",
        _2_9999_9987 "DPd (daratumumab + pomalidomide + dex)", 'UDSH 10/01/2023
        _1_9999_9973 "DRd (daratumumab + lenalidomide + dex)", 'UDSH 10/01/2023
        _1_7500_7500 "Durvalumab",
        _1_9999_9946 "Durvalumab + tremelimumab", 'CS ADDED ON 14/12/2022
        _1_6961_6961 "Dutasteride",
        _1_7539_7539 "Duvelisib",
        _2_9999_9983 "DVd (daratumumab + bortezomib + dex)", 'UDSH 10/01/2023
        _1_9999_9966 "DVPA", 'UDSH 21/12/2022
        _2_9999_9981 "D-VMP", 'UDSH ADDED ON 31/03/2023
        _1_7693_7693 "Elacestrant", 'UDSH 03/02/2023
        _2_7688_7688 "Elahere", 'UDSH ADDED ON 18/11/2022
        _1_9999_9992 "ELd (elotuzumab + lenalidomide + dex)", 'UDSH 10/01/2023
        _2_9999_9992 "Elo-Rd (elotuzumab + lenalidomide + dex)", 'UDSH 10/01/2023
        _2_9999_9993 "Elo-Pd (elotuzumab + pomalidomide + dex)", 'UDSH 10/01/2023
        _2_0160_6782 "Eligard",
        _1_7251_7251 "Elotuzumab",
        _2_0976_1117 "Eloxatin",
        _2_0976_6931 "Elplat",
        _1_7720_7720 "Elranatamab", 'UDSH ADDED ON 18/08/2023
        _2_7720_7720 "Elrexfio", 'UDSH ADDED ON 18/08/2023
        _2_7541_7541 "Elunate", '=======UDSH ADDED NEW CODE FOR CHS on 21/01/2020
        _2_7571_7571 "Elzonris", ' CS Added 7571 10/5/19
        _2_7251_7251 "Empliciti",
        _2_0160_0242 "Enantone",
        _1_7505_7505 "Enasidenib",
        _1_7529_7529 "Encorafenib",
        _2_0172_0243 "Endoxan",
        _1_7593_7593 "Enfortumab Vedotin", '========UDSH added on 8/01/2020
        _2_7594_7594 "Enhertu", '========UDSH added on 08/01/2020
        _1_6658_6658 "Enocitabine",
        _2_7641_7641 "Ensacove", '=============UDSH ADDED NEW BRAND ON 12/03/2021
        _1_7641_7641 "Ensartinib", '=============UDSH ADDED NEW BRAND ON 12/03/2021
        _1_7583_7583 "Entrectinib", '=======Uday added on 25/07/2019
        _1_7669_7669 "Envafolimab", 'UDSH ADDED ON 24/02/2022
        _2_7669_7669 "Envida", 'UDSH ADDED ON 24/02/2022
        _1_7400_7400 "Enzalutamide",
        _1_7708_7708 "Epcoritamab", 'UDSH ADDED ON 29/03/2023
        _1_9999_9993 "EPd (elotuzumab + pomalidomide + dex)", 'UDSH 10/01/2023
        _2_7542_7542 "Epidaza", '=======UDSH ADDED NEW CODE FOR CHS on 21/01/2020
        _1_0247_0247 "Epirubicin", '        _1_6569_6569 "Epoetin beta",
        '        _2_6569_6569 "Epogin",  CS Removed 13/8/20 should have come out when epo beta came out
        _2_7708_7708 "Epkinly", 'UDSH ADDED ON 29/03/2023
        _1_9999_9947 "EPOCH", 'UDSH 21/12/2022
        _1_9999_9933 "EPOCH-R", 'CS 13/12/2022
        _3_0022_0022 "Epoetin", 'UDSH 23/06/2023
        _1_7714_7714 "Epoetin alpha", 'UDSH 23/06/2023
        _2_7714_7712 "Epogen", 'UDSH 23/06/2023
        _3_9999_9993 "EPomd (elotuzumab + pomalidomide + dex)", 'UDSH ADDED ON 31/03/2023
        _1_6071_6071 "Epothilone", '        _2_7626_7626 "Equidacent", '8/10/20 CS
        _2_6757_7626 "Equidacent", '8/10/20 CS 'CS Amended category to use 4 digit generic pre 2022 Q1
        _2_6084_6692 "Erbitux",
        _3_9999_9992 "ERd (elotuzumab + lenalidomide + dex)", 'UDSH ADDED ON 31/03/2023
        _1_7563_7563 "Erdafitinib", ' CS Added 7563 16/4/19
        _1_7065_7065 "Eribulin",
        _2_7703_7703 "Erikon", 'UDSH ADDED ON 28/03/2023
        _2_7405_7405 "Erivedge",
        _2_7527_7527 "Erleada",
        _1_5464_5464 "Erlotinib",
        _2_0059_1157 "Erwinase",
        _2_0059_0059 "Erwinia chrysanthemi L-asparaginase", ' CS 23/7/21 This code to be removed from metadata pre Q4 21. replaced by _3_0059_1157
        _3_0059_1157 "Erwinia chrysanthemi L-asparaginase", 'UDSH ADDED 05/08/2021
        _1_0022_0022 "Erythropoietin", 'UDSH 23/06/2023
        _1_9999_9950 "ESHAP", 'UDSH 21/12/2022
        _1_9999_9931 "ESHAP-R", 'CS 13/12/2022
        _2_0253_0251 "Estracyt",
        _1_7226_7226 "Estradiol",
        _1_0253_0253 "Estramustine",
        _3_0820_0820 "Estrogen",
        _1_5461_5461 "Ethanol",
        _1_0741_0741 "Ethinylestradiol",
        _1_0255_0255 "Etoposide",
        _1_7007_7007 "Everolimus",
        _2_6927_7238 "Evoltra", '========UDSH Added on 1/12/2020
        _2_0684_6204 "Exal", '        _1_5036_5036 "Exatecan",
        _1_5158_5158 "Exemestane",
        _2_7659_7659 "Exkivity", '========UDSH Added on 20/09/2021
        _2_7692_7692 "Ezharmia", 'UDSH Added on 06/01/2023
        _1_7594_7594 "Fam-Trastuzumab Deruxtecan", '========UDSH Added on 08/01/2020
        _2_0591_3181 "Fareston",
        _2_0247_0261 "Farmorubicin",
        _2_7257_7257 "Farydak",
        _2_5231_6726 "Faslodex",
        _1_6762_6762 "Fazarabine",
        _1_9999_9961 "FCM", 'UDSH 21/12/2022
        _2_9999_9961 "FMC", 'UDSH 21/12/2022
        _1_9999_9945 "FCR", 'CS 13/12/2022
        _1_7589_7589 "Fedratinib",
        _2_1092_0807 "Femara",
        _2_1023_6816 "Feron",
        _2_0627_5249 "Fildesin",
        _1_5402_5402 "Finasteride", ' CS added 14/08/2019
        _1_9999_9964 "FLAG-Ida", 'UDSH 21/12/2022
        _1_9999_9017 "FLOT", 'UDSH 11/08/2023
        _2_0813_5146 "Fludara",
        _1_0813_0813 "Fludarabine", '        _1_0266_0266 "Fluocortolone",
        _1_7601_7601 "Flumatinib", ' UDSH added 21/01/2020
        _1_0002_0002 "Fluorouracil",
        _1_0268_0268 "Flutamide",
        _1_7640_7640 "Fluzoparib", '=============UDSH ADDED NEW BRAND ON 12/03/2021
        _2_7596_7596 "Focus V", ' UDSH added 21/01/2020
        _1_9999_9903 "FOLFIRI",
        _1_9999_9904 "FOLFIRINOX/FOLFOXIRI",
        _1_9999_9905 "FOLFOX",
        _1_0270_0270 "Folinic acid", '        _1_1069_1069 "Fosfestrol sodium",
        _1_7521_7521 "Forodesine Hydrochloride",
        _1_0272_0272 "Fotemustine",
        _2_7519_7519 "Fotivda",
        _1_9999_9018 "FR (fludarabine + rituximab)", 'UDSH 16/08/2023
        _1_7541_7541 "Fruquintinib", ' UDSH added 21/01/2020
        _1_5231_5231 "Fulvestrant",
        _1_7679_7679 "Furmonertinib", '=============UDSH ADDED ON 23/05/2022
        _2_0275_5247 "Furtulon",
        _1_7685_7685 "Futibatinib", 'UDSH added 06/10/2022
        _2_0572_6255 "Futraful", '        _1_6858_6858 "Ganglioside Vaccine",
        _2_9999_9002 "G-Benda (bendamustine + obinutuzumab)", 'UDSH ADDED ON 31/03/2023
        _1_9999_9941 "G-CHOP", 'CS 13/12/2022
        _1_9999_9942 "G-CVP", 'CS 13/12/2022
        _2_7623_7623 "Gavreto", '11/9/20 CS
        _2_6777_6777 "Gazyva",
        _3_9999_9937 "GCVP-R", 'CS 13/12/2022
        _1_9999_9938 "GDP", 'CS 13/12/2022
        _1_9999_9935 "GDP-R", 'CS 13/12/2022
        _1_9999_9020 "GemOx", 'UDSH 01/09/2023
        _3_9999_9929 "GemOx-R", 'CS 13/12/2022
        _1_6587_6587 "Gefitinib", '        _1_7106_7106 "Gelatin", ' CS pre q2 2020 removed
        '        _2_7295_6261 "Gelfoam", ' CS pre q2 2020 removed
        '        _2_7106_7106 "Gelpart", ' CS pre q2 2020 removed
        _1_0792_0792 "Gemcitabine",
        _1_5341_5341 "Gemtuzumab ozogamicin",
        _2_0792_5149 "Gemzar",
        _1_7547_7547 "Gilteritinib",
        _2_7320_7233 "Giotrif",
        _2_6859_6859 "Glakay",
        _1_7551_7551 "Glasdegib",
        _1_7715_7715 "Glofitamab", 'UDSH ADDED on 04/07/2023
        _2_6549_5343 "Glivec", '        _1_5025_5025 "GnRH analogue",
        _2_7231_7398 "Gonax",
        _1_0728_0728 "Goserelin",
        _1_9999_9918 "GVD", ' CS pre Q2 2022
        _2_7065_7065 "Halaven",
        _2_7684_7684 "Hansezoid", 'UDSH ADDED THIS DRUG ON 23/06/2022
        _2_5307_2003 "Herceptin",
        _3_5307_2003 "Herceptin Hylecta", '        _2_7525_7525 "Herzuma",
        _2_5307_7525 "Herzuma", 'CS Amended category to use 4 digit generic pre 2022 Q1
        _1_6941_6941 "Histrelin Acetate", '        _2_1069_1069 "Honvan",
        _2_7657_7657 "Hiyasta", '=============UDSH ADDED NEW BRAND ON 20/09/2021
        _2_0435_1096 "Hycamtin",
        _2_0308_0850 "Hydrea",
        _1_0306_0306 "Hydrocortisone", '        _1_0870_0870 "Hydroxyprogesterone",
        _1_0308_0308 "Hydroxyurea",
        _2_9999_9005 "HyperCVAD/MA", 'UDSH ADDED ON 19/04/2023
        _1_9999_9005 "HyperCVAD (part A + part B)", 'UDSH ADDED ON 31/03/2023
        _2_9999_9004 "HyperCVAD-R (part A + part B)", 'UDSH ADDED ON 31/03/2023
        '        _1_9999_9956 "HyperCVAD (part A)", 'UDSH 21/12/2022 Codes removed when combined Hypercvad AB codes added
        '        _1_9999_9957 "HyperCVAD (part B)", 'UDSH 21/12/2022
        '        _2_9999_9948 "HyperCVAD-R (part A)", 'UDSH 21/12/2022
        '        _2_9999_9949 "HyperCVAD-R (part B)", 'UDSH 21/12/2022
        _2_6677_5265 "Hysron",
        _2_0140_6936 "IA Call",
        _2_7455_7455 "Ibrance",
        _1_6763_6763 "Ibritumomab Tiuxetan",
        _1_7424_7424 "Ibrutinib",
        _1_9999_9919 "ICE", ' CS pre Q2 2022
        _3_9999_9920 "ICE-R", ' CS pre Q2 2022
        _1_7357_7357 "Icotinib", '=============UDSH ADDED NEW BRAND ON 12/03/2021
        _2_7322_7322 "Iclusig",
        _1_9999_9974 "Id (ixazomib + dexamethasone)", 'UDSH 10/01/2023
        _2_0311_6207 "Idamycin",
        _1_0311_0311 "Idarubicin",
        _1_7645_7645 "Idecabtagene vicleucel", '=============UDSH ADDED NEW BRAND ON 07/04/2021
        _1_7463_7463 "Idelalisib",
        _2_7505_7505 "Idhifa",
        _2_0314_7585 "Ifex",
        _2_0314_6197 "Ifomide",
        _1_0314_0314 "Ifosfamide",
        _1_9999_9968 "IGEV", 'UDSH 21/12/2022
        _1_6549_6549 "Imatinib mesylate",
        _2_7424_7424 "Imbruvica", '        _1_6971_6971 "Imiquimodum",
        _1_7716_7716 "Imetelstat", 'UDSH 11/07/2023
        _2_7500_7500 "Imfinzi",
        _2_7049_7049 "Imjudo", 'CS ADDED ON 14/12/2022
        _2_7488_7488 "Imlygic",
        _2_0071_5208 "ImmuCyst",
        _2_0071_6975 "Immunobladder", '        _1_4001_4001 "Imovax",
        _2_6843_6843 "Imunomax", 'UDSH ADDED CODE FOR JAPAN ON 20/09/2022
        _2_7292_7569 "Imnovid", 'Added by Shashank - 17th Dec'18 - Q1 2019 changes
        _2_0327_6273 "Imunace",
        _2_7239_7239 "Inlyta",
        _1_7506_7506 "Inotuzumab ozogamicin",
        _2_7617_7617 "Inqovi", '==========UDSH ADDED NEW CODE ON 15/07/2020
        _2_7704_7704 "Intari", 'UDSH ADDED ON 28/03/2023
        _2_7589_7589 "Inrebic",
        _1_0530_0530 "Interferon Alpha",
        _1_7112_7112 "Interferon Alpha 2a",
        _1_6307_6307 "Interferon Alpha 2b",
        _1_7225_7225 "Interferon alpha n3",
        _1_1023_1023 "Interferon Beta",
        _1_6843_6843 "Interferon-Y", 'UDSH ADDED CODE FOR JAPAN ON 20/09/2022
        _1_0326_0326 "Interleukin",
        _1_0327_0327 "Interleukin-2",
        _1_7643_7643 "Inetetamab", '=============UDSH ADDED NEW BRAND ON 12/03/2021
        _1_7653_7653 "Infigratinib", ' CS 9/7/21
        _2_6307_5274 "Intron-A", '        _1_3008_3008 "Iodine-131",
        _1_7533_7533 "Iobenguane 131", '        _1_6029_6029 "Iodised oil",        
        _1_7025_7025 "Ipilimumab",
        _1_9999_9975 "IRd (ixazomib + lenalidomide + dex)", 'UDSH 10/01/2023
        _2_6587_5301 "Iressa",
        _1_0995_0995 "Irinotecan",
        _2_9999_9003 "Isa-Cd (isatuximab + carfilzomib + dex)", 'UDSH ADDED ON 31/03/2023
        _1_9999_9006 "Isa-d (isatuximab + dexamethasone)", 'UDSH ADDED ON 31/03/2023
        _1_9999_9003 "Isa-Kd (isatuximab + carfilzomib + dex)", 'UDSH ADDED ON 31/03/2023
        _1_9999_9994 "Isa-Pd (isatuximab + pomalidomide + dex)", 'UDSH 10/01/2023
        _2_9999_9994 "IsaPomD (isatuximab + pomalidomide + dex)", 'UDSH ADDED ON 31/03/2023
        _1_7603_7603 "Isatuximab",
        _1_1085_1085 "Isotretinoin",
        _2_7336_7336 "Istodax",
        _2_7679_7679 "Ivesa", '=============UDSH ADDED ON 23/05/2022
        _1_7534_7534 "Ivosidenib",
        _1_7037_7037 "Ixabepilone",
        _1_7440_7440 "Ixazomib",
        _2_7037_7037 "Ixempra",
        _2_7368_7368 "Jakavi",
        _2_7694_7694 "Jaypirca", 'UDSH 03/02/2023
        _2_7649_7649 "Jemperli", 'UDSH ADDED ON 10/05/2021
        _2_7683_7683 "Jeselhy", 'UDSH ADDED THIS DRUG ON 23/06/2022
        _2_7290_7290 "Jevtana",
        _2_7302_7302 "Kadcyla", '        _2_7528_7528 "Kanjinti",
        _2_7710_7710 "Kainitan", 'UDSH ADDED ON 29/05/2023
        _2_5307_7528 "Kanjinti", 'CS Amended category to use 4 digit generic pre 2022 Q1
        _1_9999_9978 "Kd (carfilzomib + dexamethasone)", 'UDSH 10/01/2023
        _3_9999_9979 "KdD (daratumumab + carfilzomib + dex)", 'UDSH 10/01/2023
        _1_9999_9988 "KPd (carfilzomib + pomalidomide + dex)", 'UDSH 10/01/2023
        _1_3245_3245 "Ketoconazole",
        _2_7446_7446 "Keytruda",
        _2_7718_7718 "Kimmtrak", 'UDSH ADDED ON 18/08/2023
        _3_7480_7480 "Kisplyx",
        _2_7497_7497 "Kisqali",
        _2_7690_7690 "Krazati", 'UDSH ADDED ON 19/12/2022
        _1_9999_9976 "KRd (carfilzomib + lenalidomide + dex)", 'UDSH 10/01/2023
        _2_7523_7523 "Kymriah",
        _2_7393_7393 "Kyprolis",
        _1_5028_5028 "Lanreotide",
        _1_7040_7040 "Lapatinib ditosylate", '        _1_6984_6984 "Larotaxel",
        _1_7552_7552 "Larotrectinib",
        _2_7495_7495 "Lartruvo",
        _1_6247_6247 "L-Asparaginase",
        _2_0255_5038 "Lastet",
        _1_7644_7644 "Lazertinib", '=============UDSH ADDED NEW BRAND ON 07/04/2021
        _2_9999_9972 "Ld (lenalidomide + dexamethasone)", 'UDSH ADDED ON 31/03/2023
        _2_7644_7644 "Leclaza", '=============UDSH ADDED NEW BRAND ON 07/04/2021
        _2_0202_7308 "Lenadex",
        _1_6937_6937 "Lenalidomide",
        _1_7480_7480 "Lenvatinib",
        _2_7480_7480 "Lenvima", '        _1_3051_3051 "Lesovolin",
        _1_1092_1092 "Letrozole",
        _2_0270_0351 "Leucovorin",
        _2_0004_6826 "Leukerin",
        _2_6247_6247 "Leunase",
        _2_0160_6057 "Leuplin",
        _2_0160_7486 "Leuplin PRO",
        _2_0160_6529 "Leuplin SR",
        _2_0160_5023 "Leuprolide",
        _1_0160_0160 "Leuprorelin",
        _2_1110_1000 "Leustatin",
        _2_0076_7314 "Levact", '        _1_6136_6136 "LHRH analogue",
        '        _2_6029_6029 "Lipiodol",
        _2_7540_7540 "Libtayo",
        _1_7704_7704 "Linperlisib", 'UDSH ADDED ON 28/03/2023
        _1_1073_1073 "Liposomal Daunorubicin",
        _1_7504_7504 "Liposomal Docetaxel", '==UDSH ADDED on 06/11/2019
        _1_6640_6640 "Liposomal Doxorubicin",
        _1_7487_7487 "Liposomal Irinotecan",
        _1_7468_7468 "Liposomal Vincristine",
        _1_7636_7636 "Lisocabtagene-maraleucel", '===========UDSH ADDED on 11/02/2021
        _1_0841_0841 "Lobaplatin", '==UDSH ADDED on 01/06/2020
        _1_0365_0365 "Lomustine",
        _1_7650_7650 "Loncastuximab tesirine", 'UDSH ADDED ON 10/05/2021
        _2_7462_7462 "Lonsurf",
        _2_7546_7546 "Lorbrena",
        _1_7546_7546 "Lorlatinib",
        _2_7546_7572 "Lorviqua",
        _2_7652_7652 "Lumakras", ' CS 9/7/21
        _2_7538_7538 "Lumoxiti",
        _2_7695_7695 "Lunsumio", 'UDSH 03/02/2023
        _2_0160_6056 "Lupron",
        _1_7611_7611 "Lurbinectedin",
        _1_7691_7691 "Luspatercept", 'CS 21/12/22
        _2_7536_7536 "Lutathera",
        _1_7536_7536 "Lutetium Lu 177 dotatate",
        _1_7674_7674 "Lutetium Lu 177 vipivotide tetraxetan", 'UDSH ADDED on 30/03/2022
        _2_7294_7294 "Lynparza",
        _2_7685_7685 "Lytgobi", 'UDSH added 06/10/2022
        _2_6862_6086 "MabCampath",
        _3_0094_6531 "Mablin", '============UDSH ADDED NEW CODE ON 1/12/2020. This code to be removed after Q4-2021. This is replaced with _2_0094_7663
        _2_0094_7663 "Mablin", '============UDSH ADDED NEW CODE ON 1/12/2020
        _2_1159_1158 "Mabthera",
        _3_9999_9943 "MAE", 'CS 13/12/2022
        _1_7631_7631 "Margetuximab", '============UDSH ADDED NEW CODE ON 21/12/2020
        _2_7631_7631 "Margenza", '============UDSH ADDED NEW CODE ON 21/12/2020        
        _2_7468_7468 "Marqibo",
        _2_0140_6925 "Maruko",
        _1_9999_9013 "MEAM", 'UDSH ADDED ON 31/03/2023
        _1_9999_9943 "MEC", 'CS 13/12/2022
        _3_0415_0380 "Mechlorethamine", 'CS pre Q2 2022 alternative generic name for Mustine
        _2_0005_0381 "Medrol",
        _1_6677_6677 "Medroxyprogesterone",
        _1_0383_0383 "Megestrol",
        _2_7427_7427 "Mekinist",
        _2_7530_7530 "Mektovi", '        _1_1119_1119 "Melloretamima",
        _1_0386_0386 "Melphalan",
        _1_7637_7637 "Melphalan Flufenamide", '============UDSH ADDED NEW CODE ON 08/03/2021
        _1_6859_6859 "Menatetrenone",
        _1_0004_0004 "Mercaptopurine",
        _1_0743_0743 "Methenolone",
        _1_0392_0392 "Methotrexate", '        _1_7073_7073 "Methyl aminolevulinate",
        _1_0005_0005 "Methylprednisolone",
        _1_7265_7265 "Midostaurin",
        _2_7273_7273 "Miripla",
        _1_7273_7273 "Miriplatin", '        _1_0401_0401 "Mitoguazone",
        _1_0402_0402 "Mitomycin",
        _1_0403_0403 "Mitotane",
        _1_0405_0405 "Mitoxantrone",
        _1_7688_7688 "Mirvetuximab soravtansine", 'UDSH ADDED ON 18/11/2022
        _1_9999_9014 "mLSG15 (VCAP/AMP/VECP)", 'UDSH ADDED ON 20/04/2023
        _1_7659_7659 "Mobocertinib", '============UDSH ADDED NEW CODE ON 20/09/2021
        _1_7384_7384 "Mogamulizumab", '        _1_7087_7087 "Mometasone Furoate",
        _2_7620_7620 "Monjuvi", '6/8/20 CS
        _1_7695_7695 "Mosunetuzumab", '        _1_5200_5200 "Multialchilpeptide",
        _1_7538_7538 "Moxetumomab Pasudotox",
        _2_7590_7590 "Mozobil", '==========UDSH ADDED ON 06/11/2019
        _2_9999_9980 "MPV", 'UDSH 10/01/2023
        _2_7521_7521 "Mundesine",
        _1_0415_0415 "Mustine", '        _2_7508_7508 "Mvasi",
        _2_6757_7508 "Mvasi", 'CS Amended category to use 4 digit generic pre 2022 Q1        
        _2_0094_0416 "Myleran", '==========UDSH ADDED ON 1/08/2019
        _2_5341_5341 "Mylotarg",
        _2_6640_5361 "Myocet",
        _1_6939_6939 "Nab-Paclitaxel",
        _1_7701_7701 "Nadofaragene firadenovec", 'UDSH ADDED ON 27/03/2023
        _1_9999_9999 "NALIRIFOX", 'UDSH ADDED ON 24/02/2023
        _2_0513_0421 "Natulan",
        _2_0856_0423 "Navelbine",
        _1_7630_7630 "Naxitamab", '==========UDSH ADDED NEW CODE ON 21/12/2020
        _1_7291_7291 "Necitumumab",
        _1_5250_5250 "Nedaplatin",
        _1_7093_7093 "Nelarabine",
        _2_0173_6725 "Neoral",
        _1_7288_7288 "Neratinib",
        _2_7668_7668 "Nerlik", 'UDSH ADDED ON 24/02/2022
        _2_7288_7288 "Nerlynx",
        _2_6952_6845 "Nexavar",
        _3_7584_7584 "Nexpovio", '=======Uday added on 22/07/2022
        _2_0432_6205 "Nidran",
        _1_7026_7026 "Nilotinib",
        _1_5007_5007 "Nilutamide",
        _1_7356_7356 "Nimotuzumab", 'UDSH Added on 05/11/2019
        _1_0432_0432 "Nimustine",
        _2_7440_7440 "Ninlaro",
        _1_6629_6629 "Nintedanib",
        _1_7477_7477 "Niraparib",
        _1_7719_7719 "Niraparib + abiraterone [Akeega]", 'UDSH ADDED ON 18/08/2023
        _2_0415_0433 "Nitrogen Mustard", '==========UDSH ADDED ON 1/08/2019
        _1_7431_7431 "Nivolumab",
        _1_7673_7673 "Nivolumab + relatlimab", 'UDSH ADDED on 30/03/2022
        _2_0570_0902 "Nolvadex", '        _1_7212_7212 "Nomegestrol Acetate",
        _2_0405_0445 "Novantrone",
        _2_7588_7588 "Nubeqa",
        _2_9999_9941 "O-CHOP", 'UDSH ADDED ON 31/03/2023
        _2_9999_9942 "O-CVP", 'UDSH ADDED ON 31/03/2023
        _1_6777_6777 "Obinutuzumab", '        _1_7217_7217 "Oblimersen",
        _1_2008_2008 "Octreotide",
        _2_7484_7484 "Odomzo",
        _2_0268_6100 "Odyne",
        _1_0820_0820 "Oestrogen",
        _1_7188_7188 "Ofatumumab", '        _2_7520_7520 "Ogivri",
        _2_5307_7520 "Ogivri", 'CS Amended category to use 4 digit generic pre 2022 Q1
        _1_7294_7294 "Olaparib",
        _1_7495_7495 "Olaratumab",
        _1_7689_7689 "Olutasidenib", 'UDSH ADDED ON 9/12/2022
        _1_7668_7668 "Olverembatinib", 'UDSH ADDED ON 24/02/2022
        _1_7411_7411 "Omacetaxine Mepesuccinate", '        _2_7647_7647 "Onbevzi", '=============UDSH ADDED NEW BRAND ON 14/04/2021
        _2_6757_7647 "Onbevzi", '=============UDSH ADDED NEW BRAND ON 14/04/2021 'CS Amended category to use 4 digit generic pre 2022 Q1
        _2_6534_6534 "Oncaspar",
        _2_0626_0453 "Oncovin",
        _2_1071_7328 "One Taxotere",
        _2_7487_7487 "Onivyde",
        _2_6779_6779 "Ontak", '=============UDSH ADDED NEW BRAND ON 28/01/2021
        '        _2_7517_7517 "Ontruzant",
        _2_5307_7517 "Ontruzant", 'CS Amended category to use 4 digit generic pre 2022 Q1
        _2_0065_7622 "Onureg", '=============UDSH ADDED NEW BRAND ON 7/09/2020
        _2_7431_7431 "Opdivo",
        _1_7526_7526 "Optune device",
        _2_7673_7673 "Opdualag", 'UDSH ADDED on 30/03/2022
        _1_7638_7638 "Orelabrutinib", '=============UDSH ADDED NEW BRAND ON 12/03/2021
        _2_0202_6516 "Orgadrone",
        _2_7632_7632 "Orgovyx", '=============UDSH ADDED NEW BRAND ON 28/01/2021
        _2_7678_7678 "Orpathys", '=============UDSH ADDED ON 23/05/2022
        _2_7693_7693 "Orserdu", 'UDSH 03/02/2023
        _1_7470_7470 "Osimertinib",
        _1_0976_0976 "Oxaliplatin", '        _2_7648_7648 "Oyavas", '=============UDSH ADDED NEW BRAND ON 14/04/2021
        _2_6757_7648 "Oyavas", '=============UDSH ADDED NEW BRAND ON 14/04/2021 'CS Amended category to use 4 digit generic pre 2022 Q1
        _1_3194_3194 "Paclitaxel",
        _2_3194_7118 "Paclitaxel inj. NK",
        _1_7671_7671 "Pacritinib", 'UDSH ADDED on 30/03/2022
        _1_9999_9995 "PAD", 'UDSH 10/01/2023
        _2_7593_7593 "Padcev", '==========UDSH added on 08/01/2020
        _1_7455_7455 "Palbociclib",
        _1_7680_7680 "Pamiparib", '=============UDSH ADDED ON 23/05/2022
        _1_7055_7055 "Panitumumab",
        _1_7257_7257 "Panobinostat",
        _2_0104_0475 "Paraplatin",
        _1_7139_7139 "Pazopanib",
        _1_9999_9996 "PCd (pomalidomide + cyclophosphamide + dex)", 'UDSH 10/01/2023
        _1_9999_9019 "PCR", 'UDSH 16/08/2023
        _1_9999_9985 "Pd (pomalidomide + dexamethasone)", 'UDSH 10/01/2023
        _3_6534_6534 "Peg-L-asparaginase",
        _2_6538_6538 "Pegasis",
        _1_6534_6534 "Pegaspargase",
        _2_6277_6277 "Pegintron", '        _1_5017_5017 "Pegylated Interferon",
        _1_6538_6538 "Pegylated Interferon alpha 2a",
        _1_6277_6277 "Pegylated Interferon alpha 2b",
        _1_5313_5313 "Pegylated Liposomal Doxorubicin",
        _2_7604_7604 "Pemazyre", '==========UDSH added on 24/04/2020
        _1_7446_7446 "Pembrolizumab",
        _1_1076_1076 "Pemetrexed",
        _1_7604_7604 "Pemigatinib", '==========UDSH added on 24/04/2020
        _1_7667_7667 "Penpulimab", 'UDSH ADDED ON 24/02/2022
        _1_0481_0481 "Pentostatin",
        _2_7637_7637 "Pepaxto", '==========UDSH added on 08/03/2021
        _2_5261_5261 "Pepleo",
        _1_5261_5261 "Pepleomycin", '        _1_7105_7105 "Peptide vaccine",
        _2_6235_6235 "Perazolin",
        _2_7205_7205 "Perjeta",
        _1_7205_7205 "Pertuzumab",
        _1_7616_7616 "Pertuzumab + trastuzumab [Phesgo]", '==========UDSH added on 02/07/2020 CS 20/7/20 Label amended
        _2_7616_7616 "Phesgo", '==========UDSH added on 02/07/2020
        _1_5245_5245 "Picibanil",
        _1_7683_7683 "Pimitespib", 'UDSH ADDED THIS DRUG ON 23/06/2022
        _2_0772_6033 "Pinorubin",
        _1_0493_0493 "Pipobroman",
        _2_7576_7576 "Piqray",
        _1_0772_0772 "Pirarubicin",
        _1_7694_7694 "Pirtobrutinib", 'UDSH 03/02/2023
        _1_7380_7380 "Pixantrone",
        _2_7380_7380 "Pixuvri",
        _2_0140_6938 "Platosin",
        _1_7590_7590 "Plerixafor", '=====UDSH added on 06/11/2019 new code
        _2_7674_7674 "Pluvicto", 'UDSH ADDED on 30/03/2022
        _1_7581_7581 "Polatuzumab vedotin", '=====uday added on 25/07/2019 new code
        _1_9999_9927 "Pola-BR", 'CS 13/12/2022
        _1_9999_9926 "Pola-R-CHP", 'UDSH ADDED ON 12/10/2022
        _2_7581_7582 "Polivy", '=====uday added on 25/07/2019 new code ' BAD CODE TO BE REMOVED REPLACED BY OTHER POLIVY CODE
        _2_7581_7581 "Polivy", '=====uday added on 22/04/2020 new code
        _1_9999_9924 "Polivy + R-CHP", 'UDSH ADDED ON 12/10/2022
        _2_9999_9996 "PomCyDex", 'UDSH 10/01/2023
        _2_9999_9985 "PomDex", 'UDSH 10/01/2023
        _1_7292_7292 "Pomalidomide",
        _2_7292_7292 "Pomalyst",
        _1_9999_9965 "POMP", 'UDSH 21/12/2022
        _1_7322_7322 "Ponatinib",
        _2_7291_7291 "Portrazza",
        _2_7384_7384 "Poteligeo",
        _1_7334_7334 "Pralatrexate",
        _1_7623_7623 "Pralsetinib", '11/9/20 CS
        _1_0505_0505 "Prednis(ol)one",
        _2_0505_6041 "Predonine",
        _2_0743_0510 "Primobolan",
        _1_0513_0513 "Procarbazine",
        _2_7714_7713 "Procrit", 'UDSH 23/06/2023
        _2_5402_6981 "Proscar", ' CS added 14/08/2019
        _2_7326_7326 "Provenge",
        _2_0741_6264 "Prosexol",
        _2_6332_6034 "Prostal",
        _1_7705_7705 "Pucotenlimab", 'UDSH ADDED ON 28/03/2023
        _2_7705_7705 "Puyouheng", 'UDSH ADDED ON 28/03/2023
        _2_9999_9986 "PVd (bortezomib + pomalidomide + dex)", 'UDSH 10/01/2023
        _1_7599_7599 "Pyrotinib", ' UDSH added 21/01/2020
        _2_7610_7610 "Qinlock", 'UDSH ADDED on 02/06/2020
        _1_7582_7582 "Quizartinib", '=====uday added on 25/07/2019 new code
        _1_9999_9001 "R2 (lenalidomide + rituximab)", 'UDSH ADDED ON 31/03/2023
        _1_9999_9972 "Rd (lenalidomide + dexamethasone)", 'UDSH 10/01/2023
        _2_9999_9951 "REI", 'UDSH 21/12/2022
        _2_9999_9928 "R-Benda", 'UDSH ADDED ON 31/03/2023
        _1_9999_9952 "R-CDOP", 'UDSH 21/12/2022
        _1_9999_9954 "R-CEPP", 'UDSH 21/12/2022
        _1_9999_9939 "R-CEOP", 'CS 13/12/2022
        _1_9999_9932 "R-CHOEP", 'CS 13/12/2022
        _2_9999_9902 "R-CHOP", ' added pre q4 2020
        _1_9999_9925 "R-CHP + Polivy", 'UDSH ADDED ON 12/10/2022
        _1_9999_9958 "R-CODOX-M ", 'UDSH 21/12/2022
        _1_9999_9922 "R-CVP", ' CS pre Q2 2022
        _1_9999_9010 "R-DeViC", 'UDSH ADDED ON 31/03/2023
        _3_9999_9930 "R-DHAP", 'CS 13/12/2022
        _3_9999_9936 "R-DHAX", 'CS 13/12/2022
        _3_9999_9933 "R-EPOCH", 'CS 13/12/2022
        _3_9999_9931 "R-ESHAP", 'CS 13/12/2022
        _1_9999_9960 "R-FCM", 'UDSH 21/12/2022
        _2_9999_9960 "R-FMC", 'UDSH 21/12/2022
        _1_9999_9937 "R-GCVP", 'CS 13/12/2022
        _3_9999_9935 "R-GDP", 'CS 13/12/2022
        _1_9999_9929 "R-GemOx", 'CS 13/12/2022
        '        _1_9999_9948 "R-HyperCVAD (part A)", 'UDSH 21/12/2022
        '        _1_9999_9949 "R-HyperCVAD (part B)", 'UDSH 21/12/2022
        _3_9999_9004 "R-HyperCVAD/MA", 'UDSH ADDED ON 19/04/2023
        _1_9999_9004 "R-HyperCVAD (part A + part B)", 'UDSH ADDED ON 31/03/2023
        _1_9999_9920 "R-ICE", ' CS pre Q2 2022
        _1_9999_9951 "R-IFE", 'UDSH 21/12/2022
        _1_9999_9008 "R-THP-COP", 'UDSH ADDED ON 31/03/2023
        _1_7255_7255 "Radium 223 dichloride",
        _2_7533_7675 "Raiatt MIBG-I 131", 'UDSH ADDED on 30/03/2022
        _1_6504_6504 "Raloxifene", ' CS added 14/08/2019
        _1_3021_3021 "Raltitrexed",
        _1_7379_7379 "Ramucirumab",
        _2_0140_5244 "Randa",
        _1_6337_6337 "Ranimustine",
        _2_7691_7691 "Reblozyl", 'CS 21/12/22
        _1_7332_7332 "Regorafenib",
        _1_7681_7681 "Relmacabtagene autoleucel", '=============UDSH ADDED ON 23/05/2022
        _1_7632_7632 "Relugolix", 'UDSH ADDED on 28/01/2021
        _2_6779_7655 "Remitoro", ' CS 2/8/21
        _2_7714_7532 "Retacrit", 'UDSH 23/06/2023
        _1_7702_7702 "Retifanlimab", 'UDSH ADDED ON 28/03/2023
        _2_7608_7608 "Retsevmo", 'UDSH changed the spelling from Retevmo to Retsevmo on 9/12/2022
        _2_6937_6937 "Revlimid", '        _1_6502_6502 "Ribavirin",
        '        _2_7633_7633 "Riabni", 'UDSH ADDED on 08/02/2021
        _2_7689_7689 "Rezlidhia", 'UDSH ADDED on 09/12/2022
        _2_1159_7633 "Riabni", 'CS Amended category to use 4 digit generic pre 2022 Q1
        _1_7497_7497 "Ribociclib",
        _2_0079_5258 "Rinderon",
        _1_7707_7707 "Ripertamab", 'UDSH ADDED ON 28/03/2023
        _1_7610_7610 "Ripretinib", 'UDSH ADDED on 02/06/2020
        '        _2_7514_7514 "Ritemvia",
        _2_1159_7514 "Ritemvia", 'CS Amended category to use 4 digit generic pre 2022 Q1
        _2_1159_6202 "Rituxan",
        _1_1159_1159 "Rituximab",
        _2_1159_7502 "Rituximab Biosimilar", '        _2_7502_7502 "Rituximab Biosimilar",
        '        _2_7515_7515 "Rituzena",
        _2_1159_7515 "Rituzena", 'CS Amended category to use 4 digit generic pre 2022 Q1
        '        _2_7503_7503 "Rixathon",
        _2_1159_7503 "Rixathon", 'CS Amended category to use 4 digit generic pre 2022 Q1
        '        _2_7516_7516 "Riximyo",
        _2_1159_7516 "Riximyo", 'CS Amended category to use 4 digit generic pre 2022 Q1
        _1_7336_7336 "Romidepsin", '        _1_7234_7234 "Romiplostim",
        _1_7665_7665 "Ropeginterferon alpha 2b", ' 1/12/21 CS
        _2_7583_7583 "Rozlytrek", '=======Uday added on 25/07/2019
        _2_7478_7478 "Rubraca",
        _1_7478_7478 "Rucaparib",
        _2_1159_7592 "Ruxience", '        _2_7592_7592 "Ruxience", '============UDSH ADDED THIS NEW ONE AND GOING TO REMOVE _2_1159_7592 ON 6/04/2020
        _1_7368_7368 "Ruxolitinib",
        _1_9999_9908 "RVd",
        _2_7651_7651 "Rybrevant", '=======Uday added on 28/05/2021
        _2_7265_7265 "Rydapt",
        _2_0059_7654 "Rylase", '=======UDSH Added on 23/07/2021
        _1_5256_5256 "S-1", '        _1_7140_7140 "Sagopilone",
        _1_7606_7606 "Sacituzumab govitecan", '=======UDSH Added on 24/04/2020
        _2_0173_0544 "Sandimmun",
        _2_2008_5010 "Sandostatin",
        _2_0104_7115 "Sandoz", '        _1_7156_7156 "Satraplatin",
        _2_7711_7711 "Sapelin", 'UDSH 09/06/2023
        _2_7603_7603 "Sarclisa",
        _1_7678_7678 "Savolitinib", '=============UDSH ADDED ON 23/05/2022
        _2_7664_7664 "Scemblix", ' CS 1/12/21
        _1_9999_9990 "Sd (selinexor + dexamethasone)", 'UDSH 10/01/2023
        _2_9999_9990 "Sel-dex", 'UDSH 10/01/2023
        _1_7584_7584 "Selinexor", '=======Uday added on 25/07/2019
        _1_7608_7608 "Selpercatinib",
        _3_7706_7706 "Sepalizumab", 'UDSH ADDED THIS DRUG ON 01/06/2023
        _1_7684_7684 "Serplulimab", 'UDSH ADDED THIS DRUG ON 23/06/2022
        _1_7304_7304 "Siltuximab",
        _1_7597_7597 "Sintilimab injection", ' UDSH added 21/01/2020
        _1_7326_7326 "Sipuleucel-T", '        _1_6443_6443 "Sizofiran",
        '        _2_6047_6047 "Smancs",
        _1_6235_6235 "Sobuzoxane",
        _2_0005_6895 "Sol-Melcort",
        _2_0306_0551 "Solu-Cortef",
        _2_0005_0555 "Solu-Medrol",
        _1_5211_5211 "Somatostatin",
        _2_5028_5001 "Somatuline",
        _1_7484_7484 "Sonidegib", '        _2_6443_6443 "Sonifilan",
        _1_6952_6952 "Sorafenib", '        _2_3024_3024 "Spherex",
        _1_7652_7652 "Sotorasib", ' CS 9/7/21
        '        _2_7295_6046 "Spongel", ' CS pre q2 2020 removed
        _1_9999_9914 "SOX", 'UDSH ADDED on 11/01/2022
        _2_6959_6934 "Sprycel",
        _1_9999_9923 "Stanford V", ' CS pre Q2 2022
        _2_6232_6232 "Starasid",
        _2_7613_7613 "Steboronine", 'UDSH ADDED on 02/07/2020
        _1_0798_0798 "Stilboestrol",
        _2_7332_7332 "Stivarga",
        _1_7711_7711 "Streptococcus A", 'UDSH ADDED ON 09/06/2023
        _1_0683_0683 "Streptozocin",
        _1_1093_1093 "Strontium89",
        _1_7666_7666 "Sugemalimab", 'UDSH ADDED ON 24/02/2022
        _2_7639_7639 "Sulanda", '=============UDSH ADDED NEW BRAND ON 12/03/2021
        _2_0530_6039 "Sumiferon",
        _1_6978_6978 "Sunitinib Malate",
        _2_6658_6240 "Sunrabin",
        _1_7639_7639 "Surufatinib", '=============UDSH ADDED NEW BRAND ON 12/03/2021
        _2_6978_7002 "Sutent",
        _1_9999_9984 "SVd (selinexor + bortezomib + dex)", 'UDSH 10/01/2023
        _2_6277_7587 "Sylatron", ' CS added 14/08/2019
        _2_7304_7304 "Sylvant",
        _2_7609_7609 "Tabrecta", 'UDSH ADDED on 02/06/2020
        _1_7620_7620 "Tafasitamab", '6/8/20 CS
        _2_7396_7396 "Tafinlar",
        _1_7571_7571 "Tagraxofusp", ' CS Added 7571 10/5/19
        _2_7470_7470 "Tagrisso",
        _1_7548_7548 "Talazoparib",
        _1_7488_7488 "Talimogene Laherparepvec (T-VEC)",
        _1_7717_7717 "Talquetamab", 'UDSH ADDED ON 18/08/2023
        _2_7717_7717 "Talvey", 'UDSH ADDED ON 18/08/2023
        _2_7548_7548 "Talzenna",
        _1_7039_7039 "Tamibarotene",
        _1_0570_0570 "Tamoxifen",
        _2_5464_5464 "Tarceva",
        _2_7026_7026 "Tasigna",
        _2_0570_6209 "Tasuomin",
        _2_3194_0848 "Taxol",
        _2_1071_1020 "Taxotere",
        _1_7602_7602 "Tazemetostat", '========UDSH ADDED New Drug on 30/01/2020
        _2_7602_7602 "Tazverik", '========UDSH ADDED New Drug on 30/01/2020
        _1_9999_9909 "TCHP",
        _3_7302_7302 "TDM-1",
        _1_7718_7718 "Tebentafusp", 'UDSH ADDED ON 18/08/2023
        _2_7619_7619 "Tecartus", '6/8/20 CS
        _2_7493_7493 "Tecentriq",
        _1_7687_7687 "Teclistamab", 'UDSH ADDED on 09/11/2022
        _2_7687_7687 "Tecvayli", 'UDSH ADDED on 09/11/2022
        _1_0572_0572 "Tegafur",
        _1_0608_0608 "Tegafur-Uracil",
        _1_7496_7496 "Telotristat ethyl",
        _2_1004_1162 "Temodal",
        _1_1004_1004 "Temozolomide",
        _1_7086_7086 "Temsirolimus", '        _1_7335_7335 "Temurtide",
        _2_7615_7615 "Tepmetko", ' UDSH added 02/07/2020
        _1_7615_7615 "Tepotinib", ' UDSH added 02/07/2020
        _1_0690_0690 "Teniposide",
        _1_7658_7658 "Teserpaturev", ' UDSH added 20/09/2021
        _2_0583_6601 "Tespamin",
        _2_5256_7672 "Teysuno", 'UDSH ADDED on 30/03/2022
        _1_5067_5067 "Thalidomide",
        _2_0772_6251 "Therarubicin",
        _1_6769_6769 "Thiobarbituric Acid",
        _1_0006_0006 "Thioguanine",
        _1_0583_0583 "Thiotepa",
        _2_7534_7534 "Tibsovo",
        _1_9999_9007 "THP-COP", 'UDSH ADDED ON 31/03/2023
        _1_7614_7614 "Tirabrutinib", ' UDSH added 02/07/2020
        _1_7523_7523 "Tisagenlecleucel",
        _1_7600_7600 "Tislelizumab", ' UDSH added 21/01/2020
        _1_7662_7662 "Tisotumab vedotin", ' UDSH added 04/10/2021
        _2_7662_7662 "Tivdak", ' UDSH added 04/10/2021
        _1_7519_7519 "Tivozanib",
        _1_0435_0435 "Topotecan",
        _2_0995_6190 "Topotecin",
        _1_0591_0591 "Toremifene",
        _1_7598_7598 "Toripalimab", ' UDSH added 21/01/2020
        _2_7086_7168 "Torisel",
        _1_3068_3068 "Trabectedin",
        _1_7427_7427 "Trametinib",
        _1_1061_1061 "Trans-retinoic acid",
        _1_5307_5307 "Trastuzumab", '        _2_7518_7518 "Trastuzumab Biosimilar",
        _2_5307_7518 "Trastuzumab Biosimilar", 'CS Amended category to use 4 digit generic pre 2022 Q1
        _3_7594_7594 "Trastuzumab Deruxtecan", '=======UDSH Added on 08/01/2020
        _4_7302_7302 "Trastuzumab Emtansine", 'UDSH ADDED NEW CODE ON 19/09/2022 AS A PART OF Q4-2022 CHANGES.
        _3_7616_7616 "Trastuzumab + pertuzumab [Phesgo]", '20/7/20 CS added as another way of writing generic for 7616
        '        _2_7535_7535 "Trazimera",
        _2_5307_7535 "Trazimera", 'CS Amended category to use 4 digit generic pre 2022 Q1
        _2_0076_7313 "Treakisym", '        _1_7479_7479 "Trebananib",
        _2_0076_7574 "Treanda",
        _1_7049_7049 "Tremelimumab", 'CS ADDED ON 14/12/2022
        _2_0160_6048 "Trenantone",
        _1_0598_0598 "Treosulfan",
        _1_1137_1137 "Tretinoin", '        _1_0600_0600 "Triamcinolone",
        _1_7462_7462 "Trifluridine-tipiracil",
        _1_0731_0731 "Triptorelin",
        _2_6110_6014 "Trisenox",
        _2_7606_7606 "Trodelvy", '=======UDSH Added on 24/04/2020
        _1_0604_0604 "Trofosfamide",
        _2_7653_7653 "Truseltiq", ' CS 9/7/21
        '        _2_7499_7499 "Truxima", '        _2_5256_5256 "TS-1",
        _2_1159_7499 "Truxima", 'CS Amended category to use 4 digit generic pre 2022 Q1
        _2_5256_6963 "TS-1",
        _1_7605_7605 "Tucatinib",
        _1_7657_7657 "Tucidinostat", '=======UDSH Added on 20/09/2021
        _2_7605_7605 "Tukysa", '=======UDSH Added on 24/04/2020
        _2_7598_7598 "Tuoyi", ' UDSH added 21/01/2020
        _2_7040_7213 "Tyverb",
        _2_7597_7597 "Tyvyt", ' UDSH added 21/01/2020
        _1_6035_6035 "Ubenimex",
        _2_0608_0608 "UFT",
        _2_0608_6657 "UFT-E",
        _2_7635_7635 "Ukoniq", '==========UDSH ADDED NEW CODE ON 11/02/2021
        _1_7635_7635 "Umbralisib", '==========UDSH ADDED NEW CODE ON 11/02/2021
        _2_7618_7618 "Unituxin", '==========UDSH ADDED NEW CODE ON 04/08/2020
        _1_6778_6778 "Uramustine",
        _1_7692_7692 "Valemetostat", 'UDSH ADDED on 06/01/2023
        _1_5395_5395 "Valrubicin",
        _1_7072_7072 "Vandetanib",
        _2_7582_7582 "Vanflyta", '========uday added code on 25/07/2019
        _2_6941_7269 "Vantas", ' CS added 14/08/2019
        _2_6629_6629 "Vargatef",
        _2_9999_9971 "VCd (bortezomib + cyclophosphamide + dex)", 'UDSH 10/01/2023
        _1_9999_9982 "Vd (bortezomib + dexamethasone)", 'UDSH 10/01/2023
        _2_7055_6747 "Vectibix",
        _2_6757_7686 "Vegzelma", 'UDSH ADDED on 13/10/2022
        _2_6758_6470 "Velcade",
        _2_7614_7614 "Velexbru", ' UDSH added 02/07/2020
        _1_7327_7327 "Vemurafenib",
        _2_7491_7491 "Venclexta",
        _2_7491_7634 "Venclyxto", ' UDSH added 11/02/2021
        _1_9999_9911 "VEN+R",
        _1_7491_7491 "Venetoclax",
        _2_0255_0622 "Vepeside",
        _2_7511_7511 "Verzenio",
        _2_1137_3072 "Vesanoid",
        _2_0065_6988 "Vidaza",
        _2_7552_7552 "Vitrakvi",
        _1_0684_0684 "Vinblastine",
        _1_0626_0626 "Vincristine",
        _1_0627_0627 "Vindesine",
        _1_5383_5383 "Vinflunine",
        _1_0856_0856 "Vinorelbine",
        _1_7405_7405 "Vismodegib", '        _1_7330_7330 "Volasertib",
        _2_7413_7413 "Vizimpro",
        _1_9999_9980 "VMP", 'UDSH 10/01/2023
        _2_7671_7671 "Vonjo", 'UDSH ADDED on 30/03/2022
        _1_7060_7060 "Vorinostat",
        _2_7139_7252 "Votrient",
        _1_9999_9986 "VPd (bortezomib + pomalidomide + dex)", 'UDSH 10/01/2023
        _3_0255_0622 "VP-16",
        _3_9999_9908 "VRd",
        _1_9999_9969 "VTd (bortezomib + thalidomide + dex)", 'UDSH 10/01/2023
        _2_7507_7507 "Vyxeos",
        _2_7312_7312 "Xalkori",
        _2_3047_3050 "Xeloda",
        _1_9999_9910 "XELOX",
        _2_7496_7496 "Xermelo",
        _2_7255_7255 "Xofigo",
        _2_7547_7547 "Xospata",
        _2_7584_7584 "Xpovio", '=======Uday added on 25/07/2019 
        _2_7400_7400 "Xtandi",
        _2_7025_7025 "Yervoy",
        _2_7524_7524 "Yescarta",
        _2_3068_3068 "Yondelis", '        _1_6933_6933 "ZD 4054",
        '        _2_7203_7399 "Zaltrap",
        _2_7316_7586 "Yonsa", ' CS added 14/08/2019
        _2_7706_7706 "Yutuo", 'UDSH ADDED ON 28/03/2023
        _2_7203_7203 "Zaltrap",
        _2_0683_0641 "Zanosar",
        _1_7591_7591 "Zanubrutinib", '===========UDSH ADDED 25/11/2019
        _2_7477_7477 "Zejula",
        _2_7327_7327 "Zelboraf",
        _2_7676_7676 "Zepsun", '=============UDSH ADDED ON 23/05/2022
        _2_7611_7611 "Zepzelca", '        _2_7624_7624 "Zercepac", '8/10/20 CS
        _2_5307_7624 "Zercepac", 'CS Amended category to use 4 digit generic pre 2022 Q1
        _2_6763_6763 "Zevalin", '        _1_6047_6047 "Zinostatin",
        '        _2_7553_7553 "Zirabev",
        _1_7706_7706 "Zimberelimab", 'UDSH ADDED ON 28/03/2023
        _2_6757_7553 "Zirabev", 'CS Amended category to use 4 digit generic pre 2022 Q1
        _3_7203_7203 "Ziv-Aflibercept",
        _2_0728_0643 "Zoladex",
        _2_0728_6335 "Zoladex-la", ' CS 5356 removed Q1 2019        _1_5356_5356 "Zoledronic acid",
        _2_7060_7060 "Zolinza", ' CS 5356 removed Q1 2019        _2_5356_5356 "Zometa",
        _2_7463_7463 "Zydelig",
        _2_7460_7460 "Zykadia",
        _2_7702_7702 "Zynyz", 'UDSH ADDED ON 28/03/2023
        _2_7650_7650 "Zynlonta", 'UDSH ADDED ON 10/05/2021
        _2_7316_7316 "Zytiga",
        _1_1128_1128 "Trial Drug (SPECIFY)",
        _1_7126_7126 "Other Non-Hormonal (SPECIFY)",
        _1_5020_5020 "Other Hormonal (SPECIFY)"
    };
    NewspaperTypesList "" define
    {
        daily "Daily papers",
        international "international papers",
        Sunday "Sunday papers"
    };
    NewspapersSubList "" define
    {
        use dailypapers sublist -,
        use internationalpapers sublist -,
        use sundaypapers sublist -
    };
    measurelist "" define
    {
        grams "grams",
        kg "kg"
    };
    NewspapersList ""
    define
    {
        use dailypapers -,
        use internationalpapers -,
        use sundaypapers -,
        otherpaper "Other Paper" other(otherPaperDetail "please specify"
            style(
                ZIndex = -20
            )
        text [0..200] )
    } asc;
    FullNewspapersSubList ""
    define
    {
        use dailypapers sublist -,
        use internationalpapers sublist -,
        use sundaypapers sublist -,
        otherpaper "Other Paper" other(otherPaperDetail "please specify"
            style(
                ZIndex = -20
            )
        text [0..200] ),
        noneofthem "none of them"
    } ran;
    dailypapers "Daily Papers" define
    {
        first "1<sup>st</sup> &amp; edition",
        Sun "Sun",
        Mail "The Daily Mail",
        Express "Daily Express",
        Mirror "The Mirror",
        Telegraph "The Daily Telegraph",
        Independent "The Independent",
        Guardian "Guardian",
        star "Daily Star",
        Times "The Times",
        I "i",
        Metro "Metro"
    };
    internationalpapers "" define
    {
        Post "The Washington Post",
        LeMonde "Le Monde",
        Journal "The Wall Street Journal"
    };
    sundaypapers "Sunday" define
    {
        STimes "Sunday Times",
        Observer "Observer",
        STelegraph "Sunday Telegraph"
    };
    tabloidpapers "Tabloids" define
    {
        mail "Daily Mail",
        express "Daily Express",
        first "1<sup>st</sup> edition",
        Sun "Sun",
        Mirror "The Mirror",
        star "Daily Star",
        I "i",
        Metro "Metro"
    };
    broadsheetpapers "Broadsheets" define
    {
        telegraph "The Daily Telegraph",
        times "The Times",
        Independent "The Independent",
        Guardian "Guardian"
    };
    FullPaperList ""
    define
    {
        Sun "Sun",
        Mail "The Daily Mail",
        Express "Daily Express & Scottish Express",
        Mirror "The Mirror",
        Telegraph "The Daily Telegraph",
        Independent "The Independent",
        Guardian "Guardian",
        Star "Daily Star",
        Times "The Times",
        I "i",
        Metro "Metro",
        Post "The Washington Post",
        LeMonde "Le Monde",
        Journal "The Wall Street Journal",
        STimes "Sunday Times",
        Observer "Observer",
        STelegraph "Sunday Telegraph"
    } asc;
    sizeslist "" define
    {
        short "short",
        medium "this is a medium option",
        reallylong "this is a really long option with lots of content that makes everything else seem really small"
    };
    choiceasbuttonslist "" define
    {
        blue "this is a blue button"
            style(
                Control(
                    Type = "Button"
                )
            ),
        pink "this button is a pretty pink"
            style(
                Width = "5em",
                Control(
                    Type = "Button"
                )
            ),
        yellow "highlighter yellow"
            style(
                Control(
                    Type = "Button"
                )
            ),
        lightgreen "what a lovely light green colour this is, who would have thought"
            style(
                Control(
                    Type = "Button"
                )
            ),
        orange "orange"
            style(
                Control(
                    Type = "Button"
                )
            )
    };
    weekdayslistdetail "Week" define
    {
        Mon "Monday",
        Tue "Tuesday",
        Wed "Wednesday",
        Thu "Thursday",
        Fri "Friday"
    };
    weekedndayslistdetail "Weekned" define
    {
        Sat "Saturday",
        Sun "Sunday"
    };
    weekdayslistfull "" define
    {
        use weekdayslistdetail sublist -,
        use weekedndayslistdetail sublist -
    };
    daysoftheweeklist "" define
    {
        Mon "Monday",
        Tue "Tuesday",
        Wed "Wednesday",
        Thu "Thursday",
        Fri "Friday"
    };
    weekdayslist "Week" define
    {
        Mon "Monday",
        Tue "Tuesday",
        Wed "Wednesday",
        Thu "Thursday",
        Fri "Friday"
    };
    MonthList "" define
    {
        Jan "January",
        Feb "February",
        Mar "March",
        Apr "April",
        May "May",
        Jun "June",
        Jul "July",
        Aug "August",
        Sep "September",
        Oct "October",
        Nov "November",
        Dec "December"
    };
    YearList "" define
    {
        year20 "2020",
        year21 "2021",
        year22 "2022",
        year23 "2023",
        year24 "2024",
        year25 "2025"
    };
    biomarkerList "bio-markers" define
    {
        biomarker1 "bio-marker 1",
        biomarker2 "bio-marker 2",
        biomarker3 "bio-marker 3",
        biomarker4 "bio-marker 4"
    };
    weekenddayslist "Weekend" define
    {
        Sat "Saturday",
        Sun "Sunday"
    };
    peoplelist "" define
    {
        Jake "Jake",
        Mary "Mary",
        Sally "Sally",
        Jane "Jane",
        Fred "Fred"
    };
    fruitlist "" define
    {
        Banana "Banana",
        Apple "Apple",
        Orange "Orange",
        kiwi "kiwi fruit",
        Satsuma "Satsuma",
        Grapes "Grapes",
        Pineapple "Pineapple",
        Grapefruit "Grapefruit",
        Mango "Mango"
    };
    fruitlistwithother "" define
    {
        Banana "Banana",
        Apple "Apple",
        Orange "Orange",
        kiwi "kiwi fruit",
        Satsuma "Satsuma",
        Grapes "Grapes",
        Pineapple "Pineapple",
        Grapefruit "Grapefruit",
        Mango "Mango",
        otherFruit "otherFruit" other(namefruit ""
            style(
                ZIndex = -20,
                Control(
                    Type = "SingleLineEdit"
                )
            )
        text [..50] ),
        nofruit "No fruit" exclusive
    };
    cigarbrandslist "" define
    {
        Ashton "Ashton",
        Arturo "Arturo Fuente",
        Oliva "Oliva",
        Aroma "La Aroma de Cuba",
        Padron "Padron",
        Romeo "Romeo y Julieta",
        Cristobal "San Cristobal",
        Father "My Father"
    };
    cigarettebrandslist "" define
    {
        Marlboro "Marlboro",
        Camel "Camel",
        BH "Benson and Hedges",
        Chesterfield "Chesterfield",
        LB "Lambert and Butler",
        Mayfair "Mayfair",
        Silk "Silk Cut"
    };
    NetPromoterList ""
    define
    {
        Overall "Overall Score",
        Cleanliness "Cleanliness",
        Attention "Attention to detail",
        Variety "range of options",
        Staff "hospitality"
    } ran;
    NetPromoterRating "" define
    {
        rating1 "1",
        rating2 "2",
        rating3 "3",
        rating4 "4",
        rating5 "5",
        rating6 "6",
        rating7 "7",
        rating8 "8",
        rating9 "9",
        rating10 "10"
    };
    new_productslist ""
    define
    {
        first "I am always among the first to prescribe a new product",
        waitShort "I like to wait a while (for a few months) after a new product is approved before I start prescribing it",
        waitMedium "I wait to be comfortable (for more than a few months) with a new product by speaking to colleagues, hearing about its success before I prescribe it",
        waitLong "I prefer to prescribe products that are tried and trusted",
        reluctant "I am very reluctant to prescribe new products/switch to new products"
    } asc;
    howlonglist "" define
    {
        juststarted "I just started",
        lastmonth "I started about a month ago",
        lastyear "I started within the last year",
        ages "I have been reading them for years"
    };
    ageGroup_lst "" define
    {
        infantsUnderAge2 "Infants under age 2",
        children_aged3To17NoHealthConditions "Children aged 3 to 17 with no health conditions",
        childrenAged3To17HealthConditions "Children aged 3 to 17 with health conditions",
        childrenAged3To17 "Children aged 3 to 17",
        adults18plus_no_health_conditions "Adults 18+ with no health conditions",
        adults18plus_health_conditions "Adults 18+ with health conditions",
        adults65plus_all "Adults 65+ (all)"
    };
    lst_company "" define
    {
        moderna "Moderna",
        cansinoBiologics "CanSino Biologics",
        inovio "Inovio",
        sinovac "Sinovac",
        pfizerBiontech "Pfizer / BioNTech",
        astrazenecaUniversityOfOxford "AstraZeneca / University of Oxford",
        novavax "Novavax",
        gameleyaResearchInstitute "Gamaleya Research Institute",
        sinopharm "Sinopharm",
        curevac "CureVac",
        shionogi "Shionogi",
        osakaUniversityAngesTakaraBio "Osaka University / AnGes / Takara Bio",
        arcturusTherapeutics "Arcturus Therapeutics",
        vaxart "Vaxart",
        cloverBiopharmaceuticals "Clover Biopharmaceuticals",
        johnsonJohnson "Johnson &amp; Johnson / Janssen",
        sanofi "Sanofi",
        gsk "GSK",
        bharatBiotech "Bharat Biotech",
        walvax "Walvax",
        bavarian_nordic "Bavarian Nordic",
        medicago "Medicago",
        skBioscience "SK Bioscience",
        valneva "Valneva",
        reithera "ReiThera",
        hipra "HIPRA",
        kmBiologics "KM Biologics",
        merck "Merck"
    };
    lst_effectiveScale2 "" define
    {
        S1 "1 - Not at all effective",
        S2 "2",
        S3 "3",
        S4 "4",
        S5 "5",
        S6 "6",
        S7 "7 - Very effective",
        dont_know "Don’t Know"
    };
    lsolidtumors "" define
    {
        boneAndSarcoma "Bone and Sarcoma",
        brain "Brain",
        breast "Breast",
        cervicaluterine "Cervical/Uterine",
        colorectal "Colorectal",
        endocrine "Endocrine (incl. Thyroid, NETs)",
        gastrointestinal "Gastrointestinal (incl. Pancreas and Peritoneum)",
        headAndNeck "Head and Neck",
        hepatobiliary "Hepatobiliary",
        kidney "Kidney",
        lung "Lung",
        melanoma "Melanoma",
        ovarian "Ovarian",
        prostate "Prostate",
        urinary "Urinary"
    };
    lchoice "" define
    {
        first "1st choice",
        second "2nd choice",
        third "3rd choice"
    };
    lLines "" define
    {
        l1 "1st Line",
        l2 "2nd Line",
        l3 "3rd+ Line",
        donot_use "Do not use"
    };
    lpttypes "" define
    {
        totNsclcPts "Stage IIIB/IV NSCLC patients personally managed on average in the last 3 months",
        ros1Pts "Stage IIIB/IV <b>ROS1+ NSCLC</b> patients personally managed on average in the last 3 months",
        metex14Pts "Stage IIIB/IV <b>METEx14+ NSCLC</b> patients personally managed on average in the last 3 months",
        ntrkPts "Advanced/Metastatic <b>NTRK Fusion+ Solid Tumor</b> patients personally managed on average in the last 3 months"
    };
    ltki "" define
    {
        currentlyOnaTki "Currently on a TKI?",
        receivedATkiInAPreviousLineButCurrentlyNot "Received a TKI in a previous line but currently not?",
        neverReceivedATkiTkiNaive "Never Received a TKI (TKI naïve)?"
    };
    QuarterList "" define
    {
        Y2021Q4 "Quarter 4 - 2021",
        Y2022Q1 "Quarter 1 - 2022",
        Y2022Q2 "Quarter 2 - 2022",
        Y2022Q3 "Quarter 3 - 2022",
        Y2022Q4 "Quarter 4 - 2022",
        Y2023Q1 "Quarter 1 - 2023",
        Y2023Q2 "Quarter 2 - 2023",
        Y2023Q3 "Quarter 3 - 2023",
        Y2023Q4 "Quarter 4 - 2023"
    };
    abasicoptionlist "" define
    {
        option1 "First option",
        option2 "second",
        option3 "a third option",
        option4 "the penultimate one",
        option5 "the last in the list"
    };
    alongoptionlist "" define
    {
        option1 "This is the First option",
        option2 "this is the next (second)",
        option3 "a third option is here",
        option4 "the penultimate option in the list",
        option5 "the very last one"
    };
    '----------------------------------------
    ' filteroption Definitions
    '----------------------------------------
    GenderList "" define
    {
        male "Male",
        female "Female",
        transg_m2f "Transgender – Male to Female",
        transg_f2m "Transgender – Female to Male"
    };
    ldiag1 "" define
    {
        select "SELECT DIAGNOSIS",
        bone_and_sarcoma__excluding_gist_ "Bone and Sarcoma",
        gist "GIST",
        brain___nervous_system "Brain and nervous system",
        breast "Breast",
        colorectal "Colorectal",
        endocrine "Endocrine (incl. Thyroid, NETs)",
        female_reprod "Female Reproductive (incl. Ovarian)",
        gastric "Gastrointestinal (incl. pancreas and peritoneum)",
        head___neck "Head and neck",
        hepato_biliary "Hepatobiliary",
        leukaemia "Leukaemia",
        lung "Lung",
        lymphoma "Lymphoma",
        male_reprod "Male Reproductive (incl. Prostate)",
        myelodysplasia "Myelodysplasia",
        myeloma "Multiple Myeloma",
        myeloproliferative_disorder "Myeloproliferative disorder",
        neuroblastoma "Neuroblastoma",
        skin "Skin (incl. Melanoma)",
        urinary_and_bladder "Urinary (incl. RCC)",
        unknown "unknown Primary",
        "other" "Other"
    };
    stronglyagreedisagreelist "" define
    {
        sagree "strongly agree",
        agree "agree",
        neither "neither agree nor disagree",
        disagree "disagree",
        sdisagree "strongly disagree"
    };
    shortstatementslist "" define
    {
        state1 "fresh bread",
        state2 "coffee",
        state3 "a fruit pie",
        state4 "wet clothes",
        state5 "synthetic fragrances",
        state6 "fresh flowers",
        state7 "pets",
        state8 "burning wood",
        state9 "burnt toast",
        state10 "leather",
        state11 "Cat litter",
        state12 "Fresh towels",
        state13 "Curry",
        state14 "just cut lawn",
        state15 "BBQ"
    };
    '----------------- Question Type zIndex values
    ' -10 Information
    ' -20 SingleLineEdit
    ' -21 ReadWriteEdit 
    ' -22 Decimal
    ' -22 openend-Search
    ' -30 MultiLineEdit
    ' -40 Choice
    ' -50 Slider (Horizontal)
    ' -51 Slider (Vertical)
    ' -52 Slider (date-recent)
    ' -55 Scale (Horizontal)
    ' -56 Scale (Vertical)
    ' -60 DropDown
    ' -70 Combobox
    
    ' -1100 Progressive (V) Grid
    ' -1110 Progressive (H) Grid
    ' -1400 Navigation - Tabstrip
    '---------------------------------------------
    CustomList_Layout "Layouts" define
    {
        vertical "Vertical",
        horizontal "side by side"
    };
    CustomList_Focus "Show Focus" define
    {
        question "question",
        control "control"
    };
    CustomList_Direction "Which Direction" define
    {
        LTR "Left to Right",
        RTL "Right to Left"
    };
    CustomList_Instruction "Information placed" define
    {
        above "Above",
        below "Below"
    };
    CustomList_Theme "Theme" define
    {
        Formal "Formal",
        Informal "Informal"
    };
    CustomList_Paste "" define
    {
        allow "allow",
        prevent "prevent"
    };
    CustomList_Jump "" define
    {
        yes "Yes",
        no "No"
    };
    TypesList_Simple "Basic Question types" define
    {
        basic "Original Questions",
        special "Special Codes",
        custom "Custom Property Questions",
        dates "Date questions",
        Choice "Choice questions",
        Buttons "Button questions",
        Instructions "Instructions",
        ReadWrite "Read/Write hidden inputs",
        SideBySide "Complex questions",
        SpecialOnes "Unusual question combinations"
    };
    TypesList_Scales "Sliders and Scales" define
    {
        SliderH "Slider (Horizontal)",
        SliderV "Slider (Vertical)",
        ScaleH "Scale (Horizontal)",
        ScaleV "Scale (Vertical)",
        Recent "Date (Recent)"
    };
    TypesList_Special "Special functions" define
    {
        paste "Allow/Prevent Pasting",
        InfoPop "Information Popup"
    };
    TypesList_Progressive "Progressive Grids" define
    {
        ProgressiveChoice "Choice",
        ProgressiveSlider "Slider",
        ProgressiveComment "Comment"
    };
    TypesList_Visible "Visiblity Controls" define
    {
        NewVisibility "Visibility (Questions)",
        VisibilityOptions "Visibility (Options)",
        InvisibilityQuestions "Invisibility (Questions)",
        InvisibilityOptions "Invisiblity (Options)",
        wholegridvisible "Visibility (Grids)",
        filters "Filters",
        DynamicLabels "Dynamic Labels",
        InvisibleAlternatives "Invisible Alternatives",
        ResetToLoad "Reset to Load"
    };
    TypesList_Grids "Grid based questions" define
    {
        Grids "Just grids",
        Totals "Grids with totals",
        DoubleLoop "Loop in loop questions",
        HiddenCells "Hidden Cells",
        CategoricalGrids "Categorical Grids",
        GridsofSolo "Grids of solo questions",
        GridVisibility "Grids & Visibility",
        OneColumn "1 column",
        Split "Split grid",
        ComplexGrids "Complex Grids",
        OneRowGrid "1 Row Grid",
        GridScale "Scale Grid",
        GridSlider "Slider Grid"
    };
    TypesList_Rotated "Rotated Grids" define
    {
        RotatedGrids "Just grids",
        RotatedTotals "Grids with totals",
        RotatedDoubleLoop "Loop in loop questions",
        RotatedHiddenCells "Hidden Cells",
        RotatedCategoricalGrids "Categorical Grids",
        RotatedGridsofSolo "Grids of solo questions",
        RotatedGridVisibility "Grids & Visibility",
        RotatedOneColumn "1 Row",
        RotatedSplit "Split grid",
        RotatedComplexGrids "Complex Grids",
        RotatedGridScale "Scale Grid",
        RotatedGridSlider "Slider Grid"
    };
    TypesList_Dropdowns "Questions using dropdowns and comboboxes" define
    {
        DropDown "Dropdown (single)",
        GridDrop "Dropdown (Grid)",
        Combobox "Combo-box (single)",
        GridCombo "Combo-box (Grid)",
        OtherSpecifyLists "Lists with other specify options",
        longlist "Long Lists",
        ImageList "Image Lists"
    };
    TypesList_Navigation "Implementing alternative navigation techniques" define
    {
        TabStripOnly "Tab Strip only"
    };
    '----------------------------------------
    ' Grids of solo questions Definitions
    '----------------------------------------
    RowList "" define
    {
        firstchild "First child",
        secondchild "Second child",
        thirdchild "Third child"
    };
    catlist5 "" define
    {
        ENT "ENT",
        dermatology "dermatology",
        SEA "severe eosinophilic asthma",
        Oncology "Oncology",
        Gen "General Discussion"
    };
    '----------------------------------------
    ' Image List Question
    '----------------------------------------
    '----------------------------------------
    ' Invisible dates Question
    '----------------------------------------
    shortyearlist "" define
    {
        year19 "2019",
        year20 "2020",
        year21 "2021",
        year22 "2022",
        year23 "2023",
        year24 "2024"
    };

    '----------------------------------------
    ' tabstrip Setup
    '----------------------------------------
    TabStripNav1 ""
        style(
            ZIndex = -1400
        )
    categorical [1..1]
    {
        Menu "Menu",
        Home "Home",
        Section1 "Initial Questions",
        Section2 "Detailed Questions",
        Section3 "Penultimate",
        Section4 "Summary"
    };

    TabStripHome ""
        style(
            ZIndex = -40
        )
    categorical [1..1]
    {
        Section1 "Initial Questions",
        Section2 "Detailed Questions",
        Section3 "Penultimate",
        Section4 "Summary"
    };

    '----------------------------------------
    ' Menu Questions 
    '----------------------------------------
    CustomList_SetBalance "Side by Side Balance:"
        style(
            Width = "4em"
        )
    long [15 .. 60]
    codes(
    {
        novalue "" NA
    } );

    CustomList_SetFocus "Which focus"
    categorical
    {
        use CustomList_Focus -
    };

    CustomList_SetLayout "Which Layout"
        style(
            Control(
                Type = "DropList"
            )
        )
    categorical [1..1]
    {
        use CustomList_Layout -
    };

    CustomList_SetDirection "Which Direction"
        style(
            Control(
                Type = "DropList"
            )
        )
    categorical [1..1]
    {
        use CustomList_Direction -
    };

    CustomList_SetInstruction "Where is the Instruction"
        style(
            Control(
                Type = "DropList"
            )
        )
    categorical [1..1]
    {
        use CustomList_Instruction -
    };

    CustomList_SetTheme "Theme"
        style(
            Control(
                Type = "DropList"
            )
        )
    categorical [1..1]
    {
        use CustomList_Theme -
    };

    CustomList_SetPaste1 "Paste into Input"
        style(
            Control(
                Type = "DropList"
            )
        )
    categorical [1..1]
    {
        use CustomList_Paste -
    };

    CustomList_SetJump "Jump to first error"
        style(
            Control(
                Type = "DropList"
            )
        )
    categorical [1..1]
    {
        use CustomList_Jump -
    };

    ChooseType "Select the type of question you want to test"
        style(
            ZIndex = -40
        )
    categorical [1..1]
    {
        use TypesList_Simple sublist -,
        use TypesList_Scales sublist -,
        use TypesList_Dropdowns sublist -,
        use TypesList_Grids sublist -,
        use TypesList_Rotated sublist -,
        use TypesList_Progressive sublist -,
        use TypesList_Visible sublist -,
        use TypesList_Navigation sublist -,
        use TypesList_Special sublist -
    };

    QuestionTypes "Which questions do you want to test?"
        style(
            ZIndex = -40
        )
    categorical [1..1]
    {
        basic "Original Questions",
        custom "Custom Property Questions",
        dates "Date questions",
        sliders "sliders",
        ComplexGrids "Complex Grids",
        Choice "Choice questions",
        Buttons "Button questions",
        NewVisibility "Visibility (Questions)",
        VisiblityOptions "Visibility (Options)",
        InvisibilityQuestions "Invisibility (Questions)",
        Invisibility "Invisiblity (Options)",
        Grids "Just grids",
        Totals "Grids with totals",
        Droplist "Droplist questions",
        droplistgrids "Droplist Grids",
        ComboList "Combobox questions",
        ComboListGrids "Combobox Grids",
        ReadWrite "Read/Write hidden inputs",
        DoubleLoop "Loop in loop questions",
        Instructions "Instructions",
        DynamicLabels "Dynamic Labels",
        InvisibleAlternatives "Invisible Alternatives",
        filters "Filters",
        RapidDrop "Rapid Dropdown",
        RapidCombo "Rapid Combbox"
    };

    Hello "<p>While this can be consider an example of a basic information question, it is actually possible to create a lot of content in a single question.</p><p>It is advised that content is wrapped in paragraph tags because this creates natural spacing between each paragraph</p><p>it is also possible to use html tags such as numbered and unordered list tags.</p><p>To demonstrate the different in which you can apply formatting to different parts of the content, the following is an unordered list<ul><li>This is an exmaple of <span class='bold'>bold</span> text.</li><li>Two levels of bold are provided <span class='ltbold'>light bold</span> and <span class='bold'>bold as shown above</span>.</li><li>This TEXT is typed in all caps and this <span class='caps'>text</span> is formatted as all caps.</li><li>Text can also be <span class='underline'>underlined</span> or <span class='italic'>italicised</span>.</li><li>We are also playing with the idea of allowing you deliver <span class='plusfour'>impact</span> by increasing the font size by four points </li><li>Finally, we are looking at whether its possible to provide superscript such as 13m<span class='sup minusfour'>2</span> and subscript such as H<span class='sub minusfour'>2</span>O</li></ul></p><p>Its also possible to create content through banners, the question template defines where these banners appear.  In this example we have placed the banners below the question label, but this is just for demonstration purposes.</p><p>As a quick test, the word <b>fox</b> has been bolded using html tags. This is the old method and should not be used, but we want to be user that the introduction of line breaks is <i>resolved</i></p>"
        style(
            ZIndex = -10
        )
    info;

    eattime "What is your birthdate"
    date ["09/05/2024 00:56" .. "09/05/2024 12:56"];

    middlename "middle name"
        style(
            ZIndex = -20,
            Control(
                Type = "SingleLineEdit"
            )
        )
    text [..40]
    codes(
    {
        noanswer "" NA,
        nomiddle "I don't have a middle name",
        toolong "my name is too long to fit",
        refused "I don't want to provide my middle name" REF
    } );

    Comments "Would you please describe the positive and negative aspects of the experience you had during your last visit"
        style(
            ZIndex = -30
        )
    text [..2000]
    codes(
    {
        nocomments "I don't have any positive or negative comments" NA,
        second "I refuse to answer this question" REF
    } );

    Gender "Please indicate your gender"
        style(
            ZIndex = -40
        )
    categorical [1..1]
    {
        male "male",
        female "female"
    } codes(
    {
        dontsay "prefer not to say" NA
    } );

    GenderReal "Please indicate your gender if you want to"
        style(
            ZIndex = -40
        )
    categorical [1..1]
    {
        male "male",
        female "female",
        othergender "Other gender, please specify" other(otherGenderDetail ""
            style(
                ZIndex = -20
            )
        text [0..200] ) fix,
        dontsay "prefer not to say" NA
    };

    Drinks "Which of the following drinks have you consumed in the last 7 days"
        [
            json = "{'balance':{'state':true}, 'onesize': {'state':false}}"
        ]
        style(
            ZIndex = -40
        )
    categorical [1..]
    {
        use Coke sublist -,
        use Pepsi sublist -,
        coffee "coffee",
        OtherDrink "Other Hot Drink" other,
        use OtherDrinks sublist -,
        none "none of the above" exclusive,
        refuse "I refuse to answer" exclusive
    };

    SimpleVisibility "Change visibility"
        style(
            ZIndex = -40
        )
    categorical [1..1]
    {
        Show "Show",
        Hide "Hide"
    };

    concomitant "Concomitant disease affecting cancer treatment"
        style(
            ZIndex = -40
        )
    categorical [0..]
    {
        Diabetes "Diabetes",
        Liver_disorder "Liver disorder",
        HBV "HBV",
        Pulmonary_disorder "Pulmonary disorder",
        Obesity "Obesity",
        Renal_function_disorder "Renal function disorder",
        History_of_GI_perforation "History of GI perforation",
        Cardiovascular_disease "Cardiovascular disease",
        Thyroid_Disorder "Thyroid Disorder",
        Hypertension "Hypertension",
        Dementia "Dementia/Alzheimer’s",
        Depression "Depression/Anxiety",
        Autoimmune_disease "Autoimmune disease",
        hypercholesterolemia "Hypercholesterolemia", 'UDSH ADDED NEW OPTION ON 20/04/2021
        osteoporosis "Osteoporosis", 'UDSH ADDED NEW OPTION ON 28/04/2021
        covid "COVID/Long COVID", 'CS pre Q2 2022
        otheritem "Other",
        none "None" exclusive,
        dk "Don't know" exclusive
    };

    DrinksRandom "Which of the following drinks have you consumed in the last 7 days"
        style(
            ZIndex = -40
        )
    categorical [1..]
    {
        use Coke sublist -,
        use Pepsi sublist -,
        coffee "coffee",
        OtherDrink "Other Hot Drink" other(otherdrinkdetail ""
            [
                json = "{'labels':{'pre':'Please Specify'}}"
            ]
            style(
                ZIndex = -20
            )
        text [0..200] ),
        use OtherDrinks -,
        none "none of the above" fix exclusive,
        refuse "I refuse to answer" fix exclusive
    } ran;

    OtherSpecifyExample "Indicate which of these TV options you have"
        [
            json = "{'balance':{'state':true}}"
        ]
        style(
            ZIndex = -40
        )
    categorical [1..]
    {
        Terrestial "Terrestial",
        Satellite "Satellite",
        Cable "Cable",
        Netflix "Netflix",
        FreeView "FreeView",
        Prime "Amazon Prime",
        Apple "Apple Tv",
        iPlayer "iPlayer",
        OtherTV "Other" other(otherTvDetail ""
            [
                json = "{'labels':{'pre':'Please Specify'}}"
            ]
            style(
                ZIndex = -20
            )
        text [0..200] ) fix,
        none "None of the above" fix exclusive
    } ran;

    '----------------------------------------
    ' side by Side codes
    '----------------------------------------
    hospital_days "Over the past 3 months, how many days has the patient spent in the hospital due to their cancer?"
        style(
            ZIndex = -20,
            Width = "4em"
        )
    long [0 .. 92]
    codes(
    {
        unknown "Unknown" DK
    } );

    hospital_daysBySide "Over the past 3 months, how many days has the patient spent in the hospital due to their cancer?"
        style(
            ZIndex = -20,
            Width = "4em"
        )
    long [0 .. 92]
    codes(
    {
        unknown "Unknown" DK
    } );

    hospital_days2Codes "Over the past 3 months, how many days has the patient spent in the hospital due to their cancer?"
        style(
            ZIndex = -20,
            Width = "4em"
        )
    long [0 .. 92]
    codes(
    {
        unknown "Unknown"
            style(
                Control(
                    Type = "RadioButton"
                )
            )
        DK,
        refuse "I refuse to answer"
            style(
                Control(
                    Type = "RadioButton"
                )
            )
        REF
    } );

    hospital_days2CodesSideBySide "Over the past 3 months, how many days has the patient spent in the hospital due to their cancer?"
        style(
            ZIndex = -20,
            Width = "4em"
        )
    long [0 .. 92]
    codes(
    {
        unknown "Unknown"
            style(
                Control(
                    Type = "RadioButton"
                )
            )
        DK,
        refuse "I refuse to answer"
            style(
                Control(
                    Type = "RadioButton"
                )
            )
        REF
    } );

    QuestionWithLotsOfCodes "This is a question with lots of special codes"
        style(
            ZIndex = -20,
            Width = "10em"
        )
    text [..30]
    codes(
    {
        code1 "this is the first code"
            style(
                Control(
                    Type = "RadioButton"
                )
            ),
        code2 "second code"
            style(
                Control(
                    Type = "RadioButton"
                )
            ),
        code3 "3rd code"
            style(
                Control(
                    Type = "RadioButton"
                )
            ),
        code4 "The really long code with lots of text"
            style(
                Control(
                    Type = "RadioButton"
                )
            ),
        code5 "The last code"
            style(
                Control(
                    Type = "RadioButton"
                )
            )
    } );

    gridofinputswithspecialcodes "Here are some repeating questions each with special codes" loop
    {
        first "first",
        second "second",
        third "third"
    } fields -
    (
        LotsOfCodes "This is a question with three of special codes"
            style(
                Align = "Left",
                ZIndex = -20,
                Width = "10em"
            )
        text [..30]
        codes(
        {
            code1 "this is the first code"
                style(
                    Control(
                        Type = "RadioButton"
                    )
                ),
            code2 "second code"
                style(
                    Control(
                        Type = "RadioButton"
                    )
                ),
            code3 "3rd code"
                style(
                    Control(
                        Type = "RadioButton"
                    )
                )
        } );

    ) expand;

    FirstLine "What is the first line of your address"
        style(
            ZIndex = -20,
            Width = "15em",
            Control(
                Type = "SingleLineEdit"
            )
        )
    text [..200];

    FirstName "What is your first name"
        style(
            ZIndex = -20
        )
    text [..39];

    AgreeDisagree "The following drugs are suitable for managing this illness" loop
    {
        drug1 "A drug",
        Drug2 "a long drug name that might need space",
        Drug3 "a really long drug name that is so complex and hard to pronounce that no one ever actually uses it"
    } fields -
    (
        choice ""
        categorical [1..1]
        {
            sagree "Strongly Agree",
            agree "Agree",
            neither "Neither Agree, nor disagree",
            disagree "disagree",
            sdisagree "strongly disagree"
        };

    );

    test_location "Where was the test performed?"
        [
            json = "{'balance':{'state':false}, 'onesize':{'state':true, 'max-wdith':'15em'}}"
        ]
        style(
            ZIndex = -40
        )
    categorical [1..1]
    {
        inhouse_hospitalpractice_where_the_tissue_sample_was_extracted "In-house (hospital/practice where the tissue / sample was extracted)" fix,
        external_community_hospital "External community hospital" fix,
        external_academic_hospital "External academic hospital" fix,
        external_cancer_center "External cancer centre" fix,
        foundation_medicine "Foundation Medicine",
        strand_center "Strand Centre",
        guardant_health "Guardant Health",
        caris_life_sciences "Caris Life Sciences",
        paradigm_university_of_michigan "Paradigm diagnostics",
        oncodna "OncoDNA",
        personal_genome_diagnostics "Personal Genome Diagnostics",
        neogenomics "NeoGenomics / Genoptix",
        bioreference_laboratories "Bio-Reference Laboratories",
        genomic_health "Genomic Health",
        biotheranostics "BioTheranostics",
        genpath "Genpath",
        knight_diagnostics "Knight Diagnostics",
        pathgroup "PathGroup",
        omniseq_precision_medicine "OmniSeq precision medicine",
        otogenetics_corporation "Otogenetics Corporation",
        novogene "Novogene",
        tempus "Tempus",
        cancer_genetics "Cancer genetics",
        predicine "Predicine",
        kew "Kew",
        act_genomics "ACT genomics",
        bgi "BGI",
        circulogene "Circulogene",
        navican "Navican",
        sophia_genetics "SOPHiA Genetics",
        private_reference_lab_primary "Private reference lab: Primary"
        {
            laverty "Laverty",
            dorevitch "Dorevitch",
            qml "QML",
            abbott_pathology "Abbott Pathology",
            other_please_specify_primary "Other (please specify)" other
        },
        private_reference_lab_sonic "Private reference lab: Sonic"
        {
            douglass_hanly_moir "Douglass Hanly Moir",
            melbourne_pathology "Melbourne Pathology",
            sullivan_nicolaides "Sullivan Nicolaides",
            clinpath "Clinpath",
            other_please_specify_sonic "Other (please specify)" other
        },
        private_ref_lab_healthscope "Private reference lab: Australian Clinical Labs (formerly Healthscope)" fix,
        private_reference_lab_other "Private reference lab: other" fix,
        public_reference_lab "Public reference lab" fix,
        other_specify "Other (specify):" other fix
    } asc;

    Age "How old are you?"
        [
            json = "{'type':'number','labels':{'pre':'I was', 'post':'years old on my last birthday'}}"
        ]
        style(
            ZIndex = -20,
            Width = "5em"
        )
    long [0 .. 100];

    Height "How Tall are you?"
        [
            json = "{'type':'number','labels':{'post':'cm'}}"
        ]
        style(
            ZIndex = -20,
            Width = "5em"
        )
    double [0 .. 300];

    Textwithlabels "This is a text question with pre and post labels"
        style(
            ZIndex = -20,
            Width = "18em",
            Control(
                Type = "SingleLineEdit"
            )
        )
    text [..20];

    Income "How much was your income last year?"
        [
            json = "{'type':'number','labels':{'pre':'£'}}"
        ]
        style(
            ZIndex = -20,
            Width = "7em"
        )
    double [0 .. 3000000]
    codes(
    {
        noincome "I had no income last year" NA
    } );

    '----------------------------------------
    ' sliders
    '----------------------------------------
    HowManyMissed "How many of the last 10 visits did you miss"
        style(
            ZIndex = -50,
            Width = "50%"
        )
    long [0 .. 100];

    HowManyMissedV "How many of the last 10 visits did you miss"
        style(
            ZIndex = -51
        )
    long [0 .. 100];

    HowManyMissed_Car "How many of the last 10 visits did you miss"
        style(
            ZIndex = -50,
            Width = "70%"
        )
    long [0 .. 100];

    HowManyMissed_Heart "How many of the last 10 visits did you miss"
        style(
            ZIndex = -50,
            Width = "60%"
        )
    long [0 .. 100];

    HowManyMissedV_Car "How many of the last 10 visits did you miss"
        style(
            ZIndex = -51,
            width="125%"
        )
    long [0 .. 100];

    HowManyMissedV_Heart "How many of the last 10 visits did you miss"
        style(
            ZIndex = -51
        )
    long [0 .. 100];

    HowManyMissedLabels "How many of the last 10 visits did you miss"
        style(
            ZIndex = -50
        )
    long [0 .. 10];

    HowManyMissedLabelsV "How many of the last 10 visits did you miss"
        style(
            ZIndex = -51
        )
    long [0 .. 10];

    HowManyMissedMarksLabels "How many of the last 10 visits did you miss"
        style(
            ZIndex = -50
        )
    long [0 .. 10];

    HowManyMissedMarksLabelsV "How many of the last 10 visits did you miss"
        style(
            ZIndex = -51
        )
    long [0 .. 10];

    HowManyMissedThumbValue "How many of the last 10 visits did you miss"
        style(
            ZIndex = -50
        )
    long [0 .. 10];

    HowManyMissedThumbValueV "How many of the last 10 visits did you miss"
        style(
            ZIndex = -51
        )
    long [0 .. 10];

    HowManyMissedThumbMarks "How many of the last 10 visits did you miss"
        style(
            ZIndex = -50
        )
    long [0 .. 10];

    HowManyMissedThumbMarksV "How many of the last 10 visits did you miss"
        style(
            ZIndex = -51
        )
    long [0 .. 10];

    HowManyMissedThumbMarksLabels "How many of the last 10 visits did you miss"
        style(
            ZIndex = -50
        )
    long [0 .. 10];

    HowManyMissedThumbMarksLabelsV "How many of the last 10 visits did you miss"
        style(
            ZIndex = -51
        )
    long [0 .. 10];

    PercentageTreatments "What percentage of visits resulted in changes to treatments"
        style(
            ZIndex = -50,
            Width = "50%"
        )
    long [1 .. 100]
    codes(
    {
        novisits "None of the visits" NA
    } );

    PercentageTreatmentsV "What percentage of visits resulted in changes to treatments"
        style(
            ZIndex = -51,
            Width = "50%"
        )
    long [1 .. 100]
    codes(
    {
        novisits "None of the visits" NA
    } );

    PercentageTreatmentsPrePost "What percentage of visits resulted in changes to treatments"
        style(
            ZIndex = -50,
            Width = "50%"
        )
    long [1 .. 100]
    codes(
    {
        novisits "None of the visits" NA
    } );

    PercentageTreatmentsPrePostV "What percentage of visits resulted in changes to treatments"
        style(
            ZIndex = -51,
            Width = "50%"
        )
    long [1 .. 100]
    codes(
    {
        novisits "None of the visits" NA
    } );

    modifications "Indicate the speed modification"
        style(
            ZIndex = -50
        )
    long [-5 .. 5];

    modificationsV "Indicate the speed modification"
        style(
            ZIndex = -51
        )
    long [-5 .. 5];

    percentright "what percentage of people are right to not get vaccinated"
        style(
            ZIndex = -50,
            Width = "15em"
        )
    long [0 .. 100];

    percentrightV "what percentage of people are right to not get vaccinated"
        style(
            ZIndex = -51,
            Width = "15em"
        )
    long [0 .. 100];

    '----------------------------------------
    ' grid slider
    '----------------------------------------
    vacinate "what percentage of people are right to not get vaccinated in the follwing:" loop
    {
        MMR "MMR",
        Covid "Covid",
        Flu "Flu",
        Measles "Measles",
        Polio "Polio"
    } fields -
    (
        percentright "what percentage of people are right to not get vaccinated"
            style(
                ZIndex = -50,
                Width = "15em"
            )
        long [0 .. 100];

    );


    '----------------------------------------
    ' slider-date-recent
    '----------------------------------------
    lastpayment "Indicate the date/time in the last 24 hours that you made a payment for goods or services" 
	style(zIndex=-52)
	date;

    lastdrink "Indicate the date/time in the last 3 days that you had a drink of alcohol or a non-alcoholic equivalent" 
	style(zIndex=-52)
	date;
    
    lastwithdrawal "Indicate the date/time in the last week that you made a cash withdrawal"
    
    recentpage "" Page (lastpayment, lastdrink, lastwithdrawal);
	style(zIndex=-52)
	date
	codes({Nowithdrawal "I did not withdraw cash in the last week" NA});
    
    '----------------------------------------
    ' scales (horizontal)
    '----------------------------------------
    Passive10Scale "Indicate your satisfaction with this wash"
        style(
            ZIndex = -55,
            Width = "80%"
        )
    long [1 .. 10];

    Passive10Feedback "Please provide some detail as to why you scored your wash with a rating"
        style(
            ZIndex = -30
        )
    text [..400]
    codes(
    {
        noasnwer "" NA
    } );

    tenpointfeedback "Based on your last wash indicate your satisfaction with your detergent"
        style(
            ZIndex = -55,
            Width = "15em"
        )
    long [1 .. 10];

    sevenpointfeedback "Based on your last wash indicate your satisfaction with your detergent"
        style(
            ZIndex = -55,
            Width = "30%"
        )
    long [1 .. 7];

    fivepointfeedback "Based on your last wash indicate your satisfaction with your detergent"
        style(
            ZIndex = -55
        )
    long [1 .. 5]
    codes(
    {
        noscent "I did not use a scent booster" NA
    } );

    fivepointfeedbackbytheside "Based on your last wash indicate your satisfaction with your detergent"
        style(
            ZIndex = -55
        )
    long [1 .. 5]
    codes(
    {
        noscent "I did not use a scent booster"
            style(
                ElementAlign = "Right"
            )
        NA
    } );

    '----------------------------------------
    ' Grid of scales (horizontal)
    '----------------------------------------
    LaundryScales "We would like you to rate you last wash" loop
    {
        Scent "Scent",
        Clean "Clean",
        Soft "Soft",
        overall "overall"
    } fields -
    (
        Passive5Scale "Indicate your satisfaction with this wash"
            style(
                ZIndex = -55,
                Width = "80%"
            )
        long [1 .. 5]
        codes(
        {
            dontknow "Don't know"
                style(
                    ElementAlign = "Right"
                )
            DK
        } );

    ) expand;

    sizes "Which of the odd options works for you"
        [
            json = "{'balance':{'state':false},'onesize':{'state':false}}"
        ]
        style(
            ZIndex = -40
        )
    categorical
    {
        use sizeslist -
    };

    sizesbalanced "Which of the odd options works for you"
        [
            json = "{'balance':{'state':true},'onesize':{'state':false}}"
        ]
        style(
            ZIndex = -40
        )
    categorical
    {
        use sizeslist -
    };

    sizesbalancedonesize "Which of the odd options works for you"
        [
            json = "{'balance':{'state':true, max-width:'15em'},'onesize':{'state':true}}"
        ]
        style(
            ZIndex = -40
        )
    categorical
    {
        use sizeslist -
    };

    new_products "Please select the option that best describes you."
    categorical [1..1]
    {
        first "I am always among the first to prescribe a new product",
        wait_short "I like to wait a while (for a few months) after a new product is approved before I start prescribing it",
        wait_medium "I wait to be comfortable (for more than a few months) with a new product by speaking to colleagues, hearing about its success before I prescribe it",
        wait_long "I prefer to prescribe products that are tried and trusted",
        reluctant "I am very reluctant to prescribe new products/switch to new products"
    };

    DrugComboSingle "Which of the following drugs &amp; anti-biotics did you use most"
        style(
            ZIndex = -60,
            Control(
                Type = "DropList"
            )
        )
    categorical [1..1]
    {
        use druglist sublist -
        asc
    };

    DrugComboSingleWithCode "Which of the following drugs did you use most"
        style(
            ZIndex = -60
        )
    categorical [1..1]
    {
        use druglist -
        asc
    } codes(
    {
        DontKnow "Don't Know" DK
    } );

    DrugOrdinal "Given a choice where would you &amp; your patient prioritise this drug?"
        style(
            ZIndex = -60,
            Control(
                Type = "DropList"
            )
        )
    categorical [1..1]
    {
        first "1st",
        second "2nd",
        third "3rd",
        fourth "4th"
    } codes(
    {
        noordinal "None of the above" NA
    } );

    DrugComboMultiple "Which of the following drugs have you utilised in the last month"
        style(
            ZIndex = -60
        )
    categorical
    {
        use druglist -
        asc
    };

    DrugComboMultipleWithCode "Which of the following drugs have you utilised in the last month"
        style(
            ZIndex = -60,
            Control(
                Type = "DropList"
            )
        )
    categorical
    {
        use druglist -
        asc
    } codes(
    {
        noneofthem "None of them" NA
    } );

    GridDrugDropSingle "This is a test of droplists within a grid" loop
    {
        use weekdayslist -
    } fields -
    (
        DrugDropSingleInGrid "1st Drug Question"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [1..1]
        {
            druglist use \\.druglist -
            asc
        };

        SecondDrugDropSingleInGrid "second drug question"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [1..1]
        {
            druglist use \\.druglist -
            asc
        };

    ) expand;

    GridDrugComboSingle "This is a test of droplists within a grid" loop
    {
        use weekdayslist -
    } fields -
    (
        DrugComboSingleInGrid "1st Drug Question"
            style(
                Align = "Left",
                ZIndex = -70,
                Control(
                    Type = "ComboList"
                )
            )
        categorical [1..1]
        {
            druglist use \\.druglist -
            asc
        };

        SecondDrugComboSingleInGrid "second drug question"
            style(
                ZIndex = -70,
                Control(
                    Type = "ComboList"
                )
            )
        categorical [1..1]
        {
            druglist use \\.druglist -
            asc
        };

    ) expand;

    VisibilityStatement "<p>This group of questions have been setup to test the new visibility rules.  There are currently three visibility rules implemented:<UL><LI>Specific Option</LI><LI>Not Specific Option</LI><LI>Min Value</LI></UL></p>"
    info;

    Pipesmoking "what percentage of your day do you use a pipe"
        style(
            ZIndex = -20
        )
    long [1 .. 100]
    codes(
    {
        nopipe "I don't use a pipe" NA
    } );

    EverPiped "Have you ever used a pipe?"
        style(
            ZIndex = -40
        )
    categorical [0..1]
    {
        Yes "Yes",
        No "No"
    };

    DoYouMind "Do you mind questions about smoking"
        style(
            ZIndex = -40
        )
    categorical [1..1]
    {
        yes "yes",
        no "no"
    };

    Doyou_smoke "Have you smoked at least one cigarette, or vaped in the last week"
        style(
            ZIndex = -40
        )
    categorical
    {
        Yes_Smoked "At least one cigarette/Cigar",
        Yes_Vaped "Used a Vape at least once",
        NoSmoke "I have not smoked any cigarettes or vaped" exclusive
    };

    Howmanysmoked "How many cigarettes did you smoke in the last seven days"
        style(
            ZIndex = -20
        )
    long [0 .. ]
    codes(
    {
        notanswered "" NA
    } );

    PleaseReview "Please review your answers if you did not smoke any cigarettes in the last seven days"
    info;

    Weekendpercentage "What percentage do you smoke at the weekend"
        style(
            ZIndex = -50
        )
    long [0 .. 100]
    codes(
    {
        notanswered "" NA
    } );

    Howmanyvaped "How many times did you use your vape in the last seven days?"
        style(
            ZIndex = -40
        )
    categorical [0..1]
    {
        once "once",
        twotoseven "between two and seven",
        eighttofourteen "Between eight and fourteen",
        morethanforteen "More than fourteeen times"
    };

    brandswhich "Which of the following cigar brand have you used in the last month"
        style(
            ZIndex = -40
        )
    categorical
    {
        use cigarbrandslist -
    };

    whichcigars "Which of the following cigar brand have you used in the last month"
        style(
            ZIndex = -60,
            Control(
                Type = "DropList"
            )
        )
    categorical
    {
        use cigarbrandslist -
    };

    whichcigarettes ""
        style(
            ZIndex = -60,
            Control(
                Type = "DropList"
            )
        )
    categorical
    {
        use cigarettebrandslist -
    };

    smokecigars "Do you smoke cigars or cigarettes"
        style(
            ZIndex = -60,
            Control(
                Type = "DropList"
            )
        )
    categorical [0..1]
    {
        cigars "I have smoked at least one cigar",
        cigarettes "I have smoked at least one cigarette"
    };

    DidyouPreviously "Did you previously smoke?"
        style(
            ZIndex = -40
        )
    categorical [0..1]
    {
        YesIsmoked "Yes I smoked",
        Nosmoked "No, I never smoked before vaping"
    };

    biomarkerselection "Select the required biomarkers"
    categorical
    {
        use biomarkerList -
    };

    biomarkerstatus1 ""
    categorical [0..1]
    {
        positive "positive",
        negative "negative",
        Inconclusive "Inconclusive",
        Pending "Results Pending"
    };

    WhichDayWorkedMost "On which day of the week did you work most"
    categorical [1..1]
    {
        use daysoftheweeklist -
    };

    WhichDayWorkedMostPlusCode "On which day of the week did you work most"
    categorical [1..1]
    {
        use daysoftheweeklist -
    } codes(
    {
        allthesame "I worked the same amount every day" NA,
        nowork "I did not work this week" exclusive
    } );

    DayOff "If you could guarantee a day you had off every week, which would it be"
    categorical [1..1]
    {
        use weekdayslist sublist -,
        use weekenddayslist sublist -
    };

    RowTotals "Indicate the number of hours worked this week, by your team" loop
    {
        use peoplelist -
    } fields -
    (
        HoursMon "Monday"
            style(
                ZIndex = -20,
                Width = "4em"
            )
        long [0 .. 10];

        HoursTue "Tuesday"
            style(
                ZIndex = -20,
                Width = "4em"
            )
        long [0 .. 10];

        HoursWed "Wednesday"
            style(
                ZIndex = -20,
                Width = "4em"
            )
        long [0 .. 10];

        HoursThu "Thursday"
            style(
                ZIndex = -20,
                Width = "4em"
            )
        long [0 .. 10];

        HoursFri "Friday"
            style(
                ZIndex = -20,
                Width = "4em"
            )
        long [0 .. 10];

    );

    columntotals "Indicate the number of hours worked by the team on each project" loop
    {
        use weekdayslist -
    } fields -
    (
        ProjectA "Project Jupiter"
            style(
                ZIndex = -20,
                Width = "4em"
            )
        long [0 .. 50];

        ProjectB "Project Neptune"
            style(
                ZIndex = -20,
                Width = "4em"
            )
        long [0 .. 50];

        ProjectC "Project Saturn"
            style(
                ZIndex = -20,
                Width = "4em"
            )
        long [0 .. 50];

    );

    Grandtotals "Record the amount of fruit consumed by the family" loop
    {
        use peoplelist -
    } fields -
    (
        Banana "Banana"
            style(
                ZIndex = -20,
                Width = "5em"
            )
        long [0 .. 10]
        codes(
        {
            noBananas "none" NA
        } );

        Apple "Apple"
            style(
                ZIndex = -20,
                Width = "5em"
            )
        long [0 .. 10]
        codes(
        {
            noApples "none" NA
        } );

        Orange "Orange"
            style(
                ZIndex = -20,
                Width = "5em"
            )
        long [0 .. 10]
        codes(
        {
            noOranges "none" NA
        } );

        kiwi "kiwi fruit"
            style(
                ZIndex = -20,
                Width = "5em"
            )
        long [0 .. 10]
        codes(
        {
            nokiwis "none" NA
        } );

        Satsuma "Satsuma"
            style(
                ZIndex = -20,
                Width = "5em"
            )
        long [0 .. 10]
        codes(
        {
            noSatsumas "none" NA
        } );

    );

    BigGrid "Indicate the amount of pieces of fruit you ate each day for the last two weeks" loop
    {
        use fruitlist -
    } fields -
    (
        Week1Mon "Mon"
            style(
                ZIndex = -20,
                Width = "4em"
            )
        long;

        Week1Tue "Tue"
            style(
                ZIndex = -20,
                Width = "4em"
            )
        long;

        Week1Wed "Wed"
            style(
                ZIndex = -20,
                Width = "4em"
            )
        long;

        Week1Thu "Thu"
            style(
                ZIndex = -20,
                Width = "4em"
            )
        long;

        Week1Fri "Fri"
            style(
                ZIndex = -20,
                Width = "4em"
            )
        long;

        Week2Mon "Mon"
            style(
                ZIndex = -20,
                Width = "4em"
            )
        long;

        Week2Tue "Tue"
            style(
                ZIndex = -20,
                Width = "4em"
            )
        long;

        Week2Wed "Wed"
            style(
                ZIndex = -20,
                Width = "4em"
            )
        long;

        Week2Thu "Thu"
            style(
                ZIndex = -20,
                Width = "4em"
            )
        long;

        Week2Fri "Fri"
            style(
                ZIndex = -20,
                Width = "4em"
            )
        long;

    ) expand;

    BigGrid2Categoricals "indicate days when you ate specific fruits, over the last two weeks" loop
    {
        use fruitlist -
    } fields -
    (
        Week1 "last week"
            style(
                ZIndex = -40
            )
        categorical
        {
            weekdayslist use \\.weekdayslist -
        };

        Week2 "2 weeks ago"
            style(
                ZIndex = -40
            )
        categorical
        {
            weekdayslist use \\.weekdayslist -
        };

    ) expand;

    PainRelief "provide amount of pain relief you provided each patient and the number of doses they took each day" loop
    {
        use peoplelist -
    } fields -
    (
        dosesgiven "Provided"
            style(
                ZIndex = -20,
                Width = "3em"
            )
        long [0 .. 100];

        Monday "Monday"
            style(
                ZIndex = -20,
                Width = "3em"
            )
        long [0 .. 100];

        Tuesday "Tuesday"
            style(
                ZIndex = -20,
                Width = "3em"
            )
        long [0 .. 100];

        Wednesday "Wednesday"
            style(
                ZIndex = -20,
                Width = "3em"
            )
        long [0 .. 100];

        Thursday "Thursday"
            style(
                ZIndex = -20,
                Width = "3em"
            )
        long [0 .. 100];

        Friday "Friday"
            style(
                ZIndex = -20,
                Width = "3em"
            )
        long [0 .. 100];

        Saturday "Saturday"
            style(
                ZIndex = -20,
                Width = "3em"
            )
        long [0 .. 100];

        Sunday "Sunday"
            style(
                ZIndex = -20,
                Width = "3em"
            )
        long [0 .. 100];

    ) expand;

    grid6_subheading "Grid with row subheadings and column total" loop
    {
        pat_related "Customer-related"
        {
            pats_prescription_tx "{#ins_consult_interact_pharma} with customers on <b>prescription</b> treatments",
            pats_nonprescription_tx "{#ins_consult_interact_pharma} with customers on <b>non-prescription</b> treatments (e.g. over-the-counter (OTC) treatments)",
            pats_vaccinations "{#ins_consult_interact_pharma} with customers on <b>vaccinations</b>",
            pats_general_health_education "{#ins_consult_interact_pharma} with customers on <b>general health education</b>, not related to prescription or OTC treatments"
        },
        presc_related "Prescription-related"
        {
            entering_prescriptions_into_the_system "Entering prescriptions into the system",
            filling_prescription "Filling prescription (i.e. filling the bottle, label printing etc.)",
            prescription_verification "Prescription verification",
            dispensing_medications_to_patients "Dispensing medications to customers",
            prescription_refills_with_no_changes "Prescription re-fills with no changes",
            prescription_refills_with_at_least_one_change "Prescription re-fills with at least one change",
            calls_pat_prescription_ready_pickup "Calls to customers to let them know their prescription is ready for pick-up"
        },
        oth_admin "Other / administrative"
        {
            engaging_physicians_healthcare_prof_admin_staff_behalf_of_pats "Engaging with physicians, other healthcare professionals or administrative staff on behalf of customers",
            engaging_insurance_comp_behalf_pats "Engaging with insurance companies on behalf of customers",
            inventory_keeping_stock "Inventory / keeping stock",
            general_administration_operational_activities "General administration / operational activities (e.g. purchasing, managing staff, ordering supplies)",
            other_activities "Other activities"
        }
    } fields -
    (
        slice "% of time"
            style(
                ZIndex = -20,
                Width = "3em"
            )
        long [0 .. 100]
        defaultanswer(0 );

    ) expand;

    ConstantSum "What percentage of patients did you see each day" loop
    {
        use weekdayslist -
    } fields -
    (
        PercentageSeen "% Seen"
            style(
                ZIndex = -20,
                Width = "4em"
            )
        double [1 .. 100];

    ) expand;

    NetPromoterScore "Please rate the following on a scale of 1 to 10<br />Where 1 is terrible and 10 is excellent" loop
    {
        use NetPromoterList -
        ran
    } fields -
    (
        NetPromoterResult "NetPromoterResult"
            style(
                ZIndex = -40
            )
        categorical [1..1]
        {
            netPromoterRating use \\.NetPromoterRating -
        };

    ) expand;

    NetPromoterComment "Please describe why you gave this score"
        style(
            ZIndex = -30
        )
    text [..1000];

    gridwithinfo "" loop
    {
        use MonthList -
    } fields -
    (
        HNSCCpts_14days "BLAH"
            style(
                ZIndex = -20
            )
        long [1 .. 999];

        linedefinitions "BLAH BLAH"
            style(
                ZIndex = -10
            )
        info;

    ) expand;

    '----------------------------------------
    ' Newspaper Questions
    '----------------------------------------
    ReallyLongOptions "here is a basic question that contains some really long options, pick an option"
        style(
            ZIndex = -40
        )
    categorical [1..1]
    {
        option1 "this is a really long option that is trying to determine whether it is possible to wrap it over several lines",
        option2 "a very short option",
        option3 "antoher long option that has so much content that its not possible to view the content on any device in a way that shows just one line.  We are testing these because onesize can not be used in these instances"
    };

    Daily "Daily: Can you tell us which of the following daily newspapers have you looked at this week, you don't need to have bought them only to have spent at least five minutes browsing"
        style(
            ZIndex = -40
        )
    categorical
    {
        use dailypapers -
    };

    TypesVsBroadsheetsSingle "Which of the following papers have you read in the last month?"
        style(
            ZIndex = -40
        )
    categorical [1..1]
    {
        use tabloidpapers sublist -,
        use broadsheetpapers sublist -,
        otherpaper "Other (please specify)" other(otherpapername ""
            style(
                ZIndex = -20
            )
        text [..100] ) fix,
        dontread "I don't read newspapers" NA
    };

    TypesVsBroadsheets "Which of the following papers have you read in the last month?"
        style(
            ZIndex = -40
        )
    categorical
    {
        use tabloidpapers sublist -,
        use broadsheetpapers sublist -,
        otherpaper "Other (please specify)" other(otherpapername ""
            style(
                ZIndex = -20
            )
        text [..100] ) fix,
        dontread "I don't read newspapers" NA
    };

    PaperTypes "Which of the following types of newspaper have you read in the last 4 weeks?"
        style(
            ZIndex = -40
        )
    categorical
    {
        use NewspaperTypesList -
    };

    DailyBalanced "DailyBalanced: Which of the following daily newspapers have you looked at this week"
        style(
            ZIndex = -40
        )
    categorical
    {
        use dailypapers -
    };

    DailyBalancedMinWidth "DailyBalancedMinWidth: Which of the following daily newspapers have you looked at this week"
        style(
            ZIndex = -40
        )
    categorical
    {
        use dailypapers -
    };

    DailyOneSize "DailyOneSize: Which of the following daily newspapers have you looked at this week"
        style(
            ZIndex = -40
        )
    categorical
    {
        use dailypapers -
    };

    DailyOneSizeMaxWidth "DailyOneSizeMaxWidth: Which of the following daily newspapers have you looked at this week"
        style(
            ZIndex = -40
        )
    categorical
    {
        use dailypapers -
    };

    DailyBalanceOneSize "DailyBalanceOneSize: Which of the following daily newspapers have you looked at this week"
        style(
            ZIndex = -40
        )
    categorical
    {
        use dailypapers -
    };

    DailyBalance_OneSize "DailyBalanceOneSize: Which of the following daily newspapers have you looked at this week"
        style(
            ZIndex = -40
        )
    categorical
    {
        use dailypapers -
    };

    DailyAll "DailyAll: Which of the following daily newspapers have you looked at this week"
        style(
            ZIndex = -40
        )
    categorical
    {
        use dailypapers -
    };

    Broadsheets "for how long have you been reading broadsheet newspapers?"
        style(
            ZIndex = -40
        )
    categorical [0..1]
    {
        use howlonglist -
    };

    Tabloids "for how long have you been reading the tabloids?"
        style(
            ZIndex = -40
        )
    categorical [0..1]
    {
        use howlonglist -
    };

    '----------------------------------------
    ' Date examples
    '----------------------------------------
    BirthDate "Enter your date of birth"
        style(
            ZIndex = -20
        )
    date;

    AppointmentDate "Enter the date of the patient's next appointment"
        style(
            ZIndex = -20
        )
    date ["1-sep-2022" .. "1-dec-2023"];

    StartedTreatment "Indicate the year the patient started treatment"
        style(
            ZIndex = -20
        )
    date [ .. "1-sep-2022"];

    '----------------------------------------
    ' Button examples
    '----------------------------------------
    YesNoButtons "Here are some Yes No Buttons, click which ever you prefer"
        style(
            ZIndex = -40
        )
    categorical [1..1]
    {
        yes "yes"
            style(
                Control(
                    Type = "Button"
                )
            ),
        no "no"
            style(
                Control(
                    Type = "Button"
                )
            )
    };

    ChoiceAsButtons "Select one of the following colours"
        style(
            ZIndex = -40
        )
    categorical [1..1]
    {
        use choiceasbuttonslist -
    };

    ChoiceAsButtonsWithCode "Select one of the following colours"
        style(
            ZIndex = -40
        )
    categorical [1..1]
    {
        use choiceasbuttonslist -
    } codes(
    {
        noneofthem "none of the above" NA
    } );

    Menu "<br/><b><u>RepInsight</u></b>"
        style(
            ZIndex = -40
        )
    categorical [..1]
    {
        newForm "Start New Form"
            style(
                Width = "20em",
                Control(
                    Type = "Button"
                )
            ),
        yourActivity "Your activity"
            style(
                Width = "30em",
                Control(
                    Type = "Button"
                )
            )
    };

    logout ""
        style(
            ZIndex = -40
        )
    categorical [..1]
    {
        quit "Log out"
            style(
                Control(
                    Type = "Button"
                )
            )
    };

    '----------------------------------------
    ' Droplist examples
    '----------------------------------------
    DropNewProducts "Which of these products best fits your needs"
        style(
            ZIndex = -60,
            Control(
                Type = "DropList"
            )
        )
    categorical [1..1]
    {
        use new_productslist sublist -
        asc
    };

    DropPapers "Which of the following daily newspapers is your favourite"
        style(
            ZIndex = -60,
            Control(
                Type = "DropList"
            )
        )
    categorical [1..1]
    {
        use FullPaperList sublist -
        asc
    } codes(
    {
        nopapers "I don't read the papers" NA
    } );

    '----------------------------------------
    ' ComboList examples
    '----------------------------------------
    ComboNewProducts "Which of these products best fits your needs"
        style(
            ZIndex = -70,
            Control(
                Type = "ComboList"
            )
        )
    categorical [1..1]
    {
        use new_productslist sublist -
        asc
    } codes(
    {
        noproduct "none of the above" NA
    } );

    ComboPapers "Which of the following tabloid & daily newspapers is your favourite"
        style(
            ZIndex = -70,
            Control(
                Type = "ComboList"
            )
        )
    categorical [1..1]
    {
        use FullPaperList sublist -
        asc
    };

    Otherpaper ""
        style(
            ZIndex = -20,
            Control(
                Type = "SingleLineEdit"
            )
        )
    text [..100];

    '----------------------------------------
    ' Read/Write examples
    '----------------------------------------
    ReadOS "Operating System:"
        style(
            ZIndex = -21
        )
    text [0..100];

    ReadBrowser "Browser:"
        style(
            ZIndex = -21
        )
    text [0..300];

    ReadDisplay "Display Dimensions"
        style(
            ZIndex = -21
        )
    text [0..50];

    ReadBrowserVersion "Display Browser Version"
        style(
            ZIndex = -21
        )
    text [0..50];

    ReadOSVersion "Display OS Version"
        style(
            ZIndex = -21
        )
    text [0..50];

    ReadDisplayWidth "Display Width"
        style(
            ZIndex = -21
        )
    text [0..10];

    ReadDisplayHeight "Display Height"
        style(
            ZIndex = -21
        )
    text [0..10];

    WriteTestInfo "Writing some data to local storage"
        style(
            ZIndex = -10
        )
    info;

    WriteFirstName "First Name:"
        style(
            ZIndex = -21
        )
    text [0..100];

    WriteSurname "Surname:"
        style(
            ZIndex = -21
        )
    text [0..100];

    ReadFirstName "First Name:"
        style(
            ZIndex = -21
        )
    text [0..100];

    ReadSurname "Surname:"
        style(
            ZIndex = -21
        )
    text [0..100];

    ReadWriteInfo "This page contains questions that are reading information from the UserAgent Screen and LocalStorage.  The results will be displayed on the next screen"
        style(
            ZIndex = -10
        )
    info;

    ReadWriteResult "Read Write Results: <ul><li> Operating System: <b>{#ReadOS} - v{#ReadOSVersion}</b></li><li>Browser: <b>{#ReadBrowser} - v{#ReadBrowserVersion}</b></li><li>Screen size: {#ReadDisplay}</li><li>First Name: <b>{#ReadFirstName}</b></li><li>Surname: <b>{#ReadSurname}</b></li></ul>"
        style(
            ZIndex = -10
        )
    info;

    '----------------------------------------
    ' Complex Grids
    '----------------------------------------
    visited_booth "I have:" loop
    {
        eli_lilly "Eli Lilly",
        leo_pharma "Leo Pharma",
        galderma "Galderma",
        abbvie "AbbVie",
        sanofi_regeneron "Sanofi-Regeneron",
        pfizer "Pfizer",
        almirall "Almirall",
        incyte "Incyte"
    } fields -
    (
        slice "Visited their booth for AD"
            style(
                ZIndex = -40
            )
        categorical [..1]
        {
            yes ""
        };

        rating "Rating (1 to 7, 7 is most valuable)"
            style(
                ZIndex = -20,
                Width = "1em"
            )
        long [1 .. 7]
        codes(
        {
            noans "No Answer" NA
        } );

        info_recall "Main piece of info recalled"
            style(
                ZIndex = -20,
                Control(
                    Type = "SingleLineEdit"
                )
            )
        text [1..999]
        codes(
        {
            noans "No Answer" NA
        } );

        visit_again "Want to visit again"
            style(
                ZIndex = -40
            )
        categorical [..1]
        {
            yes ""
        };

    ) expand;

    AppointmentsvsArrivals "Indicate the number of <b>appointments</b> and the % that arrived on time" loop
    {
        use weekdayslist -
    } fields -
    (
        Appointments "Appointments"
            style(
                ZIndex = -20,
                Width = "4em"
            )
        long;

        Arrivals "Arrivals"
            style(
                ZIndex = -20,
                Width = "4em"
            )
        long [0 .. 100];

    ) expand grid;

    '----------------------------------------
    ' Droplist Grids
    '----------------------------------------
    agewise_diff_virus_risk "<span class = ""QText2"">How at risk are the following age groups of getting sick with the following infections?</span><br/><span class=""warn1""></span>" loop
    {
        covid19 "COVID-19",
        flu "Flu",
        shingles "Shingles",
        cmv "CMV",
        rsv "RSV",
        epsteinbarr "Epstein-Barr",
        pertussis_whooping_cough "Pertussis (whooping cough)",
        pneumococcal_pneumonia "Pneumococcal pneumonia",
        meningitis "Meningitis"
    } fields -
    (
        age "" loop
        {
            ageGroup_lst use \\.ageGroup_lst -
        } fields -
        (
            slice ""
                style(
                    ZIndex = -60,
                    Control(
                        Type = "DropList"
                    )
                )
            categorical [1..1]
            {
                'selectone "{#lblselect}"
                '{
                _1 "1 - No risk at all",
                _2 "2",
                _3 "3",
                _4 "4",
                _5 "5",
                _6 "6",
                _7 "7 - Very high risk",
                dont_know "Don’t Know" '}
                
            };

        ) expand;

    ) expand;

    effective_age_wise "<span class = ""QText2"">Of those companies that you are aware of with a COVID-19 vaccine available for use or in development, how EFFECTIVE would you rate their vaccine for each age category below? </span><br/><span class=""warn1""></span>" loop
    {
        use lst_company -
    } ran fields -
    (
        under5 "Age under 5"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [1..1]
        {
            '            selectone "{#lblselect}"
            '            {
            lst_effectiveScale2 use \\.lst_effectiveScale2 - '            }
        };

        slice1 "Age 5 - 11"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [1..1]
        {
            '            selectone "{#lblselect}"
            '            {
            lst_effectiveScale2 use \\.lst_effectiveScale2 - '            }
        };

        slice2 "Age 12 - 17"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [1..1]
        {
            '            selectone "{#lblselect}"
            '            {
            lst_effectiveScale2 use \\.lst_effectiveScale2 - '            }
        };

        slice3 "Age 18 - 29"
            style(
                ZIndex = -70,
                Control(
                    Type = "ComboList"
                )
            )
        categorical [1..1]
        {
            '            selectone "{#lblselect}"
            '            {
            lst_effectiveScale2 use \\.lst_effectiveScale2 - '            }
        };

        slice4 "Age 30 - 49"
            style(
                ZIndex = -70,
                Control(
                    Type = "ComboList"
                )
            )
        categorical [1..1]
        {
            '            selectone "{#lblselect}"
            '            {
            lst_effectiveScale2 use \\.lst_effectiveScale2 - '            }
        };

        slice5 "Age 50+"
            style(
                ZIndex = -70,
                Control(
                    Type = "ComboList"
                )
            )
        categorical [1..1]
        {
            '            selectone "{#lblselect}"
            '            {
            lst_effectiveScale2 use \\.lst_effectiveScale2 - '            }
        };

    ) expand grid;

    '----------------------------------------
    ' Double loop examples
    '----------------------------------------
    GRID_Q680_BIG "Which of the pathologists in your lab have been trained to read / interpret the following manufacturers’ PD-L1 test outputs? Please select all that apply for each column even if not all pathologists at your lab within that specialty were trained."
    loop
    {
        _1 "Dako",
        _2 "Ventana",
        _3 "Biocept",
        _4 "Cell Signalling Technology",
        _5 "Life Technologies",
        _6 "ABCAM"
    } fields -
    (
        GRID_Q680 ""
        loop
        {
            _1 "Anatomic Pathologists (no subspecialty)",
            _2 "Clinical Pathologists (no subspecialty)",
            _3 "Mixed Anatomic/ Clinical Pathologists (no subspecialty)",
            _4 "Molecular Pathologists",
            _5 "Cytopathologists",
            _6 "Dermatopathologists",
            _7 "Other Pathologist subspecialty 1",
            _8 "Other Pathologist subspecialty 2",
            _9 "No pathologist received training for this kit/ antibody"
        } fields -
        (
            Q680 ""
                style(
                    ZIndex = -40
                )
            categorical [0..1]
            {
                _1 "all have been trained",
                _2 "some have been trained",
                _3 "none trained",
                _4 "EXCLUSIVE"
            };

        ) column expand;

    ) column expand;

    drug_prop_presc "<b>Please indicate the proportion of the drugs</b> that are prescribed to existing non-valvular atrial fibrillation patients who switched their drugs in last month." loop
    {
        warfarin "Combination of warfarin, heparin only or antiplatelet",
        eliquis "Eliquis only or combine with antiplatelet",
        xarelto "Xarelto only or combine with antiplatelet",
        pradaxa "Pradaxa only or combine with antiplatelet",
        lixiana "Lixiana only or combine with antiplatelet",
        rivaroxaban "Rivaroxaban Generic only or combine with antiplatelet",
        oth1 "{#pats_prop_presc_oth}" fix
    } fields -
    (
        drugs "" loop
        {
            Headprvdrugs "<b>Previous drugs</b>"
                labelstyle(
                    Align = "Center"
                )
            {
                warfarin "Combination of warfarin, heparin only or antiplatelet",
                eliquis "Eliquis only or combine with antiplatelet",
                xarelto "Xarelto only or combine with antiplatelet",
                pradaxa "Pradaxa only or combine with antiplatelet",
                lixiana "Lixiana only or combine with antiplatelet", 'apixaban "Apixaban Generic only or combine with antiplatelet",
                rivaroxaban "Rivaroxaban Generic only or combine with antiplatelet",
                oth1 "Other (In detail:) " fix
            }
        } fields -
        (
            slice ""
                style(
                    Width = "3em"
                )
                labelstyle(
                    Align = "Center",
                    Width = "10em"
                )
            long [0 .. 100]
            codes(
            {
                noans "" NA
            } );

        ) expand;

    ) expand grid;

    lineinfo "<span class=""IntroQtext"">Line definitions<br/><b><i>Start on their 1<sup>st</sup> line in the advanced/metastatic setting</i> = </b>at this visit, you started these patients on their first treatment after a diagnosis of advanced/metastatic (progressed to distant sites) tumor, irrespective of any other treatments they received prior to progressing to metastatic disease <b><i>(do not account for adjuvant/neo-adjuvant treatments in earlier stages)</i></b><br/><br/><b><i>Start on their 2<sup>nd</sup> or later lines in the advanced/metastatic setting</i> = </b>at this visit, you started these patients on their 2nd or later lines of treatment in the advanced/metastatic (progressed to distant sites) setting, including regimen additions, subtractions, beginning of maintenance therapy and/or a completely new regimen <b><i>(do not account for adjuvant/neo-adjuvant treatments in earlier stages)</i></b><br/><br/><br/>Note: a change in dosage or schedule does <b><u>NOT</u></b> count as a change in regimen/line of therapy</span>"
    info;

    docDem "" loop
    {
        use QuarterList -
    } fields -
    (
        linedefinitions "{#linedefinitionsinfo}"
        info;

        ''DEM00b
        ptworkload "<span class=""QText2"">Below is a summary of the patient workload you have reported in the previous quarter, please confirm it is still aligned with your current practice or review the patient numbers</span>" loop
        {
            lpttypes use \\.lpttypes -
        } fields -
        (
            prev "Previous"
                style(
                    ZIndex = -20,
                    Width = "3em",
                    Control(
                        ReadOnly = true
                    )
                )
                labelstyle(
                    Align = "Center",
                    Cell(
                        Width = "25%"
                    )
                )
            long [0 .. 999];

            aligned "Still aligned"
                style(
                    ZIndex = -40
                )
            categorical
            {
                still_aligned ""
            };

            current "Current"
                style(
                    ZIndex = -20,
                    Width = "3em"
                )
                labelstyle(
                    Align = "Center",
                    Cell(
                        Width = "25%"
                    )
                )
            long [0 .. 999]
            codes(
            {
                - "" NA
            } );

        ) expand grid;

        ''DEM01
        NSCLCperline "<span class=""QText2"">Among the {#NSCLCtreatedPts} Stage IIIB/IV NSCLC patients that you have personally treated in the last 3 months, how many are currently receiving their:</span>" loop
        {
            first_line "First Line (1L) treatment for NSCLC?",
            second_line "Second Line (2L) treatment for NSCLC?",
            third_or_later_line "Third or Later (3L+) treatment for NSCLC?"
        } fields -
        (
            slice1 ""
                style(
                    ZIndex = -20,
                    Width = "2em"
                )
                labelstyle(
                    Align = "Center",
                    Cell(
                        Width = "25%"
                    )
                )
            long [0 .. 999]
            codes(
            {
                - "" NA
            } );

        ) expand grid;

        ''DEM02
        nsclcROS1tki "<span class=""QText2"">Now thinking of all your {#ROS1treatedPts} Stage IIIB/IV <b>ROS1+ NSCLC</b> patients that you have personally treated in the last 3 months, how many fall in these categories:</span>" loop
        {
            lTKI use \\.ltki -
        } fields -
        (
            slice1 ""
                style(
                    ZIndex = -20,
                    Width = "2em"
                )
                labelstyle(
                    Align = "Center",
                    Cell(
                        Width = "25%"
                    )
                )
            long [0 .. 99]
            codes(
            {
                - "" NA
            } );

        ) expand grid;

        ''DEM05a
        nsclcROS1regimenrankchoice "<span class=""QText2"">Please indicate which is your first, second and third choice for your typical 1<sup>st</sup> Line, 2<sup>nd</sup> and 3<sup>rd</sup>+ Line Stage IIIB-IV <b>ROS1+ NSCLC</b> patients?</span>"
        loop
        {
            L1 "Stage IIIB/IV ROS1+ 1<sup>st</sup> Line",
            L2 "Stage IIIB/IV ROS1+ 2<sup>nd</sup> Line",
            L3 "Stage IIIB/IV ROS1+ 3<sup>rd</sup>+ Line"
        } fields -
        (
            drugs "" loop
            {
                crizotinib "Crizotinib (Xalkori®)"
                    labelstyle(
                        Cell(
                            Width = "8%"
                        )
                    ),
                lorlatinib "Lorlatinib (Lorbrena®)",
                entrectinib "Entrectinib (Rozlytrek®)",
                ceritinib "Ceritinib (Zykadia®)",
                alectinib "Alectinib (Alecensa®)",
                brigatinib "Brigatinib (Alunbrig®)",
                other_tkis "Other TKIs" fix,
                chemo_only "Chemo Only" fix,
                iobased_regimens "IO-based regimens" fix,
                others "Others" fix
            } ran fields -
            (
                choice ""
                    style(
                        ZIndex = -60,
                        Control(
                            Type = "DropList"
                        )
                    )
                categorical [..1]
                {
                    lchoice use \\.lchoice sublist "  ---------  "
                };

            ) expand;

        ) column expand;

        ''DEM03
        METEx14tki "<span class=""QText2"">Now thinking of all your {#METEx14treatedPts} Stage IIIB/IV <b>METEx14+ NSCLC</b> patients that you have personally treated in the last 3 months, how many fall in these categories:</span>" loop
        {
            lTKI use \\.ltki -
        } fields -
        (
            slice1 ""
                style(
                    ZIndex = -20,
                    Width = "2em"
                )
                labelstyle(
                    Align = "Center",
                    Cell(
                        Width = "25%"
                    )
                )
            long [0 .. 99]
            codes(
            {
                - "" NA
            } );

        ) expand grid;

        ''DEM05b
        METEx14regimenrankchoice "<span class=""QText2"">Please indicate which is your first, second and third choice for your typical 1<sup>st</sup> Line, 2<sup>nd</sup> and 3<sup>rd</sup>+ Line Stage IIIB-IV <b>METEx14+ NSCLC</b> patients?</span>"
        loop
        {
            L1 "Stage IIIB/IV METEx14+ 1<sup>st</sup> Line",
            L2 "Stage IIIB/IV METEx14+ 2<sup>nd</sup> Line",
            L3 "Stage IIIB/IV METEx14+ 3<sup>rd</sup>+ Line"
        } fields -
        (
            drugs "" loop
            {
                crizotinib "Crizotinib (Xalkori®)"
                    labelstyle(
                        Cell(
                            Width = "8%"
                        )
                    ),
                capmatinib "Capmatinib (Trabecta®)",
                entrectinib "Entrectinib (Rozlytrek®)",
                osimertinib "Osimertinib (Tagrisso®)",
                tepotinib "Tepotinib (Tepmetko®)",
                erlotinib "Erlotinib (Tarceva®)",
                othertkis "Other TKIs" fix,
                chemoonly "Chemo Only" fix,
                iobasedregimens "IO-based regimens" fix,
                others "Others" fix
            } ran fields -
            (
                choice ""
                    style(
                        ZIndex = -60,
                        Control(
                            Type = "DropList"
                        )
                    )
                categorical [..1]
                {
                    lchoice use \\.lchoice sublist "  ---------  "
                };

            ) expand;

        ) column expand;

        ''DEM04
        NTRKtki "<span class=""QText2"">Now thinking of all your {#NTRKtreatedPts} advanced/metastatic <b>NTRK Fusion+ Solid Tumors</b> patients that you have personally treated in the last 3 months, how many fall in these categories:</span>" loop
        {
            currentlyOnATki "Currently on a NTRK Fusion+ Targeted TKI?",
            receivedATkiInAPreviousLineButBurrentlyNot "Received an NTRK Fusion+ Targeted TKI in a previous line but currently not?",
            neverReceivedATkiTkiNaive "Never Received an NTRK Fusion+ Targeted TKI (NTRK Fusion+ TKI naïve)?"
        } fields -
        (
            slice1 ""
                style(
                    ZIndex = -20,
                    Width = "2em"
                )
                labelstyle(
                    Align = "Center",
                    Cell(
                        Width = "25%"
                    )
                )
            long [0 .. 99]
            codes(
            {
                - "" NA
            } );

        ) expand grid;

        ''DEM05c
        NTRKregimenRankchoice "<span class=""QText2"">Please indicate if larotrectinib (Viktravi) or entrectinib (Rozlytrek) are your top choices for 1st, 2nd or 3rd Line for the following typical advanced/metastatic <b>NTRK Fusion+ Solid Tumors</b>.</span>"
        loop
        {
            lsolidtumors use \\.lsolidtumors -
        } fields -
        (
            drugs "" loop
            {
                larotrectinib "Larotrectinib (Viktravi)"
                    labelstyle(
                        Cell(
                            Width = "8%"
                        )
                    ),
                entrectinib "Entrectinib (Rozlytrek)"
            } ran fields -
            (
                choice ""
                    style(
                        ZIndex = -60,
                        Control(
                            Type = "DropList"
                        )
                    )
                categorical [1..1]
                {
                    lLines use \\.lLines sublist "  ---------  "
                };

            ) expand;

        ) column expand;

        ''DEM06aa
        avgROS1clinicalTrialPts "<span class=""QText2"">You have previously reported having an average of {#insAvgROS1clinNum} <b>Stage IIIB/IV ROS1+</b> patients on a clinical trial for their rare mutation cancer. Please confirm that the figure is still accurate or edit if you estimate having a lower or higher number of <b>Stage IIIB/IV ROS1+ NSCLC</b> patients enrolled on a clinical trial.</span>"
            style(
                ZIndex = -20,
                Width = "2em"
            )
        long [0 .. 99]
        codes(
        {
            aligned "still aligned"
                style(
                    ElementAlign = "Right"
                )
            exclusive
        } );

        ''DEM06ba
        avgMETEx14clinicalTrialPts "<span class=""QText2"">You have previously reported having an average of {#insAvgMETEx14clinNum} <b>Stage IIIB/IV METEx14+</b> patients on a clinical trial for their rare mutation cancer. Please confirm that the figure is still accurate or edit if you estimate having a lower or higher number of <b>Stage IIIB/IV METEx14+ NSCLC</b> patients enrolled on a clinical trial.</span>"
            style(
                ZIndex = -20,
                Width = "2em"
            )
        long [0 .. 99]
        codes(
        {
            aligned "still aligned"
                style(
                    ElementAlign = "Right"
                )
            exclusive
        } );

        ''DEM06ca
        avgNTRKclinicalTrialPts "<span class=""QText2"">You have previously reported having an average of {#insAvgNTRKclinNum} <b>advanced/metastatic NTRK Fusion+ Solid Tumor</b> patients on a clinical trial for their rare mutation cancer. Please confirm that the figure is still accurate or edit if you estimate having a lower or higher number of <b>advanced/metastatic NTRK Fusion+ Solid Tumor</b> patients enrolled on a clinical trial.</span>"
            style(
                ZIndex = -20,
                Width = "2em"
            )
        long [0 .. 99]
        codes(
        {
            aligned "still aligned"
                style(
                    ElementAlign = "Right"
                )
            exclusive
        } );

        ''DEM07
        pharmaReps "<span class=""QText2"">For which, if any of the following drugs did you have a personal interaction with a Pharmaceutical Sales Representative during the past 30 days either in person or via zoom/video?</span><br/><span class=""warn1"">Please select all that apply</span>"
        loop
        {
            inperson "In-person detail from pharma sales rep",
            online "Video/zoom detail from pharma sales rep"
        } fields -
        (
            slice ""
                style(
                    ZIndex = -40
                )
            categorical [1..]
            {
                drg1 ""
                {
                    crizotinib "Crizotinib (Xalkori®)"
                        labelstyle(
                            Cell(
                                Width = "15%"
                            )
                        ),
                    lorlatinib "Lorlatinib (Lorbrena®)",
                    entrectinib "Entrectinib (Rozlytrek®)",
                    ceritinib "Ceritinib (Zykadia®)",
                    alectinib "Alectinib (Alecensa®)",
                    brigatinib "Brigatinib (Alunbrig®)",
                    osimertinib "Osimertinib (Tagrisso®)",
                    capmatinib "Capmatinib (Tabrecta®)",
                    tepotinib "Tepotinib (Tepmetko®)",
                    larotrectinib "Larotrectinib (Viktravi®)",
                    cabozantinib "Cabozantinib (Cabometyx®)"
                } ran,
                drg2 ""
                {
                    atezolizumabTecentriq "Atezolizumab (Tecentriq®)",
                    nivolumabOpdivo "Nivolumab (OPDIVO®)",
                    pembrolizumabKeytruda "Pembrolizumab (KEYTRUDA®)",
                    durvalumabImfinzi "Durvalumab (Imfinzi®)"
                } ran,
                noneOfTheAbove "None of the Above" fix exclusive,
                doNotRecall "Do Not Recall" fix exclusive,
                notAllowPersonalInteractionRep "My Institution does not allow personal interaction with Pharmaceutical Sales Representatives" fix exclusive
            };

        ) column expand;

        ''DEM08a
        ros1MutationPercent "<span class=""QText2"">Thinking of all the unique Stage IIIB/IV NSCLC patients you have personally treated in the past 3 months, what proportion carried a <b>ROS1+</b> mutation?</span>"
            style(
                ZIndex = -20,
                Width = "3em"
            )
        long [0 .. 100];

        ''DEM08b
        METEx14MutationPercent "<span class=""QText2"">Thinking of all the unique Stage IIIB/IV NSCLC patients you have personally treated in the past 3 months, what proportion carried a <b>METExon14+</b> mutation?</span>"
            style(
                ZIndex = -20,
                Width = "3em"
            )
        long [0 .. 100];

        ''DEM08c
        NTRKMutationPercent "<span class=""QText2"">Thinking of all the unique advanced/metastatic Solid Tumors patients you have personally treated in the past 3 months, what proportion carried a <b>NTRK Fusion+</b> mutation?</span>"
            style(
                ZIndex = -20,
                Width = "3em"
            )
        long [0 .. 100];

        ''DEM06aa - dummy
        DummyavgROS1clinicalTrialPts "<span class=""QText2"">You have previously reported having an average of {#insAvgROS1clinNum} <b>Stage IIIB/IV ROS1+</b> patients on a clinical trial for their rare mutation cancer. Please confirm that the figure is still accurate or edit if you estimate having a lower or higher number of <b>Stage IIIB/IV ROS1+ NSCLC</b> patients enrolled on a clinical trial.</span>"
            style(
                Width = "2em"
            )
        long [0 .. 99];

        ''DEM06ba - Dummy
        DummyavgMETEx14clinicalTrialPts "<span class=""QText2"">You have previously reported having an average of {#insAvgMETEx14clinNum} <b>Stage IIIB/IV METEx14+</b> patients on a clinical trial for their rare mutation cancer. Please confirm that the figure is still accurate or edit if you estimate having a lower or higher number of <b>Stage IIIB/IV METEx14+ NSCLC</b> patients enrolled on a clinical trial.</span>"
            style(
                Width = "2em"
            )
        long [0 .. 99];

        ''DEM06ca - Dummy
        DummyavgNTRKclinicalTrialPts "<span class=""QText2"">You have previously reported having an average of {#insAvgNTRKclinNum} <b>advanced/metastatic NTRK Fusion+ Solid Tumor</b> patients on a clinical trial for their rare mutation cancer. Please confirm that the figure is still accurate or edit if you estimate having a lower or higher number of <b>advanced/metastatic NTRK Fusion+ Solid Tumor</b> patients enrolled on a clinical trial.</span>"
            style(
                Width = "2em"
            )
        long [0 .. 99];

    ) expand;

    '----------------------------------------
    ' Complex grid with totals
    '----------------------------------------
    grid5_rowtotal_diffpostlabel_percol "Row Total excluding first column. Different post label for 1st column (readonly) and remaining columns" loop
    {
        stage_ia "Stage Ia",
        stage_ib "Stage Ib",
        stage_iia "Stage IIa",
        stage_iib "Stage IIb",
        stage_iiia "Stage IIIa",
        stage_iiib "Stage IIIb",
        stage_iiic "Stage IIIc",
        stage_iv "Stage IV"
    } fields -
    (
        tot "Total TNBC"
            style(
                ZIndex = -20,
                Width = "2em",
                Control(
                    ReadOnly = true
                )
            )
            labelstyle(
                Align = "Center"
            )
        long [0 .. 999]
        codes(
        {
            - "" NA
        } );

        slice1 "Neo-Adjuvant"
            style(
                ZIndex = -20,
                Width = "2em"
            )
        long [0 .. 100]
        codes(
        {
            - "" NA
        } );

        slice2 "Adjuvant"
            style(
                ZIndex = -20,
                Width = "2em"
            )
            labelstyle(
                Align = "Center"
            )
        long [0 .. 100]
        codes(
        {
            - "" NA
        } );

        slice3 "Early Drug Treatment"
            style(
                ZIndex = -20,
                Width = "2em"
            )
            labelstyle(
                Align = "Center"
            )
        long [0 .. 100]
        codes(
        {
            - "" NA
        } );

        slice4 "Metastatic"
            style(
                Hidden = true,
                ZIndex = -20,
                Width = "2em"
            )
            labelstyle(
                Align = "Center"
            )
        long [0 .. 100]
        codes(
        {
            - "" NA
        } );

        slice5 "No Drug Tx"
            style(
                ZIndex = -20,
                Width = "2em"
            )
            labelstyle(
                Align = "Center"
            )
        long [0 .. 100]
        codes(
        {
            - "" NA
        } );

    ) expand;

    lperc_info "%"
    info;

    filterOnGender "Gender"
    categorical [1..1]
    {
        use GenderList -
    };

    diagnosis1 ""
        style(
            ZIndex = -60,
            Control(
                Type = "DropList"
            )
        )
    categorical [1..1]
    {
        use ldiag1 -
    };

    diagnosis2 ""
        style(
            ZIndex = -60,
            Control(
                Type = "DropList"
            )
        )
    categorical [1..1]
    {
        use ldiag1 -
    };

    '----------------------------------------
    ' Dynamic Labels
    '----------------------------------------
    DynamicLabel1 "How many <span class=%%%bold%%%>bananas</span> did you eat last week"
    info;

    DynamicLabel2 "if you could eat more bananas how many would you eat today"
    info;

    DynamicLabel3 "How may bananas does your family eat in a week"
    info;

    DynamicLabelChoice "Which Label do you wnat to see"
        style(
            ZIndex = -40
        )
    categorical [1..1]
    {
        choice1 "last week",
        choice2 "how many more",
        choice3 "your family"
    };

    DynamicQuestion ""
        style(
            ZIndex = -20
        )
    long [ .. 40];

    FruitSelection ""
    categorical
    {
        use fruitlist -
    };

    FruitFirst "previously you selected the following fruit"
    categorical [1..1]
    {
        use fruitlist -
    };

    PlannedSessionsLabel1 "What was the date of your last session"
    info;

    PlannedSessionsLabel2 "What is the planned date of your next session"
    info;

    SessionsPlanned "Do you have any sessions planned or already had sessions with this patient"
        style(
            ZIndex = -40
        )
    categorical [1..1]
    {
        Past "I have sessions planned",
        Future "I have already had sessions"
    };

    MonthyeargridNumericLoop "Indicate the data of:" loop [1] fields -
    (
        WhichMonth ""
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [1..1]
        {
            monthlist use \\.MonthList -
        };

        WhichYear ""
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [1..1]
        {
            yearlist use \\.YearList -
        };

    );

    MonthyeargridCategoricalLoop "" loop
    {
        q1 "Indicate the date of:"
    } fields -
    (
        WhichMonth ""
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [1..1]
        {
            monthlist use \\.MonthList -
        };

        WhichYear ""
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [1..1]
        {
            yearlist use \\.YearList -
        };

    );

    '----------------------------------------
    ' Filter
    '----------------------------------------
    FirstChoice "Which of the <sup>following</sup> papers &amp; would be your first choice if all were available?"
        style(
            ZIndex = -40
        )
    categorical [1..1]
    {
        use NewspapersList -
        asc
    };

    SecondChoice "If your first choice is not available, which of the other papers would you choose?"
        style(
            ZIndex = -40
        )
    categorical [1..1]
    {
        use NewspapersSubList -
        ran
    };

    firstchoicedroplist "Which of the <sup>following</sup> papers &amp; would be your first choice if all were available?"
        style(
            ZIndex = -60,
            Control(
                Type = "DropList"
            )
        )
    categorical [1..1]
    {
        use NewspapersList -
        asc
    };

    secondchoicedroplist "If your first choice is not available, which of the other papers would you choose?"
        style(
            ZIndex = -60,
            Control(
                Type = "DropList"
            )
        )
    categorical [1..1]
    {
        use NewspapersSubList -
        ran
    };

    '----------------------------------------
    ' Invisibility (Questions)
    '----------------------------------------
    HowManyDependents "How many dependents do you have"
        style(
            ZIndex = -20
        )
    long [0 .. 10];

    DependentType "How would you describe your dependents"
        style(
            ZIndex = -40
        )
    categorical
    {
        MyChildren "My children",
        MySpouces "My spouces children",
        Fosters "Foster children",
        adoptered "Adopted children",
        Refugees "Refugees"
    };

    HowManyMarriages "How many mariages have you had"
        style(
            ZIndex = -20
        )
    long [0 .. 10];

    SameMarriage "Are all your dependents from the same marriage"
        style(
            ZIndex = -40
        )
    categorical [..1]
    {
        Yes "Yes",
        No "No"
    };

    MonthYearBlock "When:" block fields
    (
        AskMonth "Month"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [1..1]
        {
            Jan "Jan",
            Feb "Feb",
            Mar "Mar",
            Apr "Apr",
            May "May",
            Jun "Jun",
            Jul "Jul",
            Aug "Aug",
            Sep "Sep",
            Oct "Oct",
            Nov "Nov",
            Dec "Dec"
        };

        Askyear "Year"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [1..1]
        {
            year2020 "2020",
            year2021 "2021",
            year2022 "2022",
            year2023 "2023"
        };

    );

    Howmanypatients "How many patients"
    long [1 .. 10]
    codes(
    {
        nopatients "I had no patients" NA
    } );

    '----------------------------------------
    ' Invisibility (Alternatives)
    '----------------------------------------
    HowManyDaily "How many daily newspapers did you read last week"
        style(
            ZIndex = -20
        )
    long [0 .. 10];

    HowManyWeekend "How many weekend newspapers did you read last week"
        style(
            ZIndex = -20
        )
    long [0 .. 10];

    WhichPapers ""
        style(
            ZIndex = -40
        )
    categorical
    {
        use FullPaperList -
        asc
    };

    WhichPapersDroplist ""
        style(
            ZIndex = -60,
            Control(
                Type = "DropList"
            )
        )
    categorical
    {
        use FullPaperList -
        asc
    };

    WhichPapersCombo ""
        style(
            ZIndex = -70,
            Control(
                Type = "ComboList"
            )
        )
    categorical
    {
        use FullPaperList -
        asc
    };

    '----------------------------------------
    ' Other specify with lists
    '----------------------------------------
    otherspecifylistdropdown "Select the relevant tumour or provide separate details"
        style(
            ZIndex = -65,
            Control(
                Type = "DropList"
            )
        )
    categorical [1..1]
    {
        use lsolidtumors -,
        otheroption "Other Tumour" other
    };

    otherspecifyotherdropdown "Provide the name of the tumour"
        style(
            ZIndex = -20,
            Control(
                Type = "SingleLineEdit"
            )
        )
    text [..200];

    patienttumours "select the relevant tumour for each of these patients" loop
    {
        patient1 "first patient",
        patient2 "second patient",
        patient3 "third patient"
    } fields -
    (
        otherspecifylistdropdown "Select the relevant tumour or provide separate details"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [1..1]
        {
            lsolidtumors use \\.lsolidtumors -,
            otheroption "Other Tumour"
        };

        otherspecifyotherinput "Provide the name of the tumour"
            style(
                ZIndex = -20,
                Control(
                    Type = "SingleLineEdit"
                )
            )
        text [..200]
        codes(
        {
            noanswer "" NA
        } );

    ) expand;

    patienttumoursCombo "select the relevant tumour for each of these patients" loop
    {
        patient1 "first patient",
        patient2 "second patient",
        patient3 "third patient"
    } fields -
    (
        otherspecifylistcombo "Select the relevant tumour or provide separate details"
            style(
                ZIndex = -70,
                Control(
                    Type = "ComboList"
                )
            )
        categorical [1..1]
        {
            lsolidtumors use \\.lsolidtumors -,
            otheroption "Other Tumour"
        };

        otherspecifyotherinput "Provide the name of the tumour"
            style(
                ZIndex = -20,
                Control(
                    Type = "SingleLineEdit"
                )
            )
        text [..200]
        codes(
        {
            noanswer "" NA
        } );

    ) expand;

    patienttumoursNumeric "select the relevant tumour for each of these patients" loop [1..3] fields -
    (
        otherspecifylistdropdown "Select the relevant tumour or provide separate details"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [1..1]
        {
            lsolidtumors use \\.lsolidtumors -,
            otheroption "Other Tumour"
        };

        otherspecifyotherinput "Provide the name of the tumour"
            style(
                ZIndex = -20,
                Control(
                    Type = "SingleLineEdit"
                )
            )
        text [..200];

    ) expand;

    '----------------------------------------
    ' Hiding Questions in a grid
    '----------------------------------------
    HiddenQuestions "Here is a grid containing various hidden questions" loop
    {
        firstrow "first",
        secondrow "second",
        thirdrow "third"
    } fields -
    (
        'input
        asimplequestion "Input"
            style(
                ZIndex = -20,
                Width = "5em",
                Control(
                    Type = "SingleLineEdit"
                )
            )
        text
        codes(
        {
            notapp "not applicable" NA
        } );

        'pre/post label input
        asimplequestionwithlabels "Input &amp; labels"
            style(
                ZIndex = -20,
                Width = "5em",
                Control(
                    Type = "SingleLineEdit"
                )
            )
        double
        codes(
        {
            notapp "not applicable" NA
        } );

        'dropdown
        asimpledropdown "dropdown"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [..1]
        {
            male "male",
            female "female",
            none "non-binary"
        };

        'combobox
        asimplecombobox "combobox"
            style(
                ZIndex = -70,
                Control(
                    Type = "ComboList"
                )
            )
        categorical [..1]
        {
            male "male",
            female "female",
            none "non-binary"
        };

        'slider
        asimpleslider "slider"
            style(
                ZIndex = -50,
                Width = "17em",
                Control(
                    Type = "SingleLineEdit"
                )
            )
        long [1 .. 5]
        codes(
        {
            notapp "not applicable" NA
        } );

    ) expand;

    '----------------------------------------
    ' Reset questions
    '----------------------------------------
    ResetChoice "Choose which question to display"
        style(
            ZIndex = -40
        )
    categorical [1..1]
    {
        choicetext "text question",
        choicenumber "number question",
        choicedroplist "droplist question",
        choicecombo "combo-box question",
        choicesingle "single choice question",
        choicemulti "multi choice question",
        choiceslider "slider question"
    };

    choicetext "this is a text question"
        style(
            ZIndex = -20,
            Width = "5em",
            Control(
                Type = "SingleLineEdit"
            )
        )
    text [..10]
    codes(
    {
        notapp "not applicable" NA
    } );

    choicenumber "number question"
        style(
            ZIndex = -20,
            Width = "5em",
            Control(
                Type = "SingleLineEdit"
            )
        )
    long [1 .. 109]
    codes(
    {
        notapp "not applicable" NA
    } );

    choicedroplist "droplist question"
        style(
            ZIndex = -60,
            Control(
                Type = "DropList"
            )
        )
    categorical [..1]
    {
        first "first",
        second "second",
        third "third"
    } codes(
    {
        notapp "not applicable" NA
    } );

    choicecombo "combo-box question"
        style(
            ZIndex = -70,
            Control(
                Type = "ComboList"
            )
        )
    categorical [..1]
    {
        fourth "fourth",
        fifth "fifth",
        sixth "sixth"
    } codes(
    {
        notapp "not applicable" NA
    } );

    choicesingle "single choice question"
        style(
            ZIndex = -40
        )
    categorical [..1]
    {
        seventh "seventh",
        eighth "eighth",
        nineth "nineth"
    };

    choicemulti "multi choice question"
        style(
            ZIndex = -40
        )
    categorical
    {
        tenth "tenth",
        eleventh "eleventh",
        tweleth "tweleth",
        othernumber "othernumber" other(othernumberDetail "please specify"
            style(
                ZIndex = -20
            )
        long [13 .. 200] ),
        nonumber "none of these" fix exclusive
    };

    choiceslider "slider question"
        style(
            ZIndex = -50
        )
    long [1 .. 10]
    codes(
    {
        notapp "not applicable" NA
    } );

    '----------------------------------------
    ' Invisibility (Whole Grids)
    '----------------------------------------
    WhichGridVisible ""
    categorical
    {
        combo "combo-box",
        dropdown "dropdown",
        slider "slider",
        input "inputs",
        choice "choices"
    };

    visiblecombogrid "This is a numerical loop of comboboxes" loop [1..2] fields -
    (
        comboboxquestion "Pick from the following list"
            style(
                ZIndex = -70,
                Control(
                    Type = "ComboList"
                )
            )
        categorical [1..1]
        {
            abasicoptionlist use \\.abasicoptionlist -
        };

        comboboxquestiontwo "Pick from the following list"
            style(
                ZIndex = -70,
                Control(
                    Type = "ComboList"
                )
            )
        categorical [1..1]
        {
            alongoptionlist use \\.alongoptionlist -
        };

    ) expand;

    visibledropdowngrid "This is a categorical loop of dropdowns" loop
    {
        iteration1 "first drug",
        iteration2 "second drug"
    } fields -
    (
        droplistquestion "Pick from the following list"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [1..1]
        {
            abasicoptionlist use \\.abasicoptionlist -
        };

        droplistquestiontwo "Pick from the following list"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [1..1]
        {
            alongoptionlist use \\.alongoptionlist -
        };

    ) expand;

    visibleslidergrid "This is a numerical loop of sliders" loop [1..2] fields -
    (
        sliderquestion "Set a value between 1 and 10"
            style(
                ZIndex = -50,
                Width = "350px"
            )
        long [1 .. 10]
        codes(
        {
            Novalue "I don't want to pick a value" REF
        } );

    ) expand;

    visibleinputsgrid "This is a categorical loop of inputs" loop
    {
        iteration1 "first drug",
        iteration2 "second drug"
    } fields -
    (
        lowestvalue "Enter a low number"
            style(
                ZIndex = -20,
                Width = "5em"
            )
        long [0 .. 10];

        highestvalue "Enter a high number"
            style(
                ZIndex = -20,
                Width = "7em"
            )
        long [100 .. 200];

    ) expand;

    visiblechoicegrid "This is a categorical loop of choices" loop
    {
        iteration1 "first drug",
        iteration2 "second drug"
    } fields -
    (
        choicequestion "Pick from the following "
            style(
                ZIndex = -40
            )
        categorical [1..1]
        {
            abasicoptionlist use \\.abasicoptionlist -
        };

    ) expand;

    '----------------------------------------
    ' Complex Definitions
    '----------------------------------------
    PostCodeBlockII "" block fields
    (
        PostCodeLeft "Post code"
            style(
                ZIndex = -20,
                Width = "5em"
            )
        text [0..5];

        PostCodeRight ""
            style(
                ZIndex = -20,
                Width = "5em"
            )
        text [0..5];

    );

    WrappedInputOptionsBlock "How many of the following did you provide?<br />input how many and select the related drug" block fields
    (
        HowMany ""
            style(
                ZIndex = -20
            )
        long [ .. 100];

        Drug ""
            style(
                ZIndex = -40
            )
        categorical [1..1]
        {
            moderna "Moderna",
            cansinoBiologics "CanSino Biologics",
            inovio "Inovio",
            sinovac "Sinovac",
            pfizerBiontech "Pfizer / BioNTech",
            astrazenecaUniversityOfOxford "AstraZeneca / University of Oxford"
        };

    );

    PostCodeBlockSideBySide "Post code"
        style(
            ZIndex = -2000
        )
    block fields
    (
        PostCodeLeft ""
            style(
                ZIndex = -20,
                Width = "5em"
            )
        text [0..5];

        PostCodeRight ""
            style(
                ZIndex = -20,
                Width = "5em"
            )
        text [0..5];

    );

    WeightandMeasureblock "How many of the following did you provide?<br />input how many and select the related drug" block fields
    (
        weight ""
            style(
                ElementAlign = "Right",
                ZIndex = -20,
                Width = "3em"
            )
        text [0..5];

        measure ""
            style(
                ElementAlign = "Right",
                ZIndex = -60,
                Width = "4em",
                Control(
                    Type = "DropList"
                )
            )
        categorical [1..1]
        {
            gram "g",
            floz "fl oz",
            ounce "oz"
        };

    );

    WeightandMeasureblockSidebySide "How many of the following did you provide?<br />input how many and select the related drug" block fields
    (
        weight "How much content"
            style(
                ElementAlign = "Right",
                ZIndex = -20,
                Width = "3em"
            )
        text [0..5];

        measure ""
            style(
                ElementAlign = "Right",
                ZIndex = -60,
                Width = "4em",
                Control(
                    Type = "DropList"
                )
            )
        categorical [1..1]
        {
            gram "g",
            floz "fl oz",
            ounce "oz"
        };

    );

    OtherandSpecifyblock "Pick one of these options" block fields
    (
        pickanoption ""
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [1..1]
        {
            option1 "option 1",
            option2 "option 2",
            option3 "option 3",
            option4 "option 4",
            otheroption "other option" other
        } codes(
        {
            noneofthem "I don't use any of these" NA
        } );

        theotheroption ""
            style(
                ElementAlign = "Right",
                ZIndex = -20,
                Control(
                    Type = "SingleLineEdit"
                )
            )
        text [1..10]
        codes(
        {
            noanswer "" NA
        } );

    );

    InputandonecodeGrid "How many sports do your children play each weekend" loop
    {
        use RowList -
    } fields -
    (
        NumberOfSports ""
            style(
                Align = "Left",
                ZIndex = -20
            )
        long [ .. 10]
        codes(
        {
            nosport "they don't play sport"
                style(
                    ElementAlign = "Right",
                    ZIndex = -40
                )
            NA
        } );

    );

    InputandtwocodesGrid "How many sports do your children play each weekend" loop
    {
        use RowList -
    } fields -
    (
        NumberOfSports ""
            style(
                ZIndex = -20
            )
        long [ .. 10]
        codes(
        {
            nosport "they don't play sport"
                style(
                    ElementAlign = "Right",
                    ZIndex = -40
                )
            exclusive,
            otherfamily "they don't live with me at weekends"
                style(
                    ElementAlign = "Right"
                )
            exclusive
        } );

    );

    TwoInputsGrid "Provide the postcode where each child resides" loop
    {
        use RowList -
    } fields -
    (
        PostcodeLeft ""
        text [..10];

        PostcodeRight ""
        text [..10];

    );

    '----------------------------------------
    ' onerow grids
    '----------------------------------------
    date_grid "Date (grid)" loop [1] fields -
    (
        month "Month"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [1..1]
        {
            jan "January",
            feb "February",
            mar "March",
            apr "April"
        };

        year "Year"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [1..1]
        {
            _2020 "2020",
            _2021 "2021",
            _2022 "2022"
        };

    ) expand;

    '----------------------------------------
    ' Categorical grids
    '----------------------------------------
    AnyFruitByDay "Which of the following fruit did you consume each day this week" loop
    {
        use weekdayslist -
    } fields -
    (
        whichfruitmulti ""
        categorical
        {
            FruitList use \\.fruitlist -,
            NoFruit "No Fruit" fix exclusive
        };

    ) expand;

    AnyFruitByDaywithOther "Which of the following fruit did you consume each day this week" loop
    {
        use weekdayslist -
    } fields -
    (
        whichfruitmulti ""
        categorical
        {
            FruitListwithother use \\.fruitlistwithother -
        };

    ) expand;

    DailyNewspapersByDay "Indicate the preferred newspaper for each day" loop
    {
        use daysoftheweeklist -
    } fields -
    (
        Whichpaper "Whichpaper"
            style(
                ZIndex = -40
            )
        categorical [1..1]
        {
            dailypapers use \\.dailypapers -
        };

    ) expand;

    DailyNewspapersByDaySublists "Indicate the preferred newspaper for each day" loop
    {
        use weekdayslistfull -
    } fields -
    (
        Whichpaper "Whichpaper"
            style(
                ZIndex = -40
            )
        categorical [1..1]
        {
            FullNewspapersSubList use \\.FullNewspapersSubList -
            ran
        };

    ) expand;

    '----------------------------------------
    ' 1 column
    '----------------------------------------
    onecolumnsmoke "the smoke questions in a single column" loop [1] fields -
    (
        Doyou_smoke "Have you smoked at least one cigarette, or vaped in the last week"
            style(
                ZIndex = -40
            )
        categorical
        {
            Yes_Smoked "At least one cigarette/Cigar",
            Yes_Vaped "Used a Vape at least once",
            NoSmoke "I have not smoked any cigarettes or vaped" exclusive
        };

        Howmanysmoked "How many cigarettes did you smoke in the last seven days"
            style(
                ZIndex = -20
            )
        long [0 .. ]
        codes(
        {
            notanswered "I don't smoke cigarettes" NA
        } );

        PleaseReview "Please review your answers if you did not smoke any cigarettes in the last seven days"
        info;

        Weekendpercentage "What percentage do you smoke at the weekend"
            style(
                ZIndex = -50
            )
        long [0 .. 100]
        codes(
        {
            notanswered "I don't smoke at the weekend" NA
        } );

        Howmanyvaped "How many times did you use your vape in the last seven days?"
            style(
                ZIndex = -40
            )
        categorical [0..1]
        {
            once "once",
            twotoseven "between two and seven",
            eighttofourteen "Between eight and fourteen",
            morethanforteen "More than fourteeen times"
        };

        brandswhich "Which of the following cigar brand have you used in the last month"
            style(
                ZIndex = -40
            )
        categorical
        {
            cigarbrandslist use \\.cigarbrandslist -
        };

        whichcigars "Which of the following cigar brands have you used in the last month"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical
        {
            cigarbrandslist use \\.cigarbrandslist -
        };

        whichcigarettes "Which of the following cigarette brands have you used in the last month"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical
        {
            cigarettebrandslist use \\.cigarettebrandslist -
        };

        smokecigars "Do you smoke cigars or cigarettes"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [0..1]
        {
            cigars "cigars",
            cigarettes "cigarettes"
        };

        DidyouPreviously "Did you previously smoke?"
            style(
                ZIndex = -40
            )
        categorical [0..1]
        {
            YesIsmoked "Yes I smoked",
            Nosmoked "No, I never smoked before vaping"
        };

    ) expand;

    onecolumnsmokecol "the smoke questions in a single column"
    loop [1] fields -
    (
        Doyou_smoke "Have you smoked at least one cigarette, or vaped in the last week"
            style(
                ZIndex = -40
            )
        categorical
        {
            Yes_Smoked "At least one cigarette/Cigar",
            Yes_Vaped "Used a Vape at least once",
            NoSmoke "I have not smoked any cigarettes or vaped" exclusive
        };

        Howmanysmoked "How many cigarettes did you smoke in the last seven days"
            style(
                ZIndex = -20
            )
        long [0 .. ]
        codes(
        {
            notanswered "" NA
        } );

        PleaseReview "Please review your answers if you did not smoke any cigarettes in the last seven days"
        info;

        Weekendpercentage "What percentage do you smoke at the weekend"
            style(
                ZIndex = -50
            )
        long [0 .. 100]
        codes(
        {
            notanswered "" NA
        } );

        Howmanyvaped "How many times did you use your vape in the last seven days?"
            style(
                ZIndex = -40
            )
        categorical [0..1]
        {
            once "once",
            twotoseven "between two and seven",
            eighttofourteen "Between eight and fourteen",
            morethanforteen "More than fourteeen times"
        };

        brandswhich "Which of the following cigar brand have you used in the last month"
            style(
                ZIndex = -40
            )
        categorical
        {
            cigarbrandslist use \\.cigarbrandslist -
        };

        whichcigars "Which of the following cigar brand have you used in the last month"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical
        {
            cigarbrandslist use \\.cigarbrandslist -
        };

        whichcigarettes ""
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical
        {
            cigarettebrandslist use \\.cigarettebrandslist -
        };

        smokecigars "Do you smoke cigars or cigarettes"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [0..1]
        {
            cigars "cigars",
            cigarettes "cigarettes"
        };

        DidyouPreviously "Did you previously smoke?"
            style(
                ZIndex = -40
            )
        categorical [0..1]
        {
            YesIsmoked "Yes I smoked",
            Nosmoked "No, I never smoked before vaping"
        };

    ) column expand;

    '----------------------------------------
    ' Grids and Visibility
    '----------------------------------------
    visTrig "Trigger Visibility/Invisility"
    categorical [..1]
    {
        trig "Trigger"
    };

    visCat "Grid Categorical (visibility)" loop
    {
        x1 ""
    } fields -
    (
        visCatSlice ""
            style(
                ZIndex = -40
            )
        categorical [..1]
        {
            catlist5 use \\.catlist5 -
        };

    ) expand grid;

    visLong "Grid Numeric (visibility)" loop
    {
        x1 ""
    } fields -
    (
        visLongSlice ""
            style(
                ZIndex = -20
            )
        long [ .. 999]
        codes(
        {
            noanswer "No answer" NA
        } );

    ) expand grid;

    visDrop "Grid Droplist (visibility)" loop
    {
        x1 ""
    } fields -
    (
        visDropSlice ""
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [..1]
        {
            catlist5 use \\.catlist5 -
        };

    ) expand grid;

    invisCat "Grid Categorical (Invisibility)" loop
    {
        x1 ""
    } fields -
    (
        invisCatSlice ""
            style(
                ZIndex = -40
            )
        categorical [..1]
        {
            catlist5 use \\.catlist5 -
        };

    ) expand grid;

    invisLong "Grid Numeric (invisibility)" loop
    {
        x1 ""
    } fields -
    (
        invisLongSlice ""
            style(
                ZIndex = -20
            )
        long [ .. 999]
        codes(
        {
            noanswer "No answer" NA
        } );

    ) expand grid;

    invisDrop "Grid Droplist (invisibility)" loop
    {
        x1 ""
    } fields -
    (
        invisDropSlice ""
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [..1]
        {
            catlist5 use \\.catlist5 -
        };

    ) expand grid;

    combinedvisibilitytest "Which controls"
    categorical
    {
        CategoricalControl "Categorical",
        LongControl "Long",
        Droplist "Dropdown",
        Combolist "Combobox"
    };

    combinedvisibilitygrid "This is a test of visibility within a grid" loop
    {
        line1 "line1",
        line2 "line2"
    } fields -
    (
        visCatSlice ""
            style(
                ZIndex = -40
            )
        categorical [..1]
        {
            catlist5 use \\.catlist5 -
        };

        visLongSlice ""
            style(
                ZIndex = -20
            )
        long [ .. 999];

        visDropSlice ""
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [..1]
        {
            catlist5 use \\.catlist5 -
        };

        visComboSlice ""
            style(
                ZIndex = -70,
                Control(
                    Type = "ComboList"
                )
            )
        categorical [..1]
        {
            catlist5 use \\.catlist5 -
        };

    ) expand;

    combinedinvisibilitygrid "This is a test of invisibility within a grid" loop
    {
        line1 "line1",
        line2 "line2"
    } fields -
    (
        invisCatSlice ""
            style(
                ZIndex = -40
            )
        categorical [..1]
        {
            catlist5 use \\.catlist5 -
        };

        invisLongSlice ""
            style(
                ZIndex = -20
            )
        long [ .. 999];

        invisDropSlice ""
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [..1]
        {
            catlist5 use \\.catlist5 -
        };

        invisComboSlice ""
            style(
                ZIndex = -70,
                Control(
                    Type = "ComboList"
                )
            )
        categorical [..1]
        {
            catlist5 use \\.catlist5 -
        };

    ) expand;

    '----------------------------------------
    ' Progressive Choice
    '----------------------------------------
    ShortStatement_ProgressiveChoice "When selling a home the following smells promote house value" loop
    {
        use shortstatementslist -
    } fields -
    (
        stronglyagree ""
        categorical [1..1]
        {
            stronglyagreedisagreelist use \\.stronglyagreedisagreelist -
        };

    ) expand;

    '----------------------------------------
    ' Split Question
    '----------------------------------------
    TwoChildren "Please provide the following details for your two children" loop
    {
        Child1 "Henry",
        Child2 "Mary"
    } fields -
    (
        Middle "Middle Name:"
            style(
                ZIndex = -20
            )
        text [..50]
        codes(
        {
            nomiddle "No middle name" DK
        } );

        Age "Age:"
            style(
                ZIndex = -20
            )
        long [0 .. 18];

        Gender "Gender:"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [1..1]
        {
            GenderList use \\.GenderList -
        };

    ) expand;

    '----------------------------------------
    ' Information Popup 
    '----------------------------------------
    varopinion "Which of the following statements best reflects your opinions on VAR in football?"
        style(
            ZIndex = -40
        )
    categorical [1..1]
    {
        option1 "It is a tragic corruption of the game",
        option2 "It is not adding quality to refereeing",
        option3 "It is entertaining, but nothing more",
        option4 "It has changed the game and will improve",
        option5 "It is getting better but not yet great",
        option6 "It does just what it should do"
    };

    '----------------------------------------
    ' Long Lists Question
    '----------------------------------------
    barcodelist "Provide a description of the product you consumed"
        style(
            ZIndex = -25,
            Control(
                Type = "SingleLineEdit"
            )
        )
    text [..200];

    brandlist "Provide a description of the product you consumed"
        style(
            ZIndex = -25,
            Control(
                Type = "SingleLineEdit"
            )
        )
    text [..200]
    codes(
    {
        nobrand "I don't know the brand" DK
    } );

    YearofDiagnosis "What was the year of diagnosis?"
        style(
            ZIndex = -40
        )
    categorical [1..1]
    {
        use shortyearlist -
    };

    relapse "Has the patient suffered a relapse"
        style(
            ZIndex = -40
        )
    categorical [..1]
    {
        yes "Yes",
        no "No"
    };

    dateoftreatmentgrid "When" loop [1] fields -
    (
        monthoftreatment "year"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [..1]
        {
            MonthList use \\.MonthList -
        };

        yearoftreatment "year"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [..1]
        {
            shortyearlist use \\.shortyearlist -
        };

    ) expand;

    yearoftreatment "year"
        style(
            ZIndex = -60,
            Control(
                Type = "DropList"
            )
        )
    categorical [..1]
    {
        use shortyearlist -
    };

    relapseblock "" block fields
    (
        relapse "Has the patient suffered a relapse"
            style(
                ZIndex = -40
            )
        categorical [..1]
        {
            yes "Yes",
            no "No"
        };

        yearoftreatment "year"
            style(
                ZIndex = -60,
                Control(
                    Type = "DropList"
                )
            )
        categorical [..1]
        {
            use shortyearlist -
        };

    );

    PageofRelapseGrid ""
    page(
        relapse,
        dateoftreatmentgrid
    );
    PageOfRelapse ""
    page(
        relapse,
        yearoftreatment
    );
    '----------------------------------------
    ' Page Definitions
    '----------------------------------------
    MenuPage "MenuPage"
    page(
        CustomList_SetLayout,
        CustomList_SetTheme,
        CustomList_SetBalance,
        CustomList_SetFocus,
        CustomList_SetDirection,
        CustomList_SetInstruction,
        CustomList_SetPaste1,
        CustomList_SetJump,
        ChooseType
    );
    ComplexQuetionPageJustPostCode ""
    page(
        PostCodeBlockSideBySide
    );
    ComplexQuestionPage ""
    page(
        PostCodeBlockSideBySide,
        WeightandMeasureblockSidebySide,
        OtherandSpecifyblock,
        WrappedInputOptionsBlock
    );
    ResetVisibilityPage ""
    page(
        ResetChoice,
        choicetext,
        choicenumber,
        choicedroplist,
        choicecombo,
        choicesingle,
        choicemulti,
        choiceslider
    );
    otherspecifydropdownpage ""
    page(
        otherspecifylistdropdown,
        otherspecifyotherdropdown
    );
    InvisibleAlternatives ""
    page(
        HowManyDaily,
        HowManyWeekend,
        WhichPapers
    );
    PaperTypesPage ""
    page(
        PaperTypes,
        WhichPapers
    );
    PaperTypesDroplistPage ""
    page(
        PaperTypes,
        WhichPapersDroplist
    );
    PaperTypesComboPage ""
    page(
        PaperTypes,
        WhichPapersCombo
    );
    ChildrenPage ""
    page(
        HowManyDependents,
        DependentType,
        HowManyMarriages,
        SameMarriage
    );
    PlannedSessions ""
    page(
        SessionsPlanned,
        MonthyeargridNumericLoop,
        MonthyeargridCategoricalLoop
    );
    FruitPage "FruitPage"
    page(
        FruitSelection,
        FruitFirst
    );
    FilterOnGenderPage ""
    page(
        filterOnGender,
        diagnosis1,
        diagnosis2
    );
    papersPage ""
    page(
        Daily,
        DailyBalanced,
        DailyBalancedMinWidth,
        DailyOneSize,
        DailyOneSizeMaxWidth,
        DailyBalanceOneSize,
        DailyAll
    );
    biomarkerPage ""
    page(
        biomarkerselection,
        biomarkerstatus1
    );
    WriteToLocalStorage "Writing to Local Storage"
    page(
        WriteTestInfo,
        WriteFirstName,
        WriteSurname
    );
    userAgentPage "User Agent Details"
    page(
        ReadWriteInfo,
        ReadOS,
        ReadBrowser,
        ReadDisplay,
        ReadBrowserVersion,
        ReadOSVersion,
        ReadFirstName,
        ReadSurname
    );
    sizesPage "normal, balanced, balanced and onesize"
    page(
        sizes,
        sizesbalanced,
        sizesbalancedonesize
    );
    gridPage "A page of grids"
    page(
        gridwithinfo,
        BigGrid,
        BigGrid2Categoricals
    );
    CustomPage ""
    page(
        Height,
        Income,
        Age,
        Textwithlabels
    );
    BasicPage ""
    page(
        Hello,
        Comments,
        FirstName,
        FirstLine,
        hospital_days
    );
    ChoicePage ""
    page(
        GenderReal,
        Drinks,
        sizes,
        DrinksRandom,
        test_location,
        OtherSpecifyExample
    );
    ComboPage ""
    page(
        DrugComboSingle,
        DrugComboSingleWithCode,
        DrugOrdinal
    );
    ComboFullPage ""
    page(
        DrugComboSingle,
        DrugComboSingleWithCode,
        DrugComboMultiple,
        DrugComboMultipleWithCode
    );
    TotalsPage ""
    page(
        ConstantSum,
        RowTotals,
        columntotals,
        Grandtotals
    );
    SmokePage "Questions about smoking and vaping"
    page(
        VisibilityStatement,
        Doyou_smoke,
        smokecigars,
        brandswhich,
        Howmanysmoked,
        PleaseReview,
        Weekendpercentage,
        Howmanyvaped,
        DidyouPreviously,
        DoYouMind
    );
    NetPromoterPage ""
    page(
        NetPromoterScore,
        NetPromoterComment
    );
    BroadvsTabloidPage ""
    page(
        DailyBalance_OneSize,
        Broadsheets,
        Tabloids
    );
    DroplistPage ""
    page(
        DrugOrdinal,
        DrugComboSingle,
        new_products,
        DropPapers,
        DropNewProducts
    );
    ComboListPage ""
    page(
        ComboNewProducts,
        ComboPapers '     Otherpaper
        
    );
    datePage "datePage"
    page(
        BirthDate,
        AppointmentDate,
        StartedTreatment
    );
    buttonsPage "buttonsPage"
    page(
        ChoiceAsButtons,
        ChoiceAsButtonsWithCode
    );
    sliderspage "Examples of sliders"
    page(
        HowManyMissed,
        HowManyMissedLabels,
        HowManyMissedMarksLabels,
        HowManyMissedThumbValue,
        HowManyMissedThumbMarks,
        modifications,
        PercentageTreatments,
        PercentageTreatmentsPrePost
    );
    FilterPage ""
    page(
        FirstChoice,
        SecondChoice
    );
    FilterPageDropList ""
    page(
        firstchoicedroplist,
        secondchoicedroplist
    );
    hospital_DaysPage "hospital_DaysPage"
    page(
        hospital_daysBySide,
        hospital_days,
        hospital_days2Codes,
        hospital_days2CodesSideBySide
    );
    CigarsOrCigarettesPage "CigarsOrCigarettesPage"
    page(
        smokecigars,
        whichcigars,
        whichcigarettes
    );
    SimpledynamicPage "SimpledynamicPage"
    page(
        DynamicLabelChoice,
        DynamicQuestion
    );
    GridVisibility ""
    page(
        visTrig,
        visCat,
        visLong,
        visDrop,
        invisCat,
        invisLong,
        invisDrop
    );
    CombinedVisibilityPage ""
    page(
        combinedvisibilitytest,
        combinedvisibilitygrid,
        combinedinvisibilitygrid
    );
    InvisibilityTwoTest ""
    page(
        MonthYearBlock,
        PostCodeBlockII,
        Howmanypatients
    );
    visiblegridpage ""
    page(
        WhichGridVisible,
        visiblecombogrid,
        visibledropdowngrid,
        visibleslidergrid,
        visibleinputsgrid,
        visiblechoicegrid
    );
    HowManyMissedPage "HowManyMissedPage"
    page(
        HowManyMissed,
        HowManyMissed_Car,
        HowManyMissed_Heart
    );
    HowManyMissedVPage "HowManyMissedPage"
    page(
        HowManyMissedV,
        HowManyMissedV_Car,
        HowManyMissedV_Heart
    );
    VisibleConComitantPage ""
    page(
        SimpleVisibility,
        concomitant
    );
    Laundryfeedback ""
    page(
        tenpointfeedback,
        sevenpointfeedback,
        fivepointfeedback
    );
    PipePage "PipePage"
    page(
        Pipesmoking,
        EverPiped
    );
    Passive10Page "Passive10Page"
    page(
        Passive10Scale,
        Passive10Feedback
    );
End Metadata
Routing(Web)
dim templateLocation
dim progressJSON
dim progressJSONarray[11]
dim visibilityRule
dim currentTemplate, layoutTemplate
dim askAgain
dim focusQuestion, focusControl, focusBalance
dim isPWA, isPaste, isJump
dim mediaAssetsURL
'templateLocation = "../"
templateLocation = ""
layoutTemplate = ""
askAgain = true
focusQuestion = "true"
focusControl = "true"
focusBalance = ""
isPWA = "false"
isPaste = "false"
isJump = "false"

mediaAssetsURL = "https://media.ipsosinteractive.com/sandbox/kevin.gray/healthcare/staging/"
if iom.Info.IsDebug then 
	'IOM.LayoutTemplate = "pageoutput-label.htm"
	IOM.LayoutTemplate = "local-formal.htm"
else
	IOM.LayoutTemplate = "formal.htm"
	'IOM.LayoutTemplate = "page (complex).htm"
	'IOM.LayoutTemplate = "page (middle).htm"
end if


IOM.QuestionTemplate = templateLocation + "question.htm"

IOM.Banners.AddNew("PageName", "")
IOM.Banners.AddNew("PageCustomProperties", "")
IOM.Banners.AddNew("CustomProgressBar", "")
IOM.Banners.AddNew("Contactushtml", "<a href='mailto:contactus@healthcare.ipsos.com' window='new'>Contact Us</a>")

'IOM.QuestionTemplate = templateLocation + "question-sidebyside.htm"

'IOM.Info.EstimatedPages = 10
'IOM.Info.EstimatedProgress = 0

'progressJSONarray[1] = "{'title':'Section Selection','pages':{'total':1,'current':1}}"
'progressJSONarray[2] = "{'title':'Original Questions','pages':{'total':6,'current':0}}"
'progressJSONarray[3] = "{'title':'Custom Property Questions','pages':{'total':7,'current':0}}"
'progressJSONarray[4] = "{'title':'droplists','pages':{'total':4,'current':0}}"
'progressJSONarray[5] = "{'title':'Complex Grids','pages':{'total':4,'current':0}}"
'progressJSONarray[6] = "{'title':'Choices','pages':{'total':8,'current':0}}"
'progressJSONarray[7] = "{'title':'Visibility Rules','pages':{'total':1,'current':0}}"
'progressJSONarray[8] = "{'title':'Basic Grids','pages':{'total':3,'current':0}}"
'progressJSONarray[9] = "{'title':'Grids with Totals','pages':{'total':4,'current':0}}"
'progressJSONarray[10] = "{'title':'Dropdowns','pages':{'total':2,'current':0}}"

'progressJSON = ComplexJSON_Create(IOM, 1, progressJSONarray)

dim linedefinitionsinfo,docDemQuarterFilt
docDemQuarterFilt = "Y2022Q3"

dim balanceVisibility
balanceVisibility = CreateVisibilityRule("CustomList_SetLayout.containsAny('horizontal')")

CustomList_SetBalance.QuestionTemplate = templateLocation + "question-sidebyside.htm"
CustomList_SetFocus.QuestionTemplate = templateLocation + "question-sidebyside.htm"
CustomList_SetLayout.QuestionTemplate = templateLocation + "question-sidebyside.htm"
CustomList_SetDirection.QuestionTemplate = templateLocation + "question-sidebyside.htm"
CustomList_SetTheme.QuestionTemplate = templateLocation + "question-sidebyside.htm"
CustomList_SetInstruction.QuestionTemplate = templateLocation + "question-sidebyside.htm"
CustomList_SetPaste1.QuestionTemplate = templateLocation + "question-sidebyside.htm"
CustomList_SetJump.QuestionTemplate = templateLocation + "question-sidebyside.htm"
choosetype.QuestionTemplate = templateLocation + "question-sidebyside.htm"

addCustomProperties(ChooseType, "ChooseType", MakeString("{'separator':true, 'onesize':{'state':true},'balance':{'state':true}}"), "replace")
addCustomProperties(CustomList_SetBalance, "CustomList_SetBalance", MakeString("{'separator':false,'visible':{'collapse':true,'rules':'", balanceVisibility, "'}}"), "replace")
addCustomProperties(CustomList_SetFocus, "CustomList_SetFocus", MakeString("{'separator':true, 'onesize':{'state':true},'balance':{'state':true}}"), "replace")
addCustomProperties(CustomList_SetLayout, "CustomList_SetLayout", MakeString("{'separator':false,'resettonull':false,'listsize':2,'showanswers':false,'placeholder':'select layout'}"), "replace")
addCustomProperties(CustomList_SetInstruction, "CustomList_SetInstruction", MakeString("{'separator':false,'resettonull':false,'listsize':2,'showanswers':false,'placeholder':'place instruction'}"), "replace")

CustomList_SetLayout.Response.initial = {horizontal}
CustomList_SetTheme.response.initial = {Formal}
CustomList_SetFocus.Response.initial = {Question, Control}
CustomList_SetDirection.Response.Initial = {LTR}
CustomList_SetInstruction.Response.Initial = {below}
CustomList_SetPaste1.Response.Initial = {allow}
CustomList_SetJump.Response.Initial = {yes}

PageJSON_Create(IOM, "{'sidebyside':'30','focus':{'question':true,'control':true},'pwa':'false','paste':false,'jumptoerror':false}")

CustomList_SetBalance.MustAnswer = false
CustomList_SetBalance.Response = 30

do until not askAgain

'IOM.LayoutTemplate = "pageoutput-label.htm"
'ChooseType.Ask()

'IOM.LayoutTemplate = "pageoutput-label.htm"
'TypesVsBroadsheetsSingle.Ask()

    
MenuPage.Ask()

if CustomList_SetPaste1.Response.containsAny("allow") then
	isPaste = "true"
else
	isPaste = "false"
end if

if CustomList_SetJump.Response.containsAny("yes") then
	isJump = "true"
else
	isJump = "false"
end if

if CustomList_SetFocus.Response.containsAny("Question") then
	focusQuestion = "true"
else
	focusQuestion = "false"
end if

if CustomList_SetFocus.Response.containsAny("Control") then
	focusControl = "true"
else
	focusControl = "false"
end if

If CustomList_SetLayout.response.containsAny({Horizontal}) then
	currentTemplate = templateLocation + "question-sidebyside"
	If CustomList_SetInstruction.response.containsAny({below}) then
		currentTemplate = currentTemplate + "-instructionbelow"
	end if
	focusBalance = MakeString("'sidebyside':",CustomList_SetBalance.response, ",")
	IOM.QuestionTemplate = currentTemplate + ".htm"
end if

If CustomList_SetLayout.response.containsAny({Vertical}) then
	currentTemplate = templateLocation + "question"
	If CustomList_SetInstruction.response.containsAny({above}) then
		currentTemplate = currentTemplate + "-instructionabove"
	end if
	focusBalance = MakeString("'sidebyside':30,")
	IOM.QuestionTemplate = currentTemplate + ".htm"
end if

If CustomList_SetTheme.response.ContainsAny({Formal}) then
	if iom.info.IsDebug then
		layoutTemplate = templateLocation + "local-formal"
	else
		layoutTemplate = templateLocation + "formal"
	end if
else
	if iom.Info.IsDebug then
		layoutTemplate = templatelocation + "local-informal"
	else
		layoutTemplate = templateLocation + "informal"
	end if
end if

If CustomList_SetDirection.response.containsAny({LTR}) then
	IOM.LayoutTemplate = layoutTemplate + ".htm"
else
	IOM.LayoutTemplate = layoutTemplate + "_RTL.htm"
end if

'PageJSON_Create(IOM, MakeString("{'pwa':'", isPWA, "','paste':'", isPaste, "','jumptoerror':'", isJump, "'}"))

PageJSON_Create(IOM, MakeString("{", focusBalance, "'focus':{'question':", focusQuestion, ",'control':", focusControl, "},'pwa':'", isPWA, "','paste':'", isPaste, "','jumptoerror':'", isJump, "'}"))

select case choosetype.Response
case {paste}
Hello.Banners.AddNew("Instruction", "This formatting can be applied <span class='bold'>in any text</span> including the banners.")
Hello.Banners.AddNew("Warning", "<span class='caps plusfour bold italic'>Don't be this extreme</span> but you can combine these classes to create composite affects")
Hello.Errors.AddNew("Error", "If there was an error message generated for the question it would look like this")
FirstName.Banners.AddNew("Instruction", "Enter just your first name.")
AddCustomProperties(hospital_days, "Qty", "{'type':'number'}", "replace")

BasicPage.Ask()

AddCustomProperties(Firstname, "Firstname", "{'paste':true}", "replace")
AddCustomProperties(FirstLine, "FirstLine", "{'paste':true}", "replace")
AddCustomProperties(hospital_days, "hospital_days", "{'paste':true}", "replace")

AddCustomProperties(Comments, "Comments", "{'paste':true}", "replace")
BasicPage.Ask()

AddCustomProperties(Firstname, "Firstname", "{'paste':false}", "replace")
AddCustomProperties(FirstLine, "FirstLine", "{'paste':false}", "replace")
AddCustomProperties(hospital_days, "hospital_days", "{'paste':false}", "replace")

AddCustomProperties(Comments, "Comments", "{'paste':false}", "replace")
BasicPage.Ask()

case {basic}
'iom.LayoutTemplate = ""
'iom.QuestionTemplate = ""
'eattime.Ask()

CreateInformationPopup(Hello, "Summary", "Complex information question with embedded HTML content")
'progressJSONarray[2] = "{'title':'Original Questions','pages':{'total':6,'current':1}}"
'progressJSON = ComplexJSON_Create(IOM, 2, progressJSONarray)
Hello.Banners.AddNew("Instruction", "This formatting can be applied <span class='bold'>in any text</span> including the banners.")
Hello.Banners.AddNew("Warning", "<span class='caps plusfour bold italic'>Don't be this extreme</span> but you can combine these classes to create composite affects")
Hello.Errors.AddNew("Error", "If there was an error message generated for the question it would look like this")
Hello.Show()

'progressJSONarray[2] = "{'title':'Original Questions','pages':{'total':6,'current':2}}"
progressJSON = ComplexJSON_Create(IOM, 2, progressJSONarray)
CreateInformationPopup(FirstName, "Basic Openend", "Simple single line input requiring a text response")
FirstName.Banners.AddNew("Instruction", "Enter just your first name.")
FirstName.ask()


'progressJSONarray[2] = "{'title':'Original Questions','pages':{'total':6,'current':3}}"
CreateInformationPopup(FirstLine, "Basic Openend", "Longer openend to confirm that width of control can be changed")
progressJSON = ComplexJSON_Create(IOM, 2, progressJSONarray)
FirstLine.Ask()

'progressJSONarray[2] = "{'title':'Original Questions','pages':{'total':6,'current':4}}"
progressJSON = ComplexJSON_Create(IOM, 2, progressJSONarray)
AddCustomProperties(hospital_days, "Qty", "{'type':'number'}", "replace")
'IOM.Layouttemplate = ""
hospital_days.Ask()

middlename.MustAnswer = false
middlename.ask()

'progressJSONarray[2] = "{'title':'Original Questions','pages':{'total':6,'current':5}}"
progressJSON = ComplexJSON_Create(IOM, 2, progressJSONarray)
comments.Ask()

AppointmentDate.ask()

'progressJSONarray[2] = "{'title':'Original Questions','pages':{'total':6,'current':6}}"
progressJSON = ComplexJSON_Create(IOM, 2, progressJSONarray)
BasicPage.Ask()

case {special}

'IOM.LayoutTemplate = "pageoutput-label.htm"

QuestionWithLotsOfCodes.Codes[..].Style.ElementAlign = elementalignments.eaRight
AddCustomProperties(QuestionWithLotsOfCodes, "QuestionWithLotsOfCodes", "{'balance':{'state':true}, 'onesize':{'state':true}}", "replace")
QuestionWithLotsOfCodes.Ask()


'gridofinputswithspecialcodes[..].LotsOfCodes.Codes[..].Style.ElementAlign = elementalignments.eaRight
'gridofinputswithspecialcodes[..].Cell.style.ElementAlign = elementalignments.eaRight

'IOM.LayoutTemplate = "pageoutput-label.htm"
AddCustomProperties(gridofinputswithspecialcodes, "LotsOfCodes", "{'balance':{'state':true}, 'onesize':{'state':true}}", "replace")
gridofinputswithspecialcodes.Ask()

'IOM.LayoutTemplate = "pageoutput-label.htm"
QuestionWithLotsofCodes.show()

'iom.LayoutTemplate = ""
Hospital_DaysbySide.Codes.Unknown.Style.ElementAlign = elementalignments.eaRight
hospital_days2CodesSideBySide.Codes.Unknown.Style.ElementAlign = elementalignments.eaRight
hospital_days2CodesSideBySide.Codes.refuse.Style.ElementAlign = elementalignments.eaRight

'IOM.LayoutTemplate = "pageoutput-label.htm"
AddCustomProperties(Hospital_DaysbySide, "Hospital_DaysbySide", "{'balance':{'state':true},'labels':{'post':'days'},'onesize':{'state':true}}", "replace")
AddCustomProperties(hospital_days2CodesSideBySide, "hospital_days2CodesSideBySide", "{'balance':{'state':true}, 'onesize':{'state':true},'labels':{'post':'days'}}", "replace")
Hospital_DaysPage.Ask()

case {custom}

'progressJSONarray[3] = "{'title':'Custom Property Questions','pages':{'total':7,'current':1}}"
'progressJSON = ComplexJSON_Create(IOM, 3, progressJSONarray)

AddCustomProperties(Textwithlabels, "TextWithLabels", "{'type':'text','labels':{'pre':'<i>pre-label</i>','post':'<i>postlabel</i>'}}", "replace")
CreateBanner(Textwithlabels, "Instruction")
Textwithlabels.Banners["Instruction"].Text = "this is just an example you can put any text you like in here"
Textwithlabels.ask()

'IOM.LayoutTemplate = "pageoutput-label.htm"
AddCustomProperties(Height, "Height", "{'type':'number','labels':{'post':'cm'}}", "replace")
CreateBanner(Height, "Instruction")
Height.Banners["Instruction"].Text = "While it might be tempting to want to answer this question using feet and inches, we have ll gone metricc now and so we need you to provide the measurement in centimetres"
Height.ask()


'progressJSONarray[3] = "{'title':'Custom Property Questions','pages':{'total':7,'current':2}}"
progressJSON = ComplexJSON_Create(IOM, 3, progressJSONarray)
AddCustomProperties(Income, "Income", "{'type':'number','step':'0.01','labels':{'pre':'£'}}", "replace")
Income.Style.Control.ReadOnly = false
Income.ask()

'IOM.LayoutTemplate = "pageoutput-label.htm"
Income.Style.Control.ReadOnly = true
Income.Ask()

'progressJSONarray[3] = "{'title':'Custom Property Questions','pages':{'total':7,'current':3}}"
'progressJSON = ComplexJSON_Create(IOM, 3, progressJSONarray)

AddCustomProperties(Age, "Age", "{'type':'number','labels':{'pre':'I was', 'post':'years old on my last birthday'}}", "replace")
Age.Ask()

'progressJSONarray[3] = "{'title':'Custom Property Questions','pages':{'total':7,'current':4}}"
'progressJSON = ComplexJSON_Create(IOM, 3, progressJSONarray)

'IOM.LayoutTemplate = "pageoutput-label.htm"
CustomPage.Ask()

CustomPage.Show()

case {choice}

'IOM.QuestionTemplate = templateLocation + "question-sidebyside.htm"

'AddCustomProperties(Daily, "Daily", "{'balance':{'state':true}, 'onesize':{'state':false}}", "replace")
'Daily.categories.filter={first,Sun,Mail}
'Daily.ask()
addCustomProperties(ReallyLongOptions, "ReallyLongOptions", "{'balance':{'state':true}}", "replace")
ReallyLongOptions.ask()


'IOM.LayoutTemplate = "pageoutput-label.htm"
addCustomProperties(TypesVsBroadsheetsSingle, "TypesVsBroadsheetsSingle", "{'sublistline': {'state':true,'length': 40}}", "replace")
TypesVsBroadsheetsSingle.Ask()

'IOM.LayoutTemplate = "pageoutput-label.htm"
TypesVsBroadsheets.Banners.AddNew("Instruction","Select one or more papers")
TypesVsBroadsheets.Ask()

addCustomProperties(TypesVsBroadsheets, "TypesVsBroadsheets", "{'balance':{'state':true}, 'onesize':{'state':false}}", "replace")
TypesVsBroadsheets.Ask()

addCustomProperties(TypesVsBroadsheets, "TypesVsBroadsheets", "{'balance':{'state':true}, 'onesize':{'state':true}}", "replace")

TypesVsBroadsheets.Ask()


GenderReal.Categories.female.label.style.elementAlign = elementalignments.eaNewLine
GenderReal.Banners.AddNew("Instruction","This is a test instruction")
GenderReal.Ask()


DrinksRandom.Ask()
Debug.Log("other specify: " + DrinksRandom.OtherDrinkDetail.Response)
DrinksRandom.Ask()
'DrinksRandom.Show()

'IOM.LayoutTemplate = "pageoutput-label.htm"

DrinksRandom.Style.Control.ReadOnly = true
DrinksRandom.Ask()
DrinksRandom.Style.Control.readonly = false
DrinksRandom.Categories.DrPepper.Style.Control.ReadOnly = true
DrinksRandom.response = DrinksRandom.Response - {DrPepper}
DrinksRandom.Ask()

DrinksRandom.Response = {diet,zerocherry,coffee,Max,OtherDrink}
DrinksRandom.Categories.OtherDrink.OtherQuestion.Response = "Bubble Tea"
DrinksRandom.categories.diet.Style.Control.ReadOnly = true
DrinksRandom.categories.coffee.Style.Control.ReadOnly = true
DrinksRandom.categories.max.Style.Control.ReadOnly = true
DrinksRandom.categories.fire.Style.Control.ReadOnly = true
DrinksRandom.Categories.OtherDrink.Style.Control.ReadOnly = true


'IOM.LayoutTemplate = "pageoutput-label.htm"
DrinksRandom.Ask()

addCustomProperties(DrinksRandom, "DrinksRandom", "{'balance':{'state':false}, 'onesize':{'state':false}}", "replace")
DrinksRandom.Ask()

addCustomProperties(DrinksRandom, "DrinksRandom", "{'balance':{'state':false}, 'onesize':{'state':true}}", "replace")
DrinksRandom.Ask()

addCustomProperties(DrinksRandom, "DrinksRandom", "{'balance':{'state':true}, 'onesize':{'state':false}}", "replace")
DrinksRandom.Ask()

addCustomProperties(DrinksRandom, "DrinksRandom", "{'balance':{'state':true}, 'onesize':{'state':false}}", "replace")
DrinksRandom.Ask()

addCustomProperties(DrinksRandom, "DrinksRandom", "{'balance':{'state':true}, 'onesize':{'state':true, 'max-width':'10em'}}", "replace")
DrinksRandom.Ask()

addCustomProperties(Daily, "Daily", "{'onesize':{'state':false}}", "replace")
Daily.ask()

AddCustomProperties(Daily, "Daily", "{'balance':{'state':true}, 'onesize':{'state':false}}", "replace")
Daily.ask()

AddCustomProperties(Daily, "Daily", "{'balance':{'state':true}, 'onesize':{'state':true}}", "replace")
Daily.ask()

DailyBalanced.Banners.AddNew("Instruction", "Select one or more")
AddCustomProperties(DailyBalanced, "DailyBalanced", "{'balance':{'state':true}, 'onesize':{'state':false}}", "replace")
DailyBalanced.ask()

AddCustomProperties(DailyBalancedMinWidth, "DailyBalancedMinWidth", "{'balance':{'state':true, 'min-width':'10em'}, 'onesize':{'state':false}}", "replace")
DailyBalancedMinWidth.ask()

AddCustomProperties(DailyOneSize, "DailyOneSize", "{'balance':{'state':false}, 'onesize':{'state':true}}", "replace")
DailyOneSize.ask()

AddCustomProperties(DailyOneSizeMaxWidth, "DailyOneSizeMaxWidth", "{'balance':{'state':false}, 'onesize':{'state':true, 'max-width':'8em'}}", "replace")
DailyOneSizeMaxWidth.ask()

AddCustomProperties(DailyBalanceOneSize, "DailyBalanceOneSize", "{'balance':{'state':true}, 'onesize':{'state':true}}", "replace")
DailyBalanceOneSize.ask()

AddCustomProperties(DailyAll, "DailyAll", "{'balance':{'state':true, 'min-width':'5em'}, 'onesize':{'state':true,'max-width':'8em'}}", "replace")
DailyAll.ask()

PapersPage.ask()

ChoicePage.Ask()

case {sliderh}

'AddCustomProperties(HowManyMissed, "HowManyMissed", "{'values':{'min':0,'max':10},'floodtovalue':true}", "replace") 
AddCustomProperties(HowManyMissed, "HowManyMissed", "{'values':{'min':0,'max':100},'show':{'marks':true,'value':true,'terminators':true},'ticklabels':10,'floodtovalue':true}", "replace")
HowManyMissed.ask()

AddCustomProperties(HowManyMissed_Car, "HowManyMissed_Car", "{'thumb':{'image':'../../images/" + lcase(format(CustomList_SetTheme,"b")) + "/range-thumb-transparent.svg'},'show':{'marks':true,'value':true,'terminators':true},'ticklabels':10,'floodtovalue':true}", "add")
AddCustomProperties(HowManyMissed_Heart, "HowManyMissed_Heart", "{'thumb':{'image':'../../images/" + lcase(format(CustomList_SetTheme,"b")) + "/range-thumb-heart.svg'},'show':{'marks':true,'value':true,'terminators':true},'ticklabels':10,'floodtovalue':true}", "add")
HowManyMissedPage.ask()

AddCustomProperties(HowManyMissedLabels, "HowManyMissedLabels", "{'values':{'min':0,'max':10},'ticklabels':1}", "replace") 
HowManyMissedLabels.ask()

AddCustomProperties(HowManyMissedMarksLabels, "HowManyMissedMarksLabels", "{'values':{'min':1,'max':10},'show':{'marks':true},'ticklabels':1}", "replace") 
HowManyMissedMarksLabels.ask()

AddCustomProperties(HowManyMissedThumbValue, "HowManyMissedThumbValue", "{'values':{'min':1,'max':10},'show':{'value':true}}", "replace") 
HowManyMissedThumbValue.Ask()

AddCustomProperties( HowManyMissedThumbMarks, "HowManyMissedThumbMarks", "{'values':{'min':1,'max':10},'show':{'value':true,'marks':true}}", "replace") 
HowManyMissedThumbMarks.Ask()

AddCustomProperties(modifications, "modifications", "{'values':{'min':-5,'max':5},'show':{'marks':true,'value':false,'terminators':true},'ticklabels':1,'floodtovalue':false}", "replace") 
modifications.Ask()
modifications.Response = 0
modifications.Ask()

AddCustomProperties(PercentageTreatments, "PercentageTreatments", "{'values':{'min':0,'max':100},'show':{'marks':false,'value':true,'terminators':true},'labels':{'pre':'0%','post':'100%'},'floodtovalue':false}", "replace") 
PercentageTreatments.Ask()

'IOM.LayoutTemplate = "pageoutput-label.htm"
AddCustomProperties(PercentageTreatmentsPrePost, "PercentageTreatmentsPrePost", "{'values':{'min':0,'max':100},'labels':{'pre':'None of them','post':'All of them'},'show':{'marks':true,'value':true,'terminators':true},'ticklabels':10,'labels':{'pre':'0%','post':'100%'},'floodtovalue':false}", "replace") 
PercentageTreatmentsPrePost.Ask()

slidersPage.Ask()

case {sliderv}

'IOM.LayoutTemplate = "pageoutput-label.htm"

AddCustomProperties(HowManyMissedV, "HowManyMissedV", "{'values':{'min':0,'max':100},'show':{'marks':true,'value':true,'terminators':true},'ticklabels':10,'floodtovalue':true}", "replace")
HowManyMissedV.ask()

AddCustomProperties(HowManyMissedV, "HowManyMissedV", "{'show':{'marks':true,'value':true,'terminators':true},'ticklabels':10,'floodtovalue':true}", "add")
AddCustomProperties(HowManyMissedV_Car, "HowManyMissedV_Car", "{'thumb':{'image':'../../images/" + lcase(format(CustomList_SetTheme,"b")) + "/range-thumb-transparent.svg'},'show':{'marks':true,'value':true,'terminators':true},'ticklabels':25,'floodtovalue':false}", "add")
AddCustomProperties(HowManyMissedV_Heart, "HowManyMissedV_Heart", "{'thumb':{'image':'../../images/" + lcase(format(CustomList_SetTheme,"b")) + "/range-thumb-heart.svg'},'show':{'marks':true,'value':true,'terminators':true},'ticklabels':10,'floodtovalue':true}", "add")
HowManyMissedVPage.ask()

AddCustomProperties(HowManyMissedLabelsV, "HowManyMissedLabelsV", "{'values':{'min':0,'max':10},'ticklabels':1}", "replace") 
HowManyMissedLabelsV.ask()

AddCustomProperties(HowManyMissedMarksLabelsV, "HowManyMissedMarksLabelsV", "{'values':{'min':1,'max':10},'show':{'marks':true},'ticklabels':1}", "replace") 
HowManyMissedMarksLabelsV.ask()

AddCustomProperties(HowManyMissedThumbValueV, "HowManyMissedThumbValueV", "{'values':{'min':1,'max':10},'show':{'value':true}}", "replace") 
HowManyMissedThumbValueV.Ask()

AddCustomProperties( HowManyMissedThumbMarksV, "HowManyMissedThumbMarksV", "{'values':{'min':1,'max':10},'show':{'value':true,'marks':true}}", "replace") 
HowManyMissedThumbMarksV.Ask()

AddCustomProperties(modificationsV, "modificationsV", "{'values':{'min':-5,'max':5},'show':{'marks':true,'value':false,'terminators':true},'ticklabels':1,'floodtovalue':false}", "replace") 
modificationsV.Ask()
modificationsV.Response = 0
modificationsV.Ask()

AddCustomProperties(PercentageTreatmentsV, "PercentageTreatmentsV", "{'values':{'min':0,'max':100},'show':{'marks':false,'value':true,'terminators':true},'labels':{'pre':'0%','post':'100%'},'floodtovalue':false}", "replace") 
PercentageTreatmentsV.Ask()

AddCustomProperties(PercentageTreatmentsPrePostV, "PercentageTreatmentsPrePostV", "{'values':{'min':0,'max':100},'labels':{'pre':'None of them','post':'All of them'},'show':{'marks':true,'value':true,'terminators':true},'ticklabels':10,'labels':{'pre':'0%','post':'100%'},'floodtovalue':false}", "replace") 
PercentageTreatmentsPrePostV.Ask()

case {gridSlider}
AddCustomProperties(vacinate, "percentright", "{'values':{'min':0,'max':100},'show':{'marks':false,'value':true,'terminators':true},'labels':{'pre':'0%','post':'100%'},'floodtovalue':false}", "replace") 
vacinate.ask()

case {recent}
dim dateToday
dateToday = datenow()

AddCustomProperties(lastpayment, "PercentageTreatmentsV", "{'values':[{'date':{'min':0,'max':100},'show':{'marks':false,'value':true,'terminators':true},'labels':{'pre':'0%','post':'100%'},'floodtovalue':false}", "replace") 

lastpayment.ask()
lastdrink.ask()

lastwithdrawal.mustanswer = false
lastwithdrawal.ask()

recentpage.ask()


case {scaleh}
dim passive10visibility
AddCustomProperties(Passive10Scale, "Passive10Scale", "{'values':{'min':1,'max':10,'position':'inside'},'unit':{'image':{'width':'32px','height':'32px'}},'labels':{'pre':'Very Dissatisfied','post':'Very Satisfied'}}", "replace") 
passive10visibility = CreateVisibilityRule("Passive10Scale < 9")
Passive10Scale.ask()
Passive10Feedback.MustAnswer = false
addCustomProperties(Passive10Feedback, "Passive10Feedback", MakeString("{'visible':{'collapse':true,'rules':'", passive10visibility, "'}}"), "replace")

Passive10Page.ask()
'AddCustomProperties(tenpointfeedback, "tenpointfeedback", "'{'values':{'min':1,'max':10},'unit':{'image':{'url':'../../images/formal/unit_default.svg','width':'32px','height':'32px'},'caption':'Score of ','offset':{'x':0,'y':0}},'background':{'image':{'url':'../../images/formal/background_default.svg','width':'','height':''},'caption':'scale background','offset':{'x':0,'y':0}},'values':{'position':'inside'},'show':{'terminators':true},'labels':{'pre':'Very Dissatisfied','post':'Very Satisfied'}}", "replace") 

AddCustomProperties(tenpointfeedback, "tenpointfeedback", "{'values':{'min':1,'max':10,'position':'inside'},'unit':{'image':{'width':'32px','height':'32px'}},'labels':{'pre':'Very Dissatisfied','post':'Very Satisfied'}}", "replace") 
'IOM.LayoutTemplate = "pageoutput-label.htm"
tenpointfeedback.ask()
AddCustomProperties(sevenpointfeedback, "sevenpointfeedback", "{'values':{'min':1,'max':7,'position':'inside'},'unit':{'image':{'width':'32px','height':'32px'}},'labels':{'pre':'Very Dissatisfied','post':'Very Satisfied'}}", "replace") 
sevenpointfeedback.ask()
AddCustomProperties(fivepointfeedback, "fivepointfeedback", "{'values':{'min':1,'max':5,'position':'inside'},'unit':{'image':{'width':'32px','height':'32px'}},'labels':{'pre':'Very Dissatisfied','post':'Very Satisfied'}}", "replace") 
AddCustomProperties(fivepointfeedback, "fivepointfeedback", "{'balance':{'state':true}, 'onesize':{'state':true}}", "add")

fivepointfeedback.Ask()

AddCustomProperties(fivepointfeedbackbytheside, "fivepointfeedbackbytheside", "'{'values':{'min':1,'max':5,'position':'inside'},'unit':{'image':{'width':'32px','height':'32px'}},'labels':{'pre':'Very Dissatisfied','post':'Very Satisfied'}}", "replace") 

fivepointfeedback.Ask()

case {GridScale}
AddCustomProperties(LaundryScales, "Passive5Scale", "{'values':{'min':1,'max':5,'position':'inside'},'unit':{'image':{'width':'32px','height':'32px'}},'labels':{'pre':'Very Dissatisfied','post':'Very Satisfied'}}", "replace")

LaundryScales.ask()

case {scalev}
case {Instructions}

AddCustomProperties(new_products, "new_products", "{'balance':{'state':false}, 'onesize':{'state':false}}", "replace")
new_products.Banners.AddNew("Instruction", "Choose one option")
new_products.ask()

GenderReal.Banners.AddNew("Instruction", "Choose one option")
AddCustomProperties(GenderReal, "GenderReal", "{'balance':{'state':true}, 'onesize':{'state':true, 'min-width':'3em'}}", "replace")
GenderReal.Ask()

DrinksRandom.Banners.AddNew("Instruction", "Choose at least one option or 'none of the above'")

AddCustomProperties(DrinksRandom, "DrinksRandom", "{'balance':{'state':true}, 'onesize':{'state':true, 'min-width':'8em'}}", "replace")
DrinksRandom.Ask()

Drinks.Banners.AddNew("Instruction", "Choose at least one option or 'none of the above'")
AddCustomProperties(Drinks, "Drinks", "{'balance':{'state':true}, 'onesize': {'state':false}}", "replace")
Drinks.Ask()

sizes.Banners.Addnew("Instruction", "Choose all the relevant options")
AddCustomProperties(sizes, "sizes", "{'balance':{'state':false},'onesize':{'state':false}}", "replace")
sizes.Ask()

test_location.Banners.AddNew("Instruction", "Choose one option")
AddCustomProperties(test_location, "test_location", "{'balance':{'state':false}, 'onesize':{'state':true, 'max-wdith':'15em'}}", "replace")
test_location.Ask()


OtherSpecifyExample.Banners.AddNew("Instruction", "Choose at least one option or 'none of the above'")
AddCustomProperties(OtherSpecifyExample, "OtherSpecifyExample", "{'balance':{'state':true}}", "replace")
OtherSpecifyExample.Categories.iPlayer.Style.Control.ReadOnly = true
OtherSpecifyExample.ask()



ChoicePage.Ask()

case {buttons}
debug.Log("step 1"+ format(choiceasbuttons.Response, "a"))

AddCustomProperties(ChoiceAsButtons, "ChoiceAsButtons", "{'balance':{'state':false},'onesize':{'state':true}}", "replace")
ChoiceAsButtons.Banners.AddNew("Instruction", "Choose one option")
ChoiceAsButtons.QuestionTemplate = templatelocation + "question (instruction above).htm"
ChoiceAsButtons.ask()
debug.Log("step 2"+ format(choiceasbuttons.Response, "a"))

ChoiceAsButtonsWithCode.Banners.AddNew("Instruction", "Choose one option")
ChoiceAsButtonsWithCode.QuestionTemplate = templatelocation + "question (instruction above).htm"
AddCustomProperties(ChoiceAsButtonsWithCode, "ChoiceAsButtonsWithCode", "{'balance':{'state':false},'onesize':{'state':false}}", "replace")

ChoiceAsButtonsWithCode.ask()
buttonsPage.ask()

case {newvisibility}

Dim currentRule

'New rules structure for visibility
HowManySmoked.MustAnswer = false
WeekendPercentage.MustAnswer = false


smokecigars.Style.ZIndex = -60
	currentRule = CreateVisibilityRule("Doyou_smoke.containsAny('Yes_Smoked')")
addCustomProperties(smokecigars, "smokecigars", MakeString("{'separator':true, 'onesize':{'state':true},'displayicon':false,'jumptofirstletter':false,'type':'dropdown','placeholder':'Select an answer','visible':{'collapse':true,'rules':'", currentRule, "'}}"), "replace")

	currentRule = CreateVisibilityRule("smokecigars.containsAny('cigars')")
addCustomProperties(brandswhich, "brandswhich", MakeString("{'separator':true, 'balanced':{'state':true},'onesize':{'state':true},'visible':{'collapse':true,'rules':'", currentRule, "'}}"), "replace")

	currentRule = CreateVisibilityRule("smokecigars.containsAny('cigarettes')")
AddCustomProperties(Howmanysmoked, "Howmanysmoked", MakeString("{'separator':false, 'type':'number', 'visible':{'collapse':true,'rules':'", currentRule, "'}}"), "replace")

	currentRule = CreateVisibilityRule("Doyou_smoke.containsAny('Yes_vaped')")
AddCustomProperties(Howmanyvaped, "Howmanyvaped", MakeString("{'type':'number', 'visible':{'collapse':true,'rules':'", currentRule, "'}}"), "replace")

	currentRule = CreateVisibilityRule("Howmanysmoked >= 30")
AddCustomProperties(Weekendpercentage, "Weekendpercentage",MakeString("{'values':{'min':0,'max':100},'show':{'marks':false,'value':true,'terminators':true},'ticklabels':10,'floodtovalue':true, 'visible':{'collapse':true,'rules':'", currentRule, "'}}"), "replace")

	currentRule = CreateVisibilityRule("Doyou_smoke.containsAny('Yes_Smoked') and smokecigars.containsAny('cigarettes') and Howmanysmoked <= 0")
AddCustomProperties(PleaseReview, "PleaseReview", MakeString("{'visible':{'collapse':true,'rules':'", currentRule, "'}}"), "replace")

	currentRule = CreateVisibilityRule("Doyou_smoke.containsAny('Yes_vaped')")
AddCustomProperties(Howmanyvaped, "Howmanyvaped", MakeString("{'visible':{'collapse':true,'rules':'", currentRule, "'}}"), "replace")

	currentRule = CreateVisibilityRule("Doyou_smoke.containsAny('Yes_smoked','yes_vaped')")
AddCustomProperties(DidyouPreviously, "DidyouPreviously", MakeString("{'visible':{'collapse':true,'rules':'", currentRule, "'}}"), "replace")

smokepage.Ask()
	
	currentRule =  CreateVisibilityRule("Pipesmoking.containsAny('nopipe')")
	addCustomProperties(EverPiped, "EverPiped", MakeString("{'visible':{'collapse':true,'rules':'", currentRule, "'}}"), "add")
	PipePage.ask()
	PipePage.Show()


	AddCustomProperties(concomitant, "concomitant", "{'balance':{'state':true},'onesize':{'state':true}}", "replace")

	currentRule =  CreateVisibilityRule("SimpleVisibility.containsAny('Show')")
	addCustomProperties(concomitant, "concomitant", MakeString("{'visible':{'collapse':true,'rules':'", currentRule, "'}}"), "add")

CreateInformationPopup(concomitant, "Extra Information", "This is an exmaple of information pop-up")
VisibleConComitantPage.Ask()

	currentRule =  CreateVisibilityRule("DailyBalance_OneSize.containsAny('Telegraph','Independent','Guardian','Times')")
addCustomProperties(Broadsheets, "Broadsheets", MakeString("{'visible':{'collapse':true,'rules':'", currentRule, "'}}"), "replace")

	currentRule =  CreateVisibilityRule("DailyBalance_OneSize.containsAny('Sun','Mail','Express','Mirror','Star')")
addCustomProperties(Tabloids, "Tabloids", MakeString("{'visible':{'collapse':true,'rules':'", currentRule, "'}}"), "replace")
addCustomProperties(DailyBalance_OneSize, "DailyBalance_OneSize", "{'balance':{'state':true, 'min-width':'5em'}, 'onesize':{'state':true,'max-width':'8em'}}", "replace")

Broadsheets.MustAnswer = false
Tabloids.MustAnswer = false
BroadvsTabloidPage.Ask()

	currentRule = CreateVisibilityRule("(biomarkerselection.containsAny('biomarker1'))")
addCustomProperties(biomarkerstatus1, "biomarkerstatus1", MakeString("{'visible':{'collapse':false,'rules':'", currentRule, "'}}"), "replace")
biomarkerPage.Ask()

	currentRule = CreateVisibilityRule("(biomarkerselection.containsAll('biomarker1') AND biomarkerselection.containsAny('biomarker2','biomarker3'))")
addCustomProperties(biomarkerstatus1, "biomarkerstatus1", MakeString("{'visible':{'collapse':false,'rules':'", currentRule, "'}}"), "replace")
biomarkerPage.Ask()

'NetPromoterScore.QuestionFilter = {Overall}
	currentRule = CreateVisibilityRule("Cleanliness_QNetPromoterResult.containsAny('rating10')")
addCustomProperties(NetPromoterComment, "NetPromoterComment", MakeString("{'visible':{'collapse':false,'rules':'", currentRule, "'}}"), "replace")
NetPromoterPage.Ask()





case {Combobox}
ComboNewProducts.Style.Control = controltypes.ctComboList
ComboPapers.Style.Control = controltypes.ctComboList

ComboNewProducts.style.ZIndex = -70
ComboPapers.Style.ZIndex = -70

'IOM.LayoutTemplate = "pageoutput-label.htm"
AddCustomProperties(ComboNewProducts, "ComboNewProducts", "{'onesize':{'state':false},'listsize':10,'showanswers':false,'mincharactersforlist':0,'notenoughcharacters':'You need to type at least one character of the required drug for options to be listed','filtertype':'starts','placeholder':'','otherquestion':'', 'noitemsinlist':'no items match this filter'}", "replace")
ComboNewProducts.Ask()

AddCustomProperties(ComboPapers, "ComboPapers", "{'displayicon':false,'listsize':15,'showanswers':false,'mincharactersforlist':2,'notenoughcharacters':'A list of tabloids &amp; newspapers will be displayed once you type at least 2 characters','filtertype':'contains','placeholder':'Select a tabloid &amp; broadsheet newspaper','noitemsinlist':'no tabloids &amp; broadsheets available'}", "replace")
ComboPapers.ask()

AddCustomProperties(ComboPapers, "ComboPapers", "{'displayicon':false,'onesize':{'state':true},'listsize':15,'showanswers':false,'mincharactersforlist':3,'notenoughcharacters':'Type at least 3 characters to see a list of options','filtertype':'starts','placeholder':'Select Newspaper','otherquestion':'otherpaper','noitemsinlist':'no options available'}", "replace")
AddCustomProperties(OtherPaper, "OtherPaper", "{'visible':{'collapse':true,'rules':[]}}", "replace")

smokecigars.Style.ZIndex = -70
whichcigars.Style.ZIndex = -70
whichcigarettes.Style.ZIndex = -70

smokecigars.Style.control = controltypes.ctComboList
whichcigars.Style.control = controltypes.ctComboList
whichcigarettes.Style.control = controltypes.ctComboList


AddCustomProperties(smokecigars, "smokecigars", "{'displayicon':false,'onesize':{'state':true},'mincharactersforlist':0,'filtertype':'starts','placeholder':'either cigar or cigarette','noitemsinlist':'not valid'}", "replace")
AddCustomProperties(whichcigars, "whichcigars", "{'displayicon':false,'onesize':{'state':true},'mincharactersforlist':0,'filtertype':'contains','placeholder':'Pick one cigar brand','noitemsinlist':'no brands containing these characters exists'}", "replace")
AddCustomProperties(whichcigarettes, "whichcigarettes", "{'displayicon':false,'onesize':{'state':true},'filtertype':'contains','placeholder':'Pick one','noitemsinlist':'nothing'}", "replace")

addCustomProperties(whichcigars, "whichcigars", MakeString("{'visible':{'collapse':true,'rules':'", CreateVisibilityRule("smokecigars.containsAny('Cigars')"), "'}}"), "add")
addCustomProperties(whichcigarettes, "whichcigarettes", MakeString("{'visible':{'collapse':true,'rules':'", CreateVisibilityRule("smokecigars.containsAny('Cigarettes')"), "'}}"), "add")

CigarsOrCigarettesPage.ask()

ComboListPage.Ask()

case {GridCombo}
'IOM.QuestionTemplate = ""
'IOM.LayoutTemplate = "page (nocode).htm"

'IOM.LayoutTemplate = "pageoutput-label.htm"

AddCustomProperties(GridDrugComboSingle, "DrugComboSingleInGrid", "{'exact':true, 'onesize':{'state':false},'filtertype':'contains','listsize':10,'mincharactersforlist':1,'notenoughcharacters':'Type the first letter of the drug to see a list of options','showanswers':false,'type':'combobox','placeholder':'type part of the drugname','noitemsinlist':'start typing a valid drug'}", "replace")
AddCustomProperties(GridDrugComboSingle, "SecondDrugComboSingleInGrid", "{'onesize':{'state':false},'filtertype':'starts','mincharactersforlist':2,'notenoughcharacters':'A drug list will appear when you have typed at least 2 characters of the drug name','listsize':5,'showanswers':false,'type':'combobox','placeholder':'type start of the drugname','noitemsinlist':'start typing a valid drug'}", "add")

GridDrugComboSingle.Mon.DrugComboSingleInGrid.Response = {_2_7007_7309}
GridDrugComboSingle.Tue.DrugComboSingleInGrid.Response = {_2_7007_7309}
GridDrugComboSingle.Wed.DrugComboSingleInGrid.Response = {_2_7007_7309}
GridDrugComboSingle.Thu.DrugComboSingleInGrid.Response = {_2_7007_7309}
GridDrugComboSingle.Fri.DrugComboSingleInGrid.Response = {_2_7007_7309}

GridDrugComboSingle.Mon.SecondDrugComboSingleInGrid.Response = {_2_0233_0023}
GridDrugComboSingle.Tue.SecondDrugComboSingleInGrid.Response = {_2_0233_0023}
GridDrugComboSingle.Wed.SecondDrugComboSingleInGrid.Response = {_2_0233_0023}
GridDrugComboSingle.Thu.SecondDrugComboSingleInGrid.Response = {_2_0233_0023}
GridDrugComboSingle.Fri.SecondDrugComboSingleInGrid.Response = {_2_0233_0023}

GridDrugComboSingle[..].DrugComboSingleInGrid.Label.Style.Align = alignments.alLeft
'GridDrugComboSingle[..].DrugComboSingleInGrid.Style.cell.width = "50em"

'GridDrugComboSingle.Mon.Categories[..].Style.cell.Align = alignments.alLeft

GridDrugComboSingle.Ask()

effective_age_wise[..].QuestionFilter = "slice3, slice4, slice5"
effective_age_wise.Style.Cell.RepeatHeader = (effective_age_wise.Categories.Count/3)+1

'effective_age_wise.Categories.Filter = "moderna..gameleyaResearchInstitute"

AddCustomProperties(effective_age_wise,"effective_age_wise","{'cellshading':{'rowheader':true,'altrows':true}}","replace")
AddCustomProperties(effective_age_wise, "slice3", "{'onesize':{'state':false},'filtertype':'starts','listsize':9,'showanswers':false,'placeholder':''}", "add")
AddCustomProperties(effective_age_wise, "slice4", "{'onesize':{'state':false},'filtertype':'starts','listsize':9,'showanswers':false,'placeholder':''}", "add")
AddCustomProperties(effective_age_wise, "slice5", "{'onesize':{'state':false},'filtertype':'starts','listsize':9,'showanswers':false,'placeholder':''}", "add")

effective_age_wise.Ask()

case {dropdown}

DrugOrdinal.Style.ZIndex = -60
DrugComboSingle.Style.ZIndex = -60
DropPapers.Style.ZIndex = -60
DropNewProducts.Style.ZIndex = -60
new_products.Style.ZIndex = -60
'DrugComboSingle.Categories.Filter = {_3_0002_0002, _3_0004_0004, _3_0006_0006}
DrugComboSingle.Style.Control.type = controltypes.ctDropList
new_products.Style.Control.Type = controltypes.ctDropList
'IOM.LayoutTemplate = "pageoutput-label.htm"

AddCustomProperties(new_products, "new_products", "{'listsize':5,'showanswers':false,'placeholder':'select an option'}", "replace")
DropListPage.ask()
new_products.Ask()

AddCustomProperties(DrugOrdinal, "DrugOrdinal", "{'listsize':10,'showanswers':false,'placeholder':'select an option'}", "replace")

DrugOrdinal.Ask()

'IOM.LayoutTemplate = "pageoutput-label.htm"
AddCustomProperties(DrugComboSingle, "DrugComboSingle", "{'listsize':10,'showanswers':false,'placeholder':'select an option'}", "replace")
DrugComboSingle.Ask()

DrugComboSingle.Response = null
AddCustomProperties(DrugComboSingle, "DrugComboSingle", "{'listsize':10,'showanswers':false,'placeholder':'select an option', 'filtertype':'starts','noitemsinlist':'nothing starts that way'}", "replace")
DrugComboSingle.Ask()

DrugComboSingle.Response = null
AddCustomProperties(DrugComboSingle, "DrugComboSingle", "{'listsize':10,'showanswers':false,'placeholder':'select an option', 'filtertype':'contains','noitemsinlist':'nothing contains this text'}", "replace")
DrugComboSingle.Ask()

AddCustomProperties(DropPapers, "DropPapers", "{'listsize':10,'showanswers':false,'placeholder':''}", "replace")
DropPapers.ask()

AddCustomProperties(DropNewProducts, "DropNewProducts", "{'listsize':10,'showanswers':false,'placeholder':''}", "replace")
DropNewProducts.Ask()
DropNewProducts.show()

DropListPage.ask()
DropListPage.Show()

smokecigars.Style.ZIndex = -60
whichcigars.Style.ZIndex = -60
whichcigarettes.Style.ZIndex = -60

AddCustomProperties(smokecigars, "smokecigars", "{'displayicon':false,'onesize':{'state':true},'filtertype':'none','placeholder':'either cigar or cigarette','noitemsinlist':'not valid'}", "replace")
AddCustomProperties(whichcigars, "whichcigars", "{'displayicon':false,'onesize':{'state':true},'filtertype':'none','placeholder':'Pick one cigar brand','noitemsinlist':'no brands containing these characters exists'}", "replace")
AddCustomProperties(whichcigarettes, "whichcigarettes", "{'displayicon':false,'onesize':{'state':true},'filtertype':'none','placeholder':'Pick one','noitemsinlist':'nothing'}", "replace")

addCustomProperties(whichcigars, "whichcigars", MakeString("{'visible':{'collapse':true,'rules':'", CreateVisibilityRule("smokecigars.containsAny('Cigars')"), "'}}"), "add")
addCustomProperties(whichcigarettes, "whichcigarettes", MakeString("{'visible':{'collapse':true,'rules':'", CreateVisibilityRule("smokecigars.containsAny('Cigarettes')"), "'}}"), "add")

CigarsOrCigarettesPage.ask()
case {GridDrop}

effective_age_wise[..].QuestionFilter = "under5, slice1, slice2"
effective_age_wise.Style.Cell.RepeatHeader = (effective_age_wise.Categories.Count/3)+1

effective_age_wise.Categories.Filter = "moderna..gameleyaResearchInstitute"

AddCustomProperties(effective_age_wise,"effective_age_wise","{'cellshading':{'rowheader':true,'altrows':true}}","replace")
AddCustomProperties(effective_age_wise, "under5", "{'listsize':9,'placeholder':'pick a drug'}", "add")
AddCustomProperties(effective_age_wise, "slice1", "{'displayicon':false,'onesize':{'state':false},'listsize':5,'showanswers':false,'placeholder':'pick a drug'}", "add")
AddCustomProperties(effective_age_wise, "slice2", "{'placeholder':'select one drug'}", "add")

'IOM.LayoutTemplate = "pageoutput-label.htm"
effective_age_wise.Ask() 

effective_age_wise[..].under5.Style.Width = "15em"
effective_age_wise[..].slice1.Style.Width = "15em"
effective_age_wise[..].slice2.Style.Width = "15em"

effective_age_wise.Ask() 


agewise_diff_virus_risk[..].age.Categories.Filter = "infantsUnderAge2..childrenAged3to17HealthConditions"
AddCustomProperties(agewise_diff_virus_risk, "slice", "{'listsize':5,'showanswers':false,'placeholder':''}", "replace")
AddCustomProperties(agewise_diff_virus_risk, "agewise_diff_virus_risk", "'cellshading':{'rowheader':true,'altrows':true}}", "add")
agewise_diff_virus_risk.ask()

AddCustomProperties(GridDrugDropSingle, "DrugDropSingleInGrid", "{'onesize':{'state':true, 'min-width':'40em'},'listsize':10,'showanswers':false}", "replace")
AddCustomProperties(GridDrugDropSingle, "SecondDrugDropSingleInGrid", "{'onesize':{'state':true, 'min-width':'40em'},'listsize':5}", "replace")

GridDrugDropSingle.Ask()

case {totals}


AddCustomProperties(grid6_subheading, "grid6_subheading", makestring("{'cellshading':{'rowheader':false, 'altrows':true}, 'totals':{'rows':{'visible':false, 'exceptions':[1]}, 'columns':{'visible':true, 'caption':'Totals', 'exceptions':[], 'labels':{'post':'%'}}}}"), "replace")
AddCustomProperties(grid6_subheading, "slice", makestring("{'type':'number', 'labels':{'post':'%'}}"), "add")
grid6_subheading.Banners.AddNew("Instruction", "this is an instruction for the grid")
grid6_subheading.MustAnswer = false
grid6_subheading.ask()

'IOM.QuestionTemplate = templateLocation + "question.htm"
RotateGrid(grid5_rowtotal_diffpostlabel_percol, orientations.orRow)
grid5_rowtotal_diffpostlabel_percol.MustAnswer = false
grid5_rowtotal_diffpostlabel_percol[..].tot = 20
grid5_rowtotal_diffpostlabel_percol[..].slice1.Response.initial = 200

grid5_rowtotal_diffpostlabel_percol[{stage_iiic}].slice4.Style.Hidden = false
grid5_rowtotal_diffpostlabel_percol[{stage_iv}].slice4.Style.hidden = false

AddCustomProperties(grid5_rowtotal_diffpostlabel_percol, "grid5_rowtotal_diffpostlabel_percol", "{'cellshading':{'rowheader':true, 'columnheader':true, 'altrows':true}, 'totals':{'columns':{'visible':false, 'exceptions':[1]}, 'rows':{'visible':true, 'caption':{'content':'Total','align':'right','width':'8em'}, 'labels':{'post':'" + IOM.Questions.lperc_info.Label + "'}}}}", "replace")
AddCustomProperties(grid5_rowtotal_diffpostlabel_percol, "tot", "{'type':'number', labels:{'post':'pts'}}", "add")
AddCustomProperties(grid5_rowtotal_diffpostlabel_percol, "slice1", "{'type':'number', labels:{'post':'" + IOM.Questions.lperc_info.label + "'}}", "add")
AddCustomProperties(grid5_rowtotal_diffpostlabel_percol, "slice2", "{'type':'number', labels:{'post':'" + IOM.Questions.lperc_info.label + "'}}", "add")
AddCustomProperties(grid5_rowtotal_diffpostlabel_percol, "slice3", "{'type':'number', labels:{'post':'" + IOM.Questions.lperc_info.label + "'}}", "add")
AddCustomProperties(grid5_rowtotal_diffpostlabel_percol, "slice4", "{'type':'number', labels:{'post':'" + IOM.Questions.lperc_info.label + "'}}", "add")
AddCustomProperties(grid5_rowtotal_diffpostlabel_percol, "slice5", "{'type':'number', labels:{'post':'" + IOM.Questions.lperc_info.label + "'}}", "add")

'IOM.LayoutTemplate = "pageoutput-label.htm"
grid5_rowtotal_diffpostlabel_percol.Ask()

'IOM.LayoutTemplate = "pageoutput.htm"
RotateGrid(constantsum, orientations.orRow)
constantsum.Banners.AddNew("Warning", "<b>Percentages</b> <span class='test'>allocated must total</span><br />to 100%")
constantsum[..].PercentageSeen.mustanswer = false

AddCustomProperties(constantsum, "constantsum", "{'caption':{'content':'<b>%</b> of Patents<br /> Seen each day','width':'7em','align':'center'},'totals':{'columns':{'visible':true,'align':'centre', 'width':'4em','caption':{'content':'Total','align':'centre'},'labels':{'post':'%'}}}}", "replace")
AddCustomProperties(constantsum, "PercentageSeen", "{'type':'decimal', labels:{'post':'%'}}", "add")
'constantsum[..].PercentageSeen.Style.Cell.Width = "6em"
'constantsum[..].PercentageSeen.Style.Align = alignments.alCenter
constantsum.ask()

constantsum.QuestionFilter = {Mon,Tue}
constantsum.ask()

AddCustomProperties(rowtotals, "rowtotals", "{'caption':'Team Members','cellshading':{'columnheader':true,'altrows':true},'totals':{'rows':{'visible':true,'exceptions':[],'caption':{'content':'Total Hours'}},'columns':{'visible':false}}}", "replace")
AddCustomProperties(rowtotals, "HoursMon", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(rowtotals, "HoursTue", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(rowtotals, "HoursWed", "{'type':'number','showspinner':false}", "add")
AddCustomProperties(rowtotals, "HoursThu", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(rowtotals, "HoursFri", "{'type':'number','showspinner':true}", "add")
'rowtotals[..].HoursMon.style.cell.Width = "10em"
rowtotals.Ask()

AddCustomProperties(columntotals, "columntotals", "{'cellshading':{'columnheader':true,'altcolumns':true},'totals':{'rows':{'visible':false,'exceptions':[]},'columns':{'visible':true,'width':'5em','caption':{'content':'Total<br/>Hours'}}}}", "replace")
AddCustomProperties(columntotals, "ProjectA", "{'type':'number'}", "add")
AddCustomProperties(columntotals, "ProjectB", "{'type':'number'}", "add")
AddCustomProperties(columntotals, "ProjectC", "{'type':'number'}", "add")
columntotals.Ask()


AddCustomProperties(grandtotals, "grandtotals", "{'cellshading':{'rowheader':true,'altrows':true,'columnheader':true,'altcolumns':true},'caption':'Fruit Consumed','totals':{'rows':{'visible':true,'caption':{'content':'Total'}},'columns':{'visible':true,'width':'5em','caption':{'content':'Total'}}}}", "replace")
AddCustomProperties(grandtotals, "Banana", "{'type':'number'}", "add")
AddCustomProperties(grandtotals, "Apple", "{'type':'number'}", "add")
AddCustomProperties(grandtotals, "Orange", "{'type':'number'}", "add")
AddCustomProperties(grandtotals, "Kiwi", "{'type':'number'}", "add")
AddCustomProperties(grandtotals, "Satsuma", "{'type':'number'}", "add")

grandtotals[..].Banana.MustAnswer = false
grandtotals[..].Apple.MustAnswer = false
grandtotals[..].Orange.MustAnswer = false
grandtotals[..].Kiwi.MustAnswer = false
grandtotals[..].Satsuma.MustAnswer = false
grandtotals.ask()
totalsPage.ask()

case {grids}

PainRelief[..].dosesgiven.Style.Control.ReadOnly = false
AddCustomProperties(PainRelief, "PainRelief", "{'caption':{'content':'Pain Relief'},'totals':{'rows':{'visible':true,'caption':{'content':'Consumption'},'exceptions':[]},'columns':{'visible':false,'exceptions':[1]}}}", "replace")
AddCustomProperties(PainRelief, "dosesgiven", "{'type':'number'}", "add")
AddCustomProperties(PainRelief, "Monday", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(PainRelief, "Tuesday", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(PainRelief, "Wednesday", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(PainRelief, "Thursday", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(PainRelief, "Friday", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(PainRelief, "Saturday", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(PainRelief, "Sunday", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(PainRelief, "PainRelief", "{'topheadings':[{'caption':'','colspan':1},{'caption':'Week','colspan':5},{'caption':'Weekend','colspan':2},{'caption':'Total','colspan':1}]}", "add")
PainRelief.ask()

'IOM.LayoutTemplate = "pageoutput-label.htm"
PainRelief[..].dosesgiven.Style.Control.ReadOnly = true
PainRelief.ask()

AddCustomProperties(PainRelief, "PainRelief", "{'cellshading':{'rowheader':false,'altrows':true,'columnheader':false,'altcolumns':false},'caption':{'content':'Pain Relief'},'totals':{'rows':{'visible':true,'caption':{'content':'Consumption'},'exceptions':[]},'columns':{'visible':false,'exceptions':[1]}}}", "replace")
AddCustomProperties(PainRelief, "dosesgiven", "{'type':'number'}", "add")
AddCustomProperties(PainRelief, "Monday", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(PainRelief, "Tuesday", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(PainRelief, "Wednesday", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(PainRelief, "Thursday", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(PainRelief, "Friday", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(PainRelief, "Saturday", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(PainRelief, "Sunday", "{'type':'number','showspinner':true}", "add")
PainRelief.ask()


PainRelief[..].dosesgiven.Style.Control.ReadOnly = false
AddCustomProperties(PainRelief, "PainRelief", "{'caption':'Pain Relief','totals':{'rows':{'visible':true,'caption':{'content':'Consumption'},'exceptions':[]},'columns':{'visible':false,'exceptions':[1]}}}", "replace")
AddCustomProperties(PainRelief, "dosesgiven", "{'type':'number'}", "add")
AddCustomProperties(PainRelief, "Monday", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(PainRelief, "Tuesday", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(PainRelief, "Wednesday", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(PainRelief, "Thursday", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(PainRelief, "Friday", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(PainRelief, "Saturday", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(PainRelief, "Sunday", "{'type':'number','showspinner':true}", "add")
AddCustomProperties(PainRelief, "PainRelief", "{'TopHeadings':[{'caption':'','colspan':1},{'caption':'Week','colspan':5},{'caption':'Weekend','colspan':2},{'caption':'Total','colspan':1}]}", "add")
PainRelief.ask()

AddCustomProperties(biggrid, "biggrid", "{'caption':'Fruit Consumed'}", "replace")
biggrid.style.Cell.RepeatHeader = 2
biggrid.ask()

BigGrid2Categoricals.style.Cell.RepeatHeader = 3
'IOM.LayoutTemplate = "pageoutput-label.htm"
BigGrid2Categoricals.Ask()

gridPage.ask()

case {onerowgrid}
date_grid.ask()
date_grid.Show()

case {ReadWrite}

WriteFirstName.response = "Kevin"
WriteSurname.response = "Gray"

AddCustomProperties(WriteFirstName, "WriteFirstName", "{'write':{'destination':'LocalStorage','name':'firstname'}}", "replace")
AddCustomProperties(WriteSurname, "WriteSurname", "{'write':{'destination':'LocalStorage','name':'surname'}}", "replace")

WriteToLocalStorage.ask()

AddCustomProperties(ReadFirstName, "ReadFirstName", "{'read':{'source':'LocalStorage','value':'firstname'}}", "replace")
AddCustomProperties(ReadSurname, "ReadSurname", "{'read':{'source':'LocalStorage','value':'surname'}}", "replace")

AddCustomProperties(ReadOS, "ReadOS", "{'read':{'source':'UserAgent','value':'OperatingSystem'}}", "replace")
AddCustomProperties(ReadBrowser, "ReadBrowser", "{'read':{'source':'UserAgent','value':'Browser'}}", "replace")
AddCustomProperties(ReadDisplay, "ReadDisplay", "{'read':{'source':'UserAgent','value':'Display'}}", "replace")
AddCustomProperties(ReadOSVersion, "ReadOSVersion", "{'read':{'source':'UserAgent','value':'OperatingSystemVersion'}}", "replace")
AddCustomProperties(ReadBrowserVersion, "ReadBrowserVersion", "{'read':{'source':'UserAgent','value':'BrowserVersion'}}", "replace")

userAgentPage.Ask()

ReadWriteResult.show()

case {ComplexGrids}

	RotateGrid(Visited_booth, orientations.orRow)
	Visited_booth[..].rating.MustAnswer = false
	Visited_booth[..].info_recall.MustAnswer = false
	'IOM.LayoutTemplate = "pageoutput-label.htm"
'	IOM.LayoutTemplate = ""
	visited_booth.ask()

	RotateGrid(constantsum, orientations.orRow)
	constantsum[..].PercentageSeen.mustanswer = false

	AddCustomProperties(constantsum, "constantsum", "{'caption':{'content':'% of Patents Seen each day','width':'10em'},'totals':{'rows':{'visible':true,'caption':'Total','labels':{'post':'%'}}}}", "replace")
	AddCustomProperties(constantsum, "PercentageSeen", "{'type':'number', labels:{'post':'%'}}", "add")
	constantsum[..].PercentageSeen.Style.Cell.Width = ""
	constantsum.ask()

	RotateGrid(AppointmentsvsArrivals, orientations.orRow)
	AddCustomProperties(AppointmentsvsArrivals, "Appointments", "{'labels':{'post':'<i>people</i>'}}", "replace")
	AddCustomProperties(AppointmentsvsArrivals, "Arrivals", "{'labels':{'post':'%'}}", "add")
	AppointmentsvsArrivals.Ask()

case {DoubleLoop}
'dim linedefinitionsinfo,docDemQuarterFilt
docDemQuarterFilt = {Y2022Q3}' "_2022_Q3"

linedefinitionsinfo = lineinfo.Label
'docDem[docDemQuarterFilt].QuestionFilter = {linedefinitions, pt_workload}
docDem[docDemQuarterFilt].pt_workload[..].current.MustAnswer = false
docDem[docDemQuarterFilt].Ask()


docDem[docDemQuarterFilt].QuestionFilter = "NSCLC_perline"
AddCustomProperties(docDem, "NSCLC_perline", makestring("{'cellshading':{'rowheader':true,'columnheader':true,'altrows':true},'totals':{'rows':{'visible':false,'exceptions':[]},'columns':{'visible':true,'caption':'Total'}}}"), "replace")
docDem[docDemQuarterFilt].NSCLC_perline.MustAnswer = false
docDem[docDemQuarterFilt].Ask()


docDem[docDemQuarterFilt].QuestionFilter = "METEx14regimen_rankchoice,METEx14_tki"
AddCustomProperties(docDem, "METEx14_tki", makestring("{'cellshading':{'rowheader':true,'columnheader':true,'altrows':true},'totals':{'rows':{'visible':false,'exceptions':[]},'columns':{'visible':true,'caption':'Total'}}}"), "replace")
docDem[docDemQuarterFilt].METEx14_tki.MustAnswer = false
docDem[docDemQuarterFilt].Ask()

GRID_Q680_BIG[..].GRID_Q680[..].Q680.Categories = {} + {_1,_2,_3}
GRID_Q680_BIG[..].GRID_Q680[{_9}].Q680.Categories = {} + {_4}
GRID_Q680_BIG.Ask()

drug_prop_presc.MustAnswer = false
drug_prop_presc.Ask()

agewise_diff_virus_risk[..].Age.Categories.Filter = "infants_under_age_2..children_aged_3_to_17_health_conditions"
AddCustomProperties(agewise_diff_virus_risk, "slice", "{'displayicon':false,'onesize':{'state':false},'jumptofirstletter':true,'listsize':6,'showanswers':false,'type':'dropdown','placeholder':'pick one'}", "replace")
agewise_diff_virus_risk.Ask()

case {dates}

AddCustomProperties(birthdate, "birthdate", "{'type':'date'}", "replace")
birthdate.Ask() 

AddCustomProperties(appointmentdate, "appointmentdate", "{'type':'date'}", "replace")
appointmentdate.Ask()

AddCustomProperties(startedtreatment, "startedtreatment", "{'type':'month'}", "replace")
startedtreatment.Ask()

datePage.Ask()

case {DynamicLabels}
dim currentFruitName, currentFruitLabel
dim labelRule[9], labelRuleItems, labelRuleStart, labelRuleEnd, labelsRule
dim optionRule[9], optionRuleItems, optionRuleStart, optionRuleEnd, optionsRule
dim counter


labelRule[0] = MakeString("{'name':'first','label':'", DynamicLabel1.label.text, "','block':true,'visible':{'collapse':true,'rules':'", CreateVisibilityRule("DynamicLabelChoice.containsAny('choice1')"),"'}}")
labelRule[1] = MakeString("{'name':'second','label':'", DynamicLabel2.label.text, "','block':true,'visible':{'collapse':true,'rules':'", CreateVisibilityRule("DynamicLabelChoice.containsAny('choice2')"),"'}}")
labelRule[2] = MakeString("{'name':'third','label':'", DynamicLabel3.label.text, "','block':true,'visible':{'collapse':true,'rules':'", CreateVisibilityRule("DynamicLabelChoice.containsAny('choice3')"),"'}}")
labelRuleItems = MakeString("'labels':{'alternatives':[", labelRule[0], ",", labelRule[1], ",", labelRule[2], "],'separator':''}")

AddCustomProperties(dynamicQuestion, "DynamicQuestion", MakeString("{'type':'number','step':'any',", labelRuleItems, "}"),"replace")
SimpledynamicPage.ask()


AddCustomProperties(MonthyeargridNumericLoop, "WhichMonth", "{'displayicon':false,'jumptofirstletter':false,'listsize':12,'showanswers':false,'type':'dropdown','placeholder':'Select Month'}", "replace")
AddCustomProperties(MonthyeargridNumericLoop, "WhichYear", "{'displayicon':false,'jumptofirstletter':false,'listsize':12,'showanswers':false,'type':'dropdown','placeholder':'Select Year'}", "add")

AddCustomProperties(MonthyeargridCategoricalLoop, "WhichMonth", "{'displayicon':false,'jumptofirstletter':false,'listsize':12,'showanswers':false,'type':'dropdown','placeholder':'Select Month'}", "replace")
AddCustomProperties(MonthyeargridCategoricalLoop, "WhichYear", "{'displayicon':false,'jumptofirstletter':false,'listsize':12,'showanswers':false,'type':'dropdown','placeholder':'Select Year'}", "add")

labelRule[0] = MakeString("{'name':'first','label':'", PlannedSessionsLabel1.label.text, "','block':true,'visible':{'collapse':true,'rules':'", CreateVisibilityRule("SessionsPlanned.containsAny('Past')"),"'}}")
labelRule[1] = MakeString("{'name':'second','label':'", PlannedSessionsLabel2.label.text, "','block':true,'visible':{'collapse':true,'rules':'", CreateVisibilityRule("SessionsPlanned.containsAny('Future')"),"'}}")
labelRuleItems = MakeString("'labels':{'alternatives':[", labelRule[0], ",", labelRule[1], "],'separator':''}")
debug.Log(labelruleitems)
AddCustomProperties(MonthyeargridNumericLoop, "MonthyeargridNumericLoop", MakeString("{", labelRuleItems, "}"),"add")
AddCustomProperties(MonthyeargridCategoricalLoop, "MonthyeargridCategoricalLoop", MakeString("{", labelRuleItems, "}"), "add")

IOM.QuestionTemplate = templateLocation + "question.htm"
PlannedSessions.ask()


labelRuleItems = ""
for counter = 0 to fruitselection.Categories.Count -1
	currentFruitName = FruitSelection.Categories[counter].Name
	currentFruitLabel = FruitSelection.Categories[counter].Label
	labelRule[counter] = MakeString("{'name':'fruit", currentFruitName, "','label':'", currentFruitLabel, "','block':false,'visible':{'collapse':true,'rules':'", CreateVisibilityRule(MakeString("FruitSelection.containsAny('", currentFruitName, "')")),"'}}")
	if labelRuleItems <> "" then labelRuleItems = MakeString(labelRuleItems, ",")
	labelRuleItems = MakeString(labelRuleItems, labelRule[counter])
Next
 
labelRuleStart = "'labels':{'alternatives':["
labelRuleEnd = "],'separator':', '}"

labelsRule = MakeString(labelRuleStart, labelRuleItems, labelRuleEnd)

visibilityRule = CreateVisibilityRule("FruitSelection.containsAny('Banana','Apple','Orange','Kiwi','Satsuma','Grapes','Pineapple','Grapefruit','Mango')")	

optionRuleStart = "'options':{'invisible':["
optionRuleEnd = "]}"

for counter = 0 to fruitselection.Categories.Count -1
	currentFruitName = FruitSelection.Categories[counter].Name
	currentFruitLabel = FruitSelection.Categories[counter].Label
	optionRule[counter] = MakeString("{'name':'", currentFruitName, "','rules':'", CreateVisibilityRule(MakeString("FruitSelection.containsNone('", currentFruitName, "')")),"'}")
	if optionRuleItems <> "" then optionRuleItems = MakeString(optionRuleItems, ",")
	optionRuleItems = MakeString(optionRuleItems, optionRule[counter])
Next
'{'name':'female_reprod','rules':'", currentRule,"'}

addCustomProperties(FruitFirst, "FruitFirst", MakeString("{'separator':true,", labelsRule ,",'onesize':{'state':true},'visible':{'collapse':true,'rules':'", visibilityRule, "'}", ",", optionRuleStart, optionRuleItems, optionRuleEnd, "}"), "replace")

 FruitPage.ask()
 
case {filters}
addCustomProperties(FirstChoice, "FirstChoice", MakeString("{'separator':true,'onesize':{'state':true},'balance':{'state':true}}"), "replace")
addCustomProperties(FirstChoice, "FirstChoice", MakeString("{'filter':{'source':'SecondChoice','exclusions':['otherpaper']}}"), "add")

addCustomProperties(SecondChoice, "SecondChoice", MakeString("{'filter':{'source':'FirstChoice','exclusions':['otherpaper']}}"), "replace")
addCustomProperties(SecondChoice, "SecondChoice", MakeString("{'separator':true,'onesize':{'state':true,'max-width':'10em'}}"), "add")
addCustomProperties(SecondChoice, "SecondChoice", MakeString("{'balance':{'state':true}}"), "add")

visibilityRule = CreateVisibilityRule("FirstChoice.Count('Equals',1)")	
'addCustomProperties(SecondChoice, "SecondChoice", MakeString("{'visible':{'collapse':true,'rules':'", visibilityRule, "'}}"), "replace")

IOM.LayoutTemplate = "pageoutput-label.htm"
filterPage.ask()

firstChoicedroplist.Style.ZIndex = -68
secondchoicedroplist.Style.ZIndex = -68

addCustomProperties(FirstChoiceDroplist, "FirstChoiceDroplist", MakeString("{'separator':true,'onesize':{'state':true},'balance':{'state':true}}"), "replace")
addCustomProperties(FirstChoiceDroplist, "FirstChoiceDroplist", MakeString("{'filter':{'source':'SecondChoiceDroplist','exclusions':['otherpaper']}}"), "add")

addCustomProperties(SecondChoiceDroplist, "SecondChoiceDroplist", MakeString("{'filter':{'source':'FirstChoiceDroplist','exclusions':['otherpaper']}}"), "replace")
addCustomProperties(SecondChoiceDroplist, "SecondChoiceDroplist", MakeString("{'separator':true}"), "add")

visibilityRule = CreateVisibilityRule("FirstChoiceDroplist.Count('Equals',1)")	
'addCustomProperties(SecondChoiceDroplist, "SecondChoiceDroplist", MakeString("{'visible':{'collapse':true,'rules':'", visibilityRule, "'}}"), "replace")

filterPageDroplist.ask()
firstChoicedroplist.Style.ZIndex = -60
secondchoicedroplist.Style.ZIndex = -60

addCustomProperties(FirstChoiceDroplist, "FirstChoiceDroplist", MakeString("{'separator':true,'onesize':{'state':true},'type':'dropdown','balance':{'state':true}}"), "replace")
addCustomProperties(SecondChoiceDroplist, "SecondChoiceDroplist", MakeString("{'filter':{'source':'FirstChoiceDroplist','exclusions':['otherpaper']}}"), "replace")
addCustomProperties(SecondChoiceDroplist, "SecondChoiceDroplist", MakeString("{'separator':true}"), "add")


firstchoicedroplist.Response = null
secondchoicedroplist.Response = null

filterPageDroplist.Ask()

case {InvisibilityQuestions}
dim childrenInvisibilityRule
'HowManyDependents, DependentType, HowManyMarriages, SameMarriage
	childrenInvisibilityRule = CreateVisibilityRule("HowManyDependents>0")
	AddCustomProperties(DependentType, "DependentType", MakeString("{'visible':{'collapse':true,'rules':'", childrenInvisibilityRule , "'}}"), "replace")
	AddCustomProperties(DependentType, "DependentType", "{'balance':{'state':true}, 'onesize':{'state':true}}", "add")

	childrenInvisibilityRule = CreateVisibilityRule("HowManyDependents<1")
	AddCustomProperties(HowManyMarriages, "HowManyMarriages", MakeString("{'invisible':{'collapse':true,'rules':'", childrenInvisibilityRule , "'}}"), "replace")

	childrenInvisibilityRule = CreateVisibilityRule("HowManyMarriages<2 or HowManyDependents<2")
	AddCustomProperties(SameMarriage, "SameMarriage", MakeString("{'invisible':{'collapse':true,'rules':'", childrenInvisibilityRule , "'}}"), "replace")
	AddCustomProperties(SameMarriage, "SameMarriage", "{'balance':{'state':true}, 'onesize':{'state':true}}", "add")

	childrenPage.ask()

	AddCustomProperties(Howmanypatients, "Howmanypatients", MakeString("{'invisible':{'collapse':true,'rules':'", CreateVisibilityRule("Monthyearblock_QAskMonth.containsAny('Jun') and Monthyearblock_QAskYear.containsAny('2022')") , "'}}"), "replace")
	Monthyearblock.AskMonth.Response.Initial = {Feb}
	Monthyearblock.Askyear.Response.Initial = {year2020}
	Howmanypatients.Response = 3

'IOM.LayoutTemplate = "pageoutput-label.htm"
	MonthYearBlock.Askyear.Style.ElementAlign = elementalignments.eaRight
	MonthYearBlock.Askmonth.Style.ElementAlign = elementalignments.eaRight
	InvisibilityTwoTest.Ask()
	
case {InvisibleAlternatives}
dim alternativesQuestionRule, alternativesLabelRule
dim alternativeRule[7]

	alternativesQuestionRule = CreateVisibilityRule("(HowManyDaily + HowManyWeekend)<1")
	alternativesLabelRule = CreateVisibilityRule("HowManyDaily<1 and HowManyWeekend<1")
	
	AddCustomProperties(WhichPapers, "WhichPapers", MakeString("{'invisible':{'collapse':true,'rules':'", alternativesLabelRule , "'}}"), "replace")
	AddCustomProperties(WhichPapers, "WhichPapers", "{'balance':{'state':true}, 'onesize':{'state':true}}", "add")

	alternativeRule[0] = "{'name':'select','label':'Select the ','block':false,'visible':{'collapse':true,'rules':'HowManyDaily>0 or HowManyWeekend>0'}}"
	alternativeRule[1] = "{'name':'daily','label':' daily','block':false,'invisible':{'collapse':true,'rules':'HowManyDaily<1'}}"
	alternativeRule[2] = "{'name':'or','label':' or','block':false,'visible':{'collapse':true,'rules':'HowManyDaily>0 and HowManyWeekend>0'}}"
	alternativeRule[3] = "{'name':'weekend','label':' weekend','block':false,'invisible':{'collapse':true,'rules':'HowManyWeekend<1'}}"
	alternativeRule[4] = "{'name':'newspaper','label':' newspaper','block':false,'visible':{'collapse':true,'rules':'HowManyDaily>0 or HowManyWeekend>0'}}"
	alternativeRule[5] = "{'name':'plaural','label':'s','block':false,'invisible':{'collapse':true,'rules':'HowManyDaily + HowManyWeekend<2'}}"
	alternativeRule[6] = "{'name':'read','label':' you read','block':false,'visible':{'collapse':true,'rules':'HowManyDaily>0 or HowManyWeekend>0'}}"
	
	
	alternativesLabelRule = MakeString("{'labels':{'alternatives':[", alternativeRule[0], ",", alternativeRule[1], ",", alternativeRule[2], ",", alternativeRule[3], ",", alternativeRule[4], ",", alternativeRule[5], ",", alternativeRule[6], "],'separator':''}}")
	AddCustomProperties(WhichPapers, "WhichPapers", alternativesLabelRule, "add")
  
	InvisibleAlternatives.Ask()
	
case {VisibilityOptions}
dim optionsStart, optionsEnd
dim optionsArray[17]
dim dailyRule, sundayRule, internationalRule
dim optionsRules, optionRulesCounter
	AddCustomProperties(WhichPapers, "WhichPapers", "{'balance':{'state':true}, 'onesize':{'state':true}}", "replace")
	optionsStart = "{'options':{'visible':["
	optionsEnd = "]}}"

	dailyRule = CreateVisibilityRule("PaperTypes.ContainsAny('Daily')")
	sundayRule = CreateVisibilityRule("PaperTypes.ContainsAny('Sunday')")
	internationalRule = CreateVisibilityRule("PaperTypes.ContainsAny('International')")
	
	optionsArray[0] = MakeString("{'name':'Sun','rules':'", dailyRule,"'}")
	optionsArray[1] = MakeString("{'name':'Mail','rules':'", dailyRule,"'}")
	optionsArray[2] = MakeString("{'name':'Express','rules':'", dailyRule,"'}")
	optionsArray[3] = MakeString("{'name':'Mirror','rules':'", dailyRule,"'}")
	optionsArray[4] = MakeString("{'name':'Telegraph','rules':'", dailyRule,"'}")
	optionsArray[5] = MakeString("{'name':'Independent','rules':'", dailyRule,"'}")
	optionsArray[6] = MakeString("{'name':'Guardian','rules':'", dailyRule,"'}")
	optionsArray[7] = MakeString("{'name':'Star','rules':'", dailyRule,"'}")
	optionsArray[8] = MakeString("{'name':'Times','rules':'", dailyRule,"'}")
	optionsArray[9] = MakeString("{'name':'I','rules':'", dailyRule,"'}")
	optionsArray[10] = MakeString( "{'name':'Metro','rules':'", dailyRule,"'}")
	optionsArray[11] = MakeString( "{'name':'Post','rules':'", internationalRule,"'}")
	optionsArray[12] = MakeString( "{'name':'LeMonde','rules':'", internationalRule,"'}")
	optionsArray[13] = MakeString( "{'name':'Journal','rules':'", internationalRule,"'}")
	optionsArray[14] = MakeString( "{'name':'STimes','rules':'", sundayRule,"'}")
	optionsArray[15] = MakeString( "{'name':'Observer','rules':'", sundayRule,"'}")
	optionsArray[16] = MakeString( "{'name':'STelegraph','rules':'", sundayRule,"'}")

	optionsRules = ""
	for optionRulesCounter = 0 to 16
		if optionsRules <> "" then optionsRules = MakeString(optionsRules, ",")
		optionsRules = MakeString(optionsRules, optionsArray[optionRulesCounter])
	Next
	AddCustomProperties(WhichPapers, "WhichPapers", MakeString(optionsStart, optionsRules, optionsEnd), "add")

	PaperTypesPage.Ask()

	AddCustomProperties(WhichPapersDroplist, "WhichPapersDroplist", "{'listsize':5,'showanswers':false,'placeholder':'select a paper'}", "replace")
	AddCustomProperties(WhichPapersDroplist, "WhichPapersDroplist", MakeString(optionsStart, optionsRules, optionsEnd), "add")
	PaperTypesDropListPage.Ask()

	AddCustomProperties(WhichPapersCombo, "WhichPapersCombo", "{'listsize':5,'showanswers':false,'placeholder':'select a paper'}", "replace")
	AddCustomProperties(WhichPapersCombo, "WhichPapersCombo", MakeString(optionsStart, optionsRules, optionsEnd), "add")
	PaperTypesComboPage.Ask()
	
case {OtherSpecifyLists}
dim otherspecifyvisibility, otherspecifyvisibility1, otherspecifyvisibility2, otherspecifyvisibility3
dim tumourCount, tumourCounter, tumourVisibility, tumourID
	otherspecifyvisibility = CreateVisibilityRule("otherspecifylistdropdown.containsAny('otheroption')")
	addCustomProperties(otherspecifyotherdropdown, "otherspecifyotherdropdown", MakeString("{'visible':{'collapse':false,'rules':'", otherspecifyvisibility, "'}}"), "replace")
	patientTumours[..].otherspecifyotherinput.MustAnswer = false
	patientTumoursCombo[..].otherspecifyotherinput.MustAnswer = false
	
'	otherspecifydropdownpage.Ask()

	tumourCount = patientTumours.Categories.Count
	addCustomProperties(patienttumours, tumourID + "_Qotherspecifyotherinput", MakeString("{}"), "replace")
	for tumourCounter = 0 to tumourCount - 1
		tumourID = patientTumours.Categories[tumourCounter].Name 
		tumourVisibility = CreateVisibilityRule(TumourID + "_Qotherspecifylistdropdown.containsAny('otheroption')")
		addCustomProperties(patienttumours, tumourID + "_Qotherspecifyotherinput", MakeString("{'visible':{'collapse':false,'rules':'", tumourVisibility, "'}}"), "add")
	Next
	AddCustomProperties(patienttumours, "otherspecifylistdropdown", "{'resettonull':false,'displayicon':false,'jumptofirstletter':true,'listsize':10,'showanswers':false,'type':'dropdown','placeholder':'select an option'}", "add")

	patientTumours.Ask()
	patientTumours.Show()

	tumourCount = patientTumoursCombo.Categories.Count
	addCustomProperties(patientTumoursCombo, tumourID + "_Qotherspecifyotherinput", MakeString("{}"), "replace")
	for tumourCounter = 0 to tumourCount - 1
		tumourID = patientTumoursCombo.Categories[tumourCounter].Name 
		tumourVisibility = CreateVisibilityRule(TumourID + "_Qotherspecifylistcombo.containsAny('otheroption')")
		addCustomProperties(patientTumoursCombo, tumourID + "_Qotherspecifyotherinput", MakeString("{'visible':{'collapse':false,'rules':'", tumourVisibility, "'}}"), "add")
	Next
	AddCustomProperties(patientTumoursCombo, "otherspecifylistcombo", "{'listsize':10,'mincharactersforlist':0,'filtertype':'contains','placeholder':'Select a drug','noitemsinlist':'no matching drugs'}", "add")

	patientTumoursCombo.Ask()
	patientTumoursCombo.Show()

	tumourCount = patientTumoursNumeric.Count
	patientTumoursNumeric[..].otherspecifyotherinput.MustAnswer = false
	'addCustomProperties(patientTumoursNumeric, tumourID + "_Qotherspecifyotherinput", MakeString("{}"), "replace")

	for tumourCounter = 1 to tumourCount
		tumourVisibility = CreateVisibilityRule("_" + cText(tumourCounter) + "_Qotherspecifylistdropdown.containsAny('otheroption')")
		addCustomProperties(patientTumoursNumeric, "_" + cText(tumourCounter) + "_Qotherspecifyotherinput", MakeString("{'visible':{'collapse':false,'rules':'", tumourVisibility, "'}}"), "add")
	Next
	AddCustomProperties(patientTumoursNumeric, "otherspecifylistdropdown", "{'displayicon':false,'jumptofirstletter':true,'listsize':10,'showanswers':false,'type':'dropdown','placeholder':'select an option'}", "add")

	patientTumoursNumeric.Ask()
	patientTumoursNumeric.Show()
	
case {HiddenCells}

	RotateGrid(HiddenQuestions, orientations.orRow)
	AddCustomProperties(HiddenQuestions, "asimplequestion", "{'type':'text'", "replace")
	AddCustomProperties(HiddenQuestions, "asimplequestionwithlabels", "{'type':'number','labels':{'pre':'£', 'post':'p'}}", "add")
	AddCustomProperties(HiddenQuestions, "asimpledropdown", "{'displayicon':false,'jumptofirstletter':true,'listsize':10,'showanswers':false,'type':'dropdown','placeholder':'Which Gender'}", "add")
	AddCustomProperties(HiddenQuestions, "asimplecombobox", "{'displayicon':false,'filtertype':'starts','listsize':10,'showanswers':false,'placeholder':'Which Gender','mincharactersforlist':1,'notenoughcharacters':'You need to type at least one character','noitemsinlist':'no items match this filter'}", "add")
	AddCustomProperties(HiddenQuestions, "asimpleslider", "{'values':{'min':1,'max':5},'show':{'marks':true,'value':false,'terminators':true},'ticklabels':1,'floodtovalue':true}", "add") 

	HiddenQuestions[..].asimplequestion.MustAnswer = false
	HiddenQuestions[..].asimplequestionwithlabels.MustAnswer = false
	HiddenQuestions[..].asimpledropdown.MustAnswer = false
	HiddenQuestions[..].asimplecombobox.MustAnswer = false
	HiddenQuestions[..].asimpleslider.MustAnswer = false
	
	hiddenQuestions.Ask()

	hiddenQuestions.firstrow.asimplequestion.style.hidden = true
	hiddenQuestions.firstrow.asimpledropdown.style.hidden = true
	hiddenQuestions.secondrow.asimplequestion.Style.Hidden = true
	hiddenQuestions.secondrow.asimplecombobox.Style.Hidden = true
	hiddenQuestions.thirdrow.asimpleslider.Style.Hidden = true
	hiddenQuestions.thirdrow.asimplequestionwithlabels.Style.Hidden = true
	
'	IOM.LayoutTemplate = "pageoutput-label.htm"
	
	hiddenQuestions.Ask()
	
case {ResetToLoad}
dim resetvisibilityRule
resetvisibilityRule = CreateVisibilityRule("ResetChoice.containsAny('choicetext')")	
addCustomProperties(choicetext, "choicetext", MakeString("{'visible':{'collapse':true,'rules':'", resetvisibilityRule, "'}}"), "replace")

resetvisibilityRule = CreateVisibilityRule("ResetChoice.containsAny('choicenumber')")	
choicenumber.Response.Value = 108
addCustomProperties(choicenumber, "choicenumber", MakeString("{'resettonull':false,'visible':{'collapse':true,'rules':'", resetvisibilityRule, "'}}"), "replace")

resetvisibilityRule = CreateVisibilityRule("ResetChoice.containsAny('choicedroplist')")	
addCustomProperties(choicedroplist, "choicedroplist", MakeString("{'visible':{'collapse':true,'rules':'", resetvisibilityRule, "'}}"), "replace")

resetvisibilityRule = CreateVisibilityRule("ResetChoice.containsAny('choicecombo')")	
addCustomProperties(choicecombo, "choicecombo", MakeString("{'visible':{'collapse':true,'rules':'", resetvisibilityRule, "'}}"), "replace")

resetvisibilityRule = CreateVisibilityRule("ResetChoice.containsAny('choicesingle')")	

addCustomProperties(choicesingle, "choicesingle", MakeString("{'visible':{'collapse':true,'rules':'", resetvisibilityRule, "'}}"), "replace")

resetvisibilityRule = CreateVisibilityRule("ResetChoice.containsAny('choicemulti')")	
addCustomProperties(choicemulti, "choicemulti", MakeString("{'visible':{'collapse':true,'rules':'", resetvisibilityRule, "'}}"), "replace")

resetvisibilityRule = CreateVisibilityRule("ResetChoice.containsAny('choiceslider')")	
addCustomProperties(choiceslider, "choiceslider", MakeString("{'visible':{'collapse':true,'rules':'", resetvisibilityRule, "'}}"), "replace")

	choicetext.response = "hello"
	choicenumber.Response = 5
	choicedroplist.Response = {second}
	choicecombo.Response = {fifth}
	choicesingle.Response = {eighth}
	choicemulti.Response = {eleventh}
	choiceslider.Response = 8

	choicetext.mustanswer = false
	choicenumber.mustanswer = false
	choicedroplist.mustanswer = false
	choicecombo.mustanswer = false
	choicesingle.mustanswer = false
	choicemulti.mustanswer = false
	choiceslider.mustanswer = false
	
	
	AddCustomProperties(choicedroplist, "choicedroplist", "{'displayicon':false,'jumptofirstletter':true,'listsize':10,'showanswers':false,'type':'dropdown','placeholder':'Pick a position'}", "add")
	AddCustomProperties(choicecombo, "choicecombo", "{'displayicon':false,'filtertype':'contains','listsize':10,'showanswers':false,'placeholder':'Which position','mincharactersforlist':1,'notenoughcharacters':'You need to type at least one character','noitemsinlist':'no items match this filter'}", "add")

	AddCustomProperties(choiceslider, "choiceslider", "{'values':{'min':1,'max':10},'ticklabels':1}", "add") 

	ResetVisibilityPage.Ask()

	choicetext.Response.Coded = null
	choicetext.response = "hello"
	
	choicenumber.Response.Coded = null
	choicenumber.Response = 5
	
	choicedroplist.Response.Coded = null
	choicedroplist.Response = {second}
	
	choicecombo.Response.Coded = null
	choicecombo.Response = {fifth}
	
	choicesingle.Response = {eighth}
	choicemulti.Response = {eleventh}
	
	choiceslider.Response.Coded = null
	choiceslider.Response = 8

	addCustomProperties(choicetext, "choicetext", "{'resettonull':false}", "add")
	addCustomProperties(choicenumber, "choicenumber", "{'resettonull':false}", "add")
	addCustomProperties(choicedroplist, "choicedroplist", "{'resettonull':false}", "add")
	addCustomProperties(choicecombo, "choicecombo", "{'resettonull':false}", "add")
	addCustomProperties(choicesingle, "choicesingle", "{'resettonull':false}", "add")
	addCustomProperties(choicemulti, "choicemulti", "{'resettonull':false}", "add")
	addCustomProperties(choiceslider, "choiceslider", "{'resettonull':false}", "add")

	IOM.LayoutTemplate = "pageoutput-label.htm"	
	ResetVisibilityPage.Ask()
	
	case {sidebyside}

'	MonthYearBlock.Ask()
'	InvisibilityTwoTest.Ask()
	
'	IOM.LayoutTemplate = "pageoutput-label.htm"	


	WrappedInputOptionsBlock.Drug.Categories.Filter = {moderna, cansinoBiologics}
	addCustomProperties(WrappedInputOptionsBlock.Drug, "Drug", "{'balance':{'state':false},'onesize':{'state':true}}", "replace")
	WrappedInputOptionsBlock.Drug.Style.ElementAlign = elementalignments.eaRight
	WrappedInputOptionsBlock.HowMany.Style.ElementAlign = elementalignments.eaRight
'	WrappedInputOptionsBlock.ask()
	ComplexQuestionPage.QuestionFilter = "WrappedInputOptionsBlock"
	ComplexQuestionPage.Ask()

	WrappedInputOptionsBlock.Drug.Categories.Filter = {moderna, cansinoBiologics}
	addCustomProperties(WrappedInputOptionsBlock.Drug, "Drug", "{'balance':{'state':true}}", "replace")
	WrappedInputOptionsBlock.Drug.Style.ElementAlign = elementalignments.eaRight
	WrappedInputOptionsBlock.HowMany.Style.ElementAlign = elementalignments.eaRight
'	WrappedInputOptionsBlock.ask()
	ComplexQuestionPage.QuestionFilter = "WrappedInputOptionsBlock"
	ComplexQuestionPage.Ask()
	
	OtherandSpecifyblock.theotheroption.MustAnswer = false
	AddCustomProperties(OtherandSpecifyblock.pickanoption, "pickanoption", "{'displayicon':false,'jumptofirstletter':true,'listsize':10,'showanswers':false,'type':'dropdown','placeholder':'select one'}", "replace")
	AddCustomProperties(OtherandSpecifyblock.theotheroption, "theotheroption", MakeString("{'visible':{'collapse':true,'rules':'", CreateVisibilityRule("OtherandSpecifyblock_Qpickanoption.containsAny('otheroption')"), "'}}"), "replace")

	OtherandSpecifyblock.pickanoption.Style.ElementAlign = elementalignments.eaRight	
	OtherandSpecifyblock.theotheroption.Style.ElementAlign = elementalignments.eaRight	
 '   OtherandSpecifyblock.Ask()
	ComplexQuestionPage.QuestionFilter = "OtherandSpecifyblock"
 	ComplexQuestionPage.Ask()
	
	PostCodeBlockSideBySide.Style.ElementAlign = elementalignments.eaNewLine
	PostCodeBlockSideBySide.PostCodeLeft.Style.ElementAlign = elementalignments.eaRight
	PostCodeBlockSideBySide.PostCodeRight.Style.ElementAlign = elementalignments.eaRight
	ComplexQuestionPage.QuestionFilter = "PostCodeBlockSideBySide"
	ComplexQuestionPage.Ask()
	
	addCustomProperties(WeightandMeasureblockSidebySide, "WeightandMeasureblockSidebySide_Qweight", "{'separator':false}","add")	
	AddCustomProperties(WeightandMeasureblockSidebySide, "WeightandMeasureblockSidebySide_Qmeasure", "{'displayicon':false,'jumptofirstletter':true,'listsize':10,'showanswers':false,'type':'dropdown','placeholder':'select an option'}", "add")

	WeightandMeasureblockSidebySide.Style.ElementAlign = elementalignments.eaNewLine
	WeightandMeasureblockSidebySide.weight.Style.ElementAlign = elementalignments.eaRight
	WeightandMeasureblockSidebySide.measure.Style.ElementAlign = elementalignments.eaRight
	ComplexQuestionPage.QuestionFilter = "WeightandMeasureblockSidebySide"
	ComplexQuestionPage.Ask()
	
	ComplexQuestionPage.QuestionFilter = null
	ComplexQuestionPage.ask()
	
	
	case {GridsofSolo}
'IOM.LayoutTemplate = "pageoutput-label.htm"
	InputandonecodeGrid[..].NumberOfSports.style.Align = alignments.alLeft
	InputandonecodeGrid[..].NumberOfSports.Label.Style.Align = alignments.alLeft
	InputandonecodeGrid.ask()
	InputandtwocodesGrid[..].NumberOfSports.style.Align = alignments.alLeft
	InputandtwocodesGrid[..].NumberOfSports.Label.Style.Align = alignments.alLeft
	InputandtwocodesGrid.Ask()
	
	case {CategoricalGrids}
'IOM.LayoutTemplate = "pageoutput-label.htm"

	RotateGrid(DailyNewspapersByDay, orientations.orRow)
	DailyNewspapersByDay.Ask()

	DailyNewspapersByDay.Wed.whichpaper.Categories.Mail.Style.Hidden = true
	DailyNewspapersByDay.Ask()
	
'	IOM.LayoutTemplate = "pageoutput-label.htm"
	RotateGrid(DailyNewspapersByDaySublists, orientations.orRow)
	DailyNewspapersByDaySublists.ask()
	
	RotateGrid(AnyFruitByDay, orientations.orRow)
	AddCustomProperties(AnyFruitByDay,"AnyFruitByDay","{'cellshading':{'rowheader':true,'altrows':true}}","replace")
	AnyFruitByDay.Ask()
	
	AnyFruitByDay["Wed"].whichfruitmulti.Categories["Apple"].Style.hidden = true
	AnyFruitByDay["Thu"].whichfruitmulti.Categories["Banana"].Style.hidden = true
	AnyFruitByDay["Thu"].whichfruitmulti.Categories["Orange"].Style.hidden = true
	AnyFruitByDay["Thu"].whichfruitmulti.Categories["Kiwi"].Style.hidden = true
	
	AnyFruitByDay["Thu"].whichfruitmulti.Categories["Apple"].Style.hidden = true
	AnyFruitByDay["Tue"].whichfruitmulti.Categories["Mango"].Style.hidden = true

	
'IOM.LayoutTemplate = "pageoutput-label.htm"
	AnyFruitByDay.Ask()
	
'IOM.LayoutTemplate = "pageoutput-label.htm"
	RotateGrid(AnyFruitByDaywithOther, orientations.orRow)
	AnyFruitByDaywithOther.Ask()
'	IOM.LayoutTemplate = "page.htm"
	
	case {onecolumn}
'IOM.LayoutTemplate = "pageoutput-label.htm"
	onecolumnsmoke.ask()
	onecolumnsmoke[1].Ask()
	onecolumnsmokecol.ask()
	onecolumnsmokecol[1].Ask()
	
	case {GridVisibility}
	dim currentRule1
	currentRule1 = CreateVisibilityRule("visTrig.containsany('trig')")
 
addCustomProperties(visTrig, "visTrig", "{'separator':false}", "replace")
 
addCustomProperties(visCat, "visCat", "{'separator':false}", "replace")
addCustomProperties(visCat, "visCat", MakeString("{'visible':{'collapse':false,'rules':'", currentRule1, "'}}"), "add")
 
addCustomProperties(visLong, "visLong", "{'separator':false}", "replace")
addCustomProperties(visLong, "visLong", MakeString("{'visible':{'collapse':false,'rules':'", currentRule1, "'},'type':'number','labels':{'post':'%'}}"), "add")
 
addCustomProperties(visDrop, "visDrop", "{'separator':false}", "replace")
addCustomProperties(visDrop, "visDrop", MakeString("{'visible':{'collapse':false,'rules':'", currentRule1, "'},'listsize':2,'placeholder':'Select option'}"), "add")
 
 
addCustomProperties(invisCat, "invisCat", "{'separator':false}", "replace")
addCustomProperties(invisCat, "invisCat", MakeString("{'invisible':{'collapse':false,'rules':'", currentRule1, "'}}"), "add")
 
addCustomProperties(invisLong, "invisLong", "{'separator':false}", "replace")
addCustomProperties(invisLong, "invisLong", MakeString("{'invisible':{'collapse':false,'rules':'", currentRule1, "'},'type':'number','labels':{'post':'%'}}"), "add")
 
addCustomProperties(invisDrop, "invisDrop", "{'separator':false}", "replace")
addCustomProperties(invisDrop, "invisDrop", MakeString("{'invisible':{'collapse':false,'rules':'", currentRule1, "'},'listsize':2,'placeholder':'Select option'}"), "add")

'IOM.LayoutTemplate = "pageoutput-label.htm"
'IOM.QuestionTemplate = "question.htm"
invislong.x1.invisLongSlice.MustAnswer = false
vislong.x1.visLongSlice.MustAnswer = false

GridVisibility.Ask()

invisLong.x1.invisLongSlice.Response.Coded = null
visLong.x1.visLongSlice.Response.Coded = null 

invisCat.x1.invisCatSlice.Response = {SEA}
invisLong.x1.invisLongSlice.Response = 10
invisdrop.x1.invisDropSlice.Response = {SEA}

visCat.x1.visCatSlice.Response = {Gen}
visLong.x1.visLongSlice.Response = 20
visdrop.x1.visDropSlice.Response = {Gen}

currentRule1 = CreateVisibilityRule("visTrig.containsany('trig')")
 
addCustomProperties(visTrig, "visTrig", "{'separator':false}", "replace")
 
addCustomProperties(visCat, "visCatSlice", "{'separator':false,'resettonull':false}", "replace")
addCustomProperties(visCat, "visCat", MakeString("{'visible':{'collapse':false,'rules':'", currentRule1, "'}}"), "add")
 
addCustomProperties(visLong, "visLongSlice", "{'separator':false,'resettonull':false}", "replace")
addCustomProperties(visLong, "visLong", MakeString("{'visible':{'collapse':false,'rules':'", currentRule1, "'},'type':'number','labels':{'post':'%'}}"), "add")
 
addCustomProperties(visDrop, "visDropSlice", "{'separator':false,'resettonull':false}", "replace")
addCustomProperties(visDrop, "visDrop", MakeString("{'visible':{'collapse':false,'rules':'", currentRule1, "'},'listsize':2,'placeholder':'Select option'}"), "add")
 
 
addCustomProperties(invisCat, "invisCatSlice", "{'separator':false,'resettonull':false}", "replace")
addCustomProperties(invisCat, "invisCat", MakeString("{'invisible':{'collapse':false,'rules':'", currentRule1, "'}}"), "add")
 
addCustomProperties(invisLong, "invisLongSlice", "{'separator':false,'resettonull':false}", "replace")
addCustomProperties(invisLong, "invisLong", MakeString("{'invisible':{'collapse':false,'rules':'", currentRule1, "'},'type':'number','labels':{'post':'%'}}"), "add")
 
addCustomProperties(invisDrop, "invisDropSlice", "{'separator':false,'resettonull':false}", "replace")
addCustomProperties(invisDrop, "invisDrop", MakeString("{'invisible':{'collapse':false,'rules':'", currentRule1, "'},'listsize':2,'placeholder':'Select option'}"), "add")

GridVisibility.Ask()

addCustomProperties(combinedvisibilitygrid, "visCatSlice", MakeString("{'visible':{'collapse':false,'rules':'", CreateVisibilityRule("combinedvisibilitytest.containsAny('CategoricalControl')"), "'}}"), "replace")
addCustomProperties(combinedvisibilitygrid, "visLongSlice", MakeString("{'visible':{'collapse':false,'rules':'", CreateVisibilityRule("combinedvisibilitytest.containsAny('LongControl')"), "'},'type':'number','labels':{'post':'%'}}"), "add")
addCustomProperties(combinedvisibilitygrid, "visDropSlice", MakeString("{'visible':{'collapse':false,'rules':'", CreateVisibilityRule("combinedvisibilitytest.containsAny('Droplist')"), "'},'listsize':4,'placeholder':'Select option'}"), "add")
addCustomProperties(combinedvisibilitygrid, "visComboSlice", MakeString("{'visible':{'collapse':false,'rules':'", CreateVisibilityRule("combinedvisibilitytest.containsAny('Combolist')"), "'},'listsize':4,'filtertype':'starts','placeholder':'Select option'}"), "add")

addCustomProperties(combinedinvisibilitygrid, "invisCatSlice", MakeString("{'invisible':{'collapse':false,'rules':'", CreateVisibilityRule("combinedvisibilitytest.containsAny('CategoricalControl')"), "'}}"), "replace")
addCustomProperties(combinedinvisibilitygrid, "invisLongSlice", MakeString("{'invisible':{'collapse':false,'rules':'", CreateVisibilityRule("combinedvisibilitytest.containsAny('LongControl')"), "'},'type':'number','labels':{'post':'%'}}"), "add")
addCustomProperties(combinedinvisibilitygrid, "invisDropSlice", MakeString("{'invisible':{'collapse':false,'rules':'", CreateVisibilityRule("combinedvisibilitytest.containsAny('Droplist')"), "'},'listsize':4,'placeholder':'Select option'}"), "add")
addCustomProperties(combinedinvisibilitygrid, "invisComboSlice", MakeString("{'invisible':{'collapse':false,'rules':'", CreateVisibilityRule("combinedvisibilitytest.containsAny('Combolist')"), "'},'listsize':4,'filtertype':'starts','placeholder':'Select option'}"), "add")

CombinedVisibilityPage.ask()

addCustomProperties(combinedvisibilitygrid, "visCatSlice", MakeString("{'resettonull':false,'visible':{'collapse':false,'rules':'", CreateVisibilityRule("combinedvisibilitytest.containsAny('CategoricalControl')"), "'}}"), "replace")
addCustomProperties(combinedvisibilitygrid, "visLongSlice", MakeString("{'resettonull':false,'visible':{'collapse':false,'rules':'", CreateVisibilityRule("combinedvisibilitytest.containsAny('LongControl')"), "'},'type':'number','labels':{'post':'%'}}"), "add")
addCustomProperties(combinedvisibilitygrid, "visDropSlice", MakeString("{'resettonull':false,'visible':{'collapse':false,'rules':'", CreateVisibilityRule("combinedvisibilitytest.containsAny('Droplist')"), "'},'listsize':4,'placeholder':'Select option'}"), "add")
addCustomProperties(combinedvisibilitygrid, "visComboSlice", MakeString("{'resettonull':false,'visible':{'collapse':false,'rules':'", CreateVisibilityRule("combinedvisibilitytest.containsAny('Combolist')"), "'},'listsize':4,'filtertype':'starts','placeholder':'Select option'}"), "add")

addCustomProperties(combinedinvisibilitygrid, "invisCatSlice", MakeString("{'resettonull':false,'invisible':{'collapse':false,'rules':'", CreateVisibilityRule("combinedvisibilitytest.containsAny('CategoricalControl')"), "'}}"), "replace")
addCustomProperties(combinedinvisibilitygrid, "invisLongSlice", MakeString("{'resettonull':false,'invisible':{'collapse':false,'rules':'", CreateVisibilityRule("combinedvisibilitytest.containsAny('LongControl')"), "'},'type':'number','labels':{'post':'%'}}"), "add")
addCustomProperties(combinedinvisibilitygrid, "invisDropSlice", MakeString("{'resettonull':false,'invisible':{'collapse':false,'rules':'", CreateVisibilityRule("combinedvisibilitytest.containsAny('Droplist')"), "'},'listsize':4,'placeholder':'Select option'}"), "add")
addCustomProperties(combinedinvisibilitygrid, "invisComboSlice", MakeString("{'resettonull':false,'invisible':{'collapse':false,'rules':'", CreateVisibilityRule("combinedvisibilitytest.containsAny('Combolist')"), "'},'listsize':4,'filtertype':'starts','placeholder':'Select option'}"), "add")

CombinedVisibilityPage.ask()

case {wholegridvisible}

AddCustomProperties(visiblecombogrid, "comboquestion", "{'displayicon':false,'filtertype':'starts','listsize':10,'showanswers':false,'placeholder':'Select an option','mincharactersforlist':0,'noitemsinlist':'no items match this filter'}", "replace")
AddCustomProperties(visiblecombogrid, "comboquestiontwo", "{'displayicon':false,'filtertype':'starts','listsize':10,'showanswers':false,'placeholder':'Select an option','mincharactersforlist':0,'noitemsinlist':'no items match this filter'}", "add")
AddCustomProperties(visibledropdowngrid, "droplistquestion", "{'displayicon':false,'jumptofirstletter':true,'listsize':10,'showanswers':false,'placeholder':'Pick a position'}", "replace")
AddCustomProperties(visibledropdowngrid, "droplistquestiontwo", "{'displayicon':false,'jumptofirstletter':true,'listsize':10,'showanswers':false,'placeholder':'Pick a position'}", "add")
AddCustomProperties(visibleslidergrid, "sliderquestion", "{'values':{'min':1,'max':10},'labels':{'pre':'a little','post':'a lot'},'show':{'marks':true,'value':true,'terminators':true},'ticklabels':1,'floodtovalue':false}", "replace") 

visiblechoicegrid[..].choicequestion.Categories[..].style.cell.width="10em"
visibleslidergrid[..].sliderquestion.Style.align = alignments.alLeft

addCustomProperties(visiblecombogrid, "visiblecombogrid", MakeString("{'visible':{'collapse':true,'rules':'", CreateVisibilityRule("WhichGridVisible.containsAny('combo')"), "'}}"), "add")
addCustomProperties(visibledropdowngrid, "visibledropdowngrid", MakeString("{'visible':{'collapse':true,'rules':'", CreateVisibilityRule("WhichGridVisible.containsAny('dropdown')"), "'}}"), "add")
addCustomProperties(visibleslidergrid, "visibleslidergrid", MakeString("{'visible':{'collapse':true,'rules':'", CreateVisibilityRule("WhichGridVisible.containsAny('slider')"), "'}}"), "add")
addCustomProperties(visibleinputsgrid, "visibleinputsgrid", MakeString("{'visible':{'collapse':true,'rules':'", CreateVisibilityRule("WhichGridVisible.containsAny('input')"), "'}}"), "add")
addCustomProperties(visiblechoicegrid, "visiblechoicegrid", MakeString("{'visible':{'collapse':true,'rules':'", CreateVisibilityRule("WhichGridVisible.containsAny('choice')"), "'}}"), "add")


visiblegridpage.Ask()

case {ProgressiveChoice}

ShortStatement_ProgressiveChoice.Banners.AddNew("Instruction","Indicate how much you agree/disagree with the following statements")
ShortStatement_ProgressiveChoice.Ask()

case {split}

addCustomProperties(TwoChildren, "age", "{'labels':{'post':'years'}}", "replace")
addCustomProperties(TwoChildren, "gender", "{'placeholder':'select gender'}", "add")
twochildren[..].Middle.MustAnswer = false
twoChildren.Categories[..].label.Style.VerticalAlign = verticalalignments.vaTop
'twoChildren.Categories[..].label.Style.Cell.Padding = 4

twoChildren[..].Middle.Style.VerticalAlign = verticalalignments.vaTop
twoChildren[..].Age.Style.VerticalAlign = verticalalignments.vaTop
twoChildren[..].Gender.Style.VerticalAlign = verticalalignments.vaTop

TwoChildren.ask()

twoChildren.Categories[..].label.Style.VerticalAlign = verticalalignments.vaDefault
twoChildren[..].Middle.Style.VerticalAlign = verticalalignments.vaDefault
twoChildren[..].Age.Style.VerticalAlign = verticalalignments.vaDefault
twoChildren[..].Gender.Style.VerticalAlign = verticalalignments.vaDefault

dim twoChildrenIteration
for each twoChildrenIteration in Twochildren
	addCustomProperties(twoChildrenIteration.Age, "age", "{'labels':{'post':'years'}}", "replace")
	addCustomProperties(twoChildrenIteration.Gender, "gender", "{'placeholder':'select gender'}", "add")
Next

'addCustomProperties(TwoChildren.Child1.Age, "age", "{'labels':{'post':'years'}}", "replace")
'addCustomProperties(TwoChildren.Child2.Age, "age", "{'labels':{'post':'years'}}", "replace")
'addCustomProperties(TwoChildren, "gender", "{'placeholder':'select gender'}", "add")

TwoChildren[..].ask()


case {TabStripOnly}
IOM.GlobalQuestions.Add(TabStripNav1)
TabStripHome.ask()

case {RotatedTotals}

'IOM.QuestionTemplate = templateLocation + "question.htm"
RotateGrid(grid5_rowtotal_diffpostlabel_percol, orientations.orColumn)
grid5_rowtotal_diffpostlabel_percol.MustAnswer = false
grid5_rowtotal_diffpostlabel_percol[..].tot = 20
grid5_rowtotal_diffpostlabel_percol[..].slice1.Response.initial = 200

grid5_rowtotal_diffpostlabel_percol[{stage_iiic}].slice4.Style.Hidden = false
grid5_rowtotal_diffpostlabel_percol[{stage_iv}].slice4.Style.hidden = false

AddCustomProperties(grid5_rowtotal_diffpostlabel_percol, "grid5_rowtotal_diffpostlabel_percol", "{'cellshading':{'rowheader':true, 'columnheader':true, 'altrows':true}, 'totals':{'columns':{'visible':false, 'exceptions':[1]}, 'rows':{'visible':true, 'caption':{'content':'Total','align':'right','width':'8em'}, 'labels':{'post':'" + IOM.Questions.lperc_info.Label + "'}}}}", "replace")
AddCustomProperties(grid5_rowtotal_diffpostlabel_percol, "tot", "{'type':'number', labels:{'post':'pts'}}", "add")
AddCustomProperties(grid5_rowtotal_diffpostlabel_percol, "slice1", "{'type':'number', labels:{'post':'" + IOM.Questions.lperc_info.label + "'}}", "add")
AddCustomProperties(grid5_rowtotal_diffpostlabel_percol, "slice2", "{'type':'number', labels:{'post':'" + IOM.Questions.lperc_info.label + "'}}", "add")
AddCustomProperties(grid5_rowtotal_diffpostlabel_percol, "slice3", "{'type':'number', labels:{'post':'" + IOM.Questions.lperc_info.label + "'}}", "add")
AddCustomProperties(grid5_rowtotal_diffpostlabel_percol, "slice4", "{'type':'number', labels:{'post':'" + IOM.Questions.lperc_info.label + "'}}", "add")
AddCustomProperties(grid5_rowtotal_diffpostlabel_percol, "slice5", "{'type':'number', labels:{'post':'" + IOM.Questions.lperc_info.label + "'}}", "add")

'IOM.LayoutTemplate = "pageoutput-label.htm"
grid5_rowtotal_diffpostlabel_percol.Ask()

'IOM.LayoutTemplate = "pageoutput.htm"
RotateGrid(constantsum, orientations.orColumn)
constantsum.Banners.AddNew("Warning", "<b>Percentages</b> <span class='test'>allocated must total</span><br />to 100%")
constantsum[..].PercentageSeen.mustanswer = false

AddCustomProperties(constantsum, "constantsum", "{'caption':{'content':'<b>%</b> of Patents<br /> Seen each day','width':'7em','align':'center'},'totals':{'columns':{'visible':true,'align':'centre', 'width':'4em','caption':{'content':'Total','align':'centre'},'labels':{'post':'%'}}}}", "replace")
AddCustomProperties(constantsum, "PercentageSeen", "{'type':'decimal', labels:{'post':'%'}}", "add")
'constantsum[..].PercentageSeen.Style.Cell.Width = "6em"
'constantsum[..].PercentageSeen.Style.Align = alignments.alCenter
constantsum.ask()

constantsum.QuestionFilter = {Mon,Tue}
constantsum.ask()

case {RotatedCategoricalGrids}
	RotateGrid(AnyFruitByDay, orientations.orColumn)
'IOM.LayoutTemplate = "pageoutput-label.htm"
	
	AddCustomProperties(AnyFruitByDay,"AnyFruitByDay","{'cellshading':{'colheader':true,'altcolumns':true}}","replace")
	AnyFruitByDay.Ask()
	
	AnyFruitByDay["Wed"].whichfruitmulti.Categories["Apple"].Style.hidden = true
	AnyFruitByDay["Thu"].whichfruitmulti.Categories["Banana"].Style.hidden = true
	AnyFruitByDay["Thu"].whichfruitmulti.Categories["Orange"].Style.hidden = true
	AnyFruitByDay["Thu"].whichfruitmulti.Categories["Kiwi"].Style.hidden = true
	
	AnyFruitByDay["Thu"].whichfruitmulti.Categories["Apple"].Style.hidden = true
	AnyFruitByDay["Tue"].whichfruitmulti.Categories["Mango"].Style.hidden = true

	
'IOM.LayoutTemplate = "pageoutput-label.htm"
	AnyFruitByDay.Ask()
	
	RotateGrid(AnyFruitByDaywithOther, orientations.orRow)
	AnyFruitByDaywithOther.Ask()
'	IOM.LayoutTemplate = "page.htm"
	
case {RotatedComplexGrids}
	RotateGrid(Visited_booth, orientations.orColumn)

	Visited_booth[..].rating.MustAnswer = false
	Visited_booth[..].info_recall.MustAnswer = false
'IOM.LayoutTemplate = "pageoutput-label.htm"
	visited_booth.ask()

	RotateGrid(constantsum, orientations.orColumn)
	constantsum[..].PercentageSeen.mustanswer = false

	AddCustomProperties(constantsum, "constantsum", "{'caption':{'content':'% of Patents Seen each day','width':'10em'},'totals':{'rows':{'visible':true,'caption':'Total','labels':{'post':'%'}}}}", "replace")
	AddCustomProperties(constantsum, "PercentageSeen", "{'type':'number', labels:{'post':'%'}}", "add")
	constantsum[..].PercentageSeen.Style.Cell.Width = ""
	'ConstantSum.Style.Orientation = orientations.orColumn
	constantsum.ask()

	RotateGrid(AppointmentsvsArrivals, orientations.orColumn)
	AddCustomProperties(AppointmentsvsArrivals, "Appointments", "{'labels':{'post':'<i>people</i>'}}", "replace")
	AddCustomProperties(AppointmentsvsArrivals, "Arrivals", "{'labels':{'post':'%'}}", "add")
	AppointmentsvsArrivals.Ask()

case {RotatedHiddenCells}

	RotateGrid(HiddenQuestions, orientations.orColumn)
	AddCustomProperties(HiddenQuestions, "asimplequestion", "{'type':'text'", "replace")
	AddCustomProperties(HiddenQuestions, "asimplequestionwithlabels", "{'type':'number','labels':{'pre':'£', 'post':'p'}}", "add")
	AddCustomProperties(HiddenQuestions, "asimpledropdown", "{'displayicon':false,'jumptofirstletter':true,'listsize':10,'showanswers':false,'type':'dropdown','placeholder':'Which Gender'}", "add")
	AddCustomProperties(HiddenQuestions, "asimplecombobox", "{'displayicon':false,'filtertype':'starts','listsize':10,'showanswers':false,'placeholder':'Which Gender','mincharactersforlist':1,'notenoughcharacters':'You need to type at least one character','noitemsinlist':'no items match this filter'}", "add")
	AddCustomProperties(HiddenQuestions, "asimpleslider", "{'values':{'min':1,'max':5},'show':{'marks':true,'value':false,'terminators':true},'ticklabels':1,'floodtovalue':true}", "add") 

	HiddenQuestions[..].asimplequestion.MustAnswer = false
	HiddenQuestions[..].asimplequestionwithlabels.MustAnswer = false
	HiddenQuestions[..].asimpledropdown.MustAnswer = false
	HiddenQuestions[..].asimplecombobox.MustAnswer = false
	HiddenQuestions[..].asimpleslider.MustAnswer = false
	
	hiddenQuestions.Ask()

	hiddenQuestions.firstrow.asimplequestion.style.hidden = true
	hiddenQuestions.firstrow.asimpledropdown.style.hidden = true
	hiddenQuestions.secondrow.asimplequestion.Style.Hidden = true
	hiddenQuestions.secondrow.asimplecombobox.Style.Hidden = true
	hiddenQuestions.thirdrow.asimpleslider.Style.Hidden = true
	hiddenQuestions.thirdrow.asimplequestionwithlabels.Style.Hidden = true
	
'	IOM.LayoutTemplate = "pageoutput-label.htm"
	
	hiddenQuestions.Ask()

	case {infopop}
	CreateInformationPopUp(varopinion, "A description of VAR", "VAR is Virtual Assistant Referee, it can be used to overturn the decisions of the referee on the pitch where it is determined that they have made a clear and obvious error.")
	varopinion.ask() 

	case {longlist}
    '----------------------------------------
    ' Long Lists
    '----------------------------------------

	AddCustomProperties(brandlist, "brandlist", "{'displayicon':false,'listsize':8,'list':{'location':'internal','source':'a-list','valuefrom':'name','descriptionfrom':'name'},'showanswers':true,'mincharactersforlist':3,'notenoughcharacters':'type at least 3 characters to see a list of products containing what has been typed.','filtertype':'contains','placeholder':'Describe your drink, include the brand if you know it','noitemsinlist':'There are no drinks of that name in the list, you can accept this answer by tapping the tick','prompts':{'selection':'Brand Identified','listcount':'beverages found'}}", "replace")
    brandlist.QuestionTemplate = "question-database-brandlist.htm"
    brandlist.Ask()

	AddCustomProperties(barcodelist, "barcodelist", "{'displayicon':false,'listsize':15,'list':{'location':'internal','source':'a-list','valuefrom':'UPC','descriptionfrom':'name'},'showanswers':true,'mincharactersforlist':3,'notenoughcharacters':'type at least 3 characters to see a list of products containing what has been typed.','filtertype':'contains','placeholder':'Describe your drink, include the brand if you know it','noitemsinlist':'There are no drinks of that name in the list, you can accept this answer by tapping the tick','prompts':{'selection':'Brand Identified','listcount':'beverages found'}}", "replace")
    barcodelist.QuestionTemplate = "question-database.htm"
    barcodelist.Ask()

	AddCustomProperties(barcodelist, "barcodelist", "{'displayicon':false,'listsize':15,'list':{'location':'external','source':'https:\\media.ipsosinteractive.com\sandbox\kevin.gray\passiveobservation\act\barcodelistdemo.json','valuefrom':'code','descriptionfrom':'Description'},'showanswers':true,'mincharactersforlist':3,'notenoughcharacters':'type at least 3 characters to see a list of products containing what has been typed.','filtertype':'contains','placeholder':'Describe your drink, include the brand if you know it','noitemsinlist':'There are no drinks of that name in the list, you can accept this answer by tapping the tick'}", "replace")
    barcodelist.QuestionTemplate = null
    barcodelist.Ask()


	case {SpecialOnes}
	
	'----------------------------------------
	' Invisible dates Question
	'----------------------------------------
	Dim yearFilter, chosenyear, yearfilterrule
	Dim yearlistcounter
	
	YearofDiagnosis.ask()
	chosenyear = clong(format(yearofdiagnosis.Response, "b"))
	yearfilter = ""
	yearfilterrule = CreateVisibilityRule("relapse.containsAny('yes')")
	
	AddCustomProperties(dateoftreatmentgrid, "yearoftreatment", "{'resettonull':false,'listsize':5,'showanswers':false,'placeholder':'select a year'}", "replace")
	AddCustomProperties(dateoftreatmentgrid, "monthoftreatment", "{'resettonull':false,'listsize':12,'showanswers':false,'placeholder':'select a Month'}", "add")
	AddCustomProperties(dateoftreatmentgrid, "monthoftreatment", MakeString("{'visible':{'collapse':true,'rules':'", yearfilterrule, "'}}"), "add")
	AddCustomProperties(dateoftreatmentgrid, "yearoftreatment", MakeString("{'visible':{'collapse':true,'rules':'", yearfilterrule, "'}}"), "add")
	
	for yearlistcounter = 0  to yearofdiagnosis.Categories.Count - 1
		if chosenyear <= clong(yearoftreatment.Categories[yearlistcounter].Label) then
			if yearfilter <> "" then yearfilter = yearfilter + ","
			yearfilter = yearfilter + yearoftreatment.Categories[yearlistcounter].FullName
		end if
	next
	
	If yearfilter <> "" then 
		yearfilter = "{" + yearfilter + "}"
		dateoftreatmentgrid[1].yearoftreatment.Categories.Filter = ccategorical(yearfilter)
	end if
		
	if dateoftreatmentgrid[1].yearoftreatment.Categories.Count > 0 and dateoftreatmentgrid[1].yearoftreatment.Categories.Count < 2 then
		dateoftreatmentgrid[1].yearoftreatment.Response = yearofdiagnosis.Response
	end if
	
	PageOfRelapseGrid.ask()

	chosenyear = clong(format(yearofdiagnosis.Response, "b"))
	yearfilter = ""
	yearfilterrule = CreateVisibilityRule("relapse.containsAny('yes')")
	
	AddCustomProperties(dateoftreatmentgrid, "yearoftreatment", "{'resettonull':false,'listsize':5,'showanswers':false,'placeholder':'select a year'}", "replace")
	AddCustomProperties(dateoftreatmentgrid, "monthoftreatment", "{'resettonull':false,'listsize':12,'showanswers':false,'placeholder':'select a Month'}", "add")
	AddCustomProperties(dateoftreatmentgrid, "dateoftreatmentgrid", MakeString("{'visible':{'collapse':true,'rules':'", yearfilterrule, "'}}"), "add")
	
	for yearlistcounter = 0  to yearofdiagnosis.Categories.Count - 1
		if chosenyear <= clong(yearoftreatment.Categories[yearlistcounter].Label) then
			if yearfilter <> "" then yearfilter = yearfilter + ","
			yearfilter = yearfilter + yearoftreatment.Categories[yearlistcounter].FullName
		end if
	next
	
	If yearfilter <> "" then 
		yearfilter = "{" + yearfilter + "}"
		dateoftreatmentgrid[1].yearoftreatment.Categories.Filter = ccategorical(yearfilter)
	end if
		
	if dateoftreatmentgrid[1].yearoftreatment.Categories.Count > 0 and dateoftreatmentgrid[1].yearoftreatment.Categories.Count < 2 then
		dateoftreatmentgrid[1].yearoftreatment.Response = yearofdiagnosis.Response
	end if
	PageOfRelapseGrid.ask()

	AddCustomProperties(yearoftreatment, "yearoftreatment", "{'resettonull':false,'listsize':5,'showanswers':false,'placeholder':'select a year'}", "replace")
'	AddCustomProperties(monthoftreatment, "monthoftreatment", "{'resettonull':false,'listsize':12,'showanswers':false,'placeholder':'select a Month'}", "add")
'	AddCustomProperties(monthoftreatment, "monthoftreatment", MakeString("{'visible':{'collapse':true,'rules':'", yearfilterrule, "'}}"), "add")
	AddCustomProperties(yearoftreatment, "yearoftreatment", MakeString("{'visible':{'collapse':true,'rules':'", yearfilterrule, "'}}"), "add")
	
	for yearlistcounter = 0  to yearofdiagnosis.Categories.Count - 1
		if chosenyear <= clong(yearoftreatment.Categories[yearlistcounter].Label) then
			if yearfilter <> "" then yearfilter = yearfilter + ","
			yearfilter = yearfilter + yearoftreatment.Categories[yearlistcounter].FullName
		end if
	next
	
	If yearfilter <> "" then 
		yearfilter = "{" + yearfilter + "}"
		yearoftreatment.Categories.Filter = ccategorical(yearfilter)
	end if
		
	if yearoftreatment.Categories.Count > 0 and yearoftreatment.Categories.Count < 2 then
	yearoftreatment.Response = yearofdiagnosis.Response
	end if

	PageOfRelapse.ask()
	
	yearfilter = ""
	AddCustomProperties(RelapseBlock.yearoftreatment, "yearoftreatment", "{'resettonull':false,'listsize':5,'showanswers':false,'placeholder':'select a year'}", "replace")
	AddCustomProperties(RelapseBlock.yearoftreatment, "yearoftreatment", MakeString("{'visible':{'collapse':true,'rules':'", yearfilterrule, "'}}"), "add")
	
	for yearlistcounter = 0  to yearofdiagnosis.Categories.Count - 1
		if chosenyear <= clong(RelapseBlock.yearoftreatment.Categories[yearlistcounter].Label) then
			if yearfilter <> "" then yearfilter = yearfilter + ","
			yearfilter = yearfilter + RelapseBlock.yearoftreatment.Categories[yearlistcounter].FullName
		end if
	next
	
	If yearfilter <> "" then 
		yearfilter = "{" + yearfilter + "}"
		RelapseBlock.yearoftreatment.Categories.Filter = ccategorical(yearfilter)
	end if
		
	if RelapseBlock.yearoftreatment.Categories.Count > 0 and RelapseBlock.yearoftreatment.Categories.Count < 2 then
		RelapseBlock.yearoftreatment.Response = yearofdiagnosis.Response
	end if
	
	RelapseBlock.ask()

    
end select

loop
function FindBanner(theQuestion, theBannerName)
dim numberOfBanners
dim bannerFound
dim bannercount
	numberOfBanners = theQuestion.Banners.count
	bannerFound = false
	for bannerCount = 0 to numberOfBanners - 1
		if theQuestion.Banners[bannerCount].name = theBannerName then
			set FindBanner = theQuestion.Banners[bannerCount]
			exit function
		end if
	Next
	set FindBanner = null
end function

function AddCustomProperties(theQuestion, theQuestionName, theBannerContent, theAction)
dim questionName

	questionName = MakeString("_Q", theQuestionName.Replace("_", "__"))
	questionName = questionName.Replace("__Q","_Q")
	CreateBanner(theQuestion, "CustomProperties")
	
	SetCustomProperties(theQuestion, questionName, theBannerContent, theAction)
end function

function SetCustomProperties(theQuestion, theQuestionName, theBannerContent, theAction)
dim quote
dim bannerArray
dim bannerContent
	if theAction is null then theAction = "replace"
	
	quote = ChrW(34)
	debug.Log(MakeString("start banner content:", theBannerContent))
	bannerContent = theBannerContent.Replace("'", quote).Replace("%%","'").Replace("<","%lt%").Replace(">","%gt%")'.Replace("&","%amp;%")
	debug.Log(MakeString("complete banner content:", bannerContent))
	
	bannerContent = MakeString("<script type='text/javascript'>", "app.RegisterProperties(", quote, theQuestionName, quote, ",", bannerContent, ");</script>")
	debug.Log(MakeString("final banner content:", bannerContent))
	
	if theAction <> "replace" then
		theQuestion.Banners["CustomProperties"].text = MakeString(theQuestion.Banners["CustomProperties"].text, bannerContent)
	else
		theQuestion.Banners["CustomProperties"].text = bannerContent
	end if
end function

function CreateBanner(theQuestion, theBannerName)
dim bannerFound
	set bannerFound = FindBanner(theQuestion, theBannerName)
	if bannerFound is null then
		theQuestion.Banners.AddNew(theBannerName, "")
	end if
end function


function BuildRegisterContainer(theQuestion, theIndex, theName)
dim registerScript, registerBanner
dim questionIndex
dim questionName
dim stringScript, stringComponent, stringQuestionID, stringContainer
	questionIndex = MakeString("_Q", theIndex)
	registerScript = MakeString("<script data-questionid='", questionIndex, "'>app.registerComponent('oQuestionContainer','", questionIndex, "','", theName, "');</script>")

	theQuestion.Banners["RegisterContainer"].text = MakeString(theQuestion.Banners["RegisterContainer"].text, registerScript)
end function

function onAfterQuestionAsk(theQuestion, theIOM)
debug.Log("after question")
'debug.Log("Question:" + theQuestion.Questionname + ", response: " + ctext(theQuestion.response))
end function

function OnBeforeQuestionValidation(theQuestion, theIOM)
'debug.Log("before validation")
'if theQuestion.questionname = "GridDrugComboSingle" then theIOM.LayoutTemplate = "pageoutput-label.htm"
end function

function onBeforeQuestionAsk(theQuestion, theIOM)
'debug.Log("before question")
dim currentName, currentFullname, currentType, currentOrder
dim registerBanner
dim numberOfSubQuestions, counter, subQuestion, subName
dim InstructionBanner, warningBanner


currentname = theQuestion.QuestionName 
currentfullname = theQuestion.QuestionFullName
currenttype = theQuestion.QuestionType
	select case(thequestion.QuestionType)
	case QuestionTypes.qtBlock, QuestionTypes.qtPage
		numberOfSubQuestions = theQuestion.count 
		for counter = 0 to numberOfSubQuestions - 1
			set subQuestion = theQuestion[counter]
			subName = MakeString("_Q", currentName.Replace("_", "__"), "_Q", subQuestion.QuestionName.Replace("_", "__"))

			CreateBanner(subQuestion, "RegisterContainer")
			subQuestion.Banners["RegisterContainer"].text = ""

			setZIndex(subQuestion, theIOM)
			BuildRegisterContainer(subQuestion, counter, subName)

'			set instructionBanner = FindBanner(subQuestion, "Instruction")
'			if instructionBanner <> null then
'				PadBanner(instructionBanner)
'			end if
			
'			set warningBanner = FindBanner(subQuestion, "Warning")
'			if warningBanner <> null then
'				PadBanner(warningBanner)
'			end if

		Next	
		case else 
			CreateBanner(theQuestion, "RegisterContainer")
			theQuestion.Banners["RegisterContainer"].text = ""
	'this may need to loop for a table (sub questions) as in the non page version
			SetZIndex(theQuestion, theIOM)
			BuildRegisterContainer(theQuestion, 0, MakeString("_Q", theQuestion.QuestionName.Replace("_", "__")))
	
'			set instructionBanner = FindBanner(theQuestion, "Instruction")
'			if instructionBanner <> null then
'				PadBanner(instructionBanner)
'			end if
			
'			set warningBanner = FindBanner(theQuestion, "Warning")
'			if warningBanner <> null then
'				PadBanner(warningBanner)
'			end if
		end select
end function

function ComplexJSON_Create(theIOM, theCurrentSection, theArray)
dim curentItem
dim counter
dim arrayLength
dim newJSON
dim jsonStart, jsonFull
dim scriptStart, scriptEnd
dim quote
	quote = ChrW(34)
	newJSON = ""
	scriptStart = "<script>app.RegisterProperties('_Progress',"
	scriptEnd = ")</script>"
	jsonstart = MakeString("{'currentsection':", theCurrentSection, ",'sections':[")
	arrayLength = theArray.Len()
	for counter = 0 to arrayLength -1
		if newJSON <> "" then newJSON = MakeString(newJSON, ",")
		newJSON = MakeString(newJSON, theArray[counter])
	Next
	jsonFull = MakeString(jsonStart, newJSON, "]}").replace("'", quote)
	
	theIOM.Banners["CustomProgressBar"].Text = MakeString(scriptStart, jsonFull, scriptEnd)
	
	ComplexJSON_Create = MakeString(scriptStart, jsonFull, scriptEnd)
end function

function PageJSON_Create(theIOM, theJSON)
dim pageBanner
dim quote
dim scriptStart, scriptEnd
	scriptStart = "<script id='pageproperties'>app.RegisterProperties('Page',"
	scriptEnd = ")</script>"
	quote = ChrW(34)
	set pageBanner = theIOM.Banners["PageCustomProperties"]
	
	if theJSON <> "" then
		pageBanner.text = MakeString(scriptStart, theJSON.Replace("'", quote), scriptEnd)
	else
		pageBanner.Text = ""
	end if
	
end function

function PadBanner(theBanner)
debug.Log("padBanner: " + theBanner)
	if theBanner.text.Left("3") <> "<p>" then theBanner.text = MakeString("<p>", theBanner.text, "</p>")
end function

function CreateVisibilityRule(theRule)
dim newString 
	newString = theRule.replace("'", "%%").replace("_","__")
	newString = newString.Replace("__Q","_Q")
	CreateVisibilityRule = newString
end function

sub setZIndex(theQuestion,theIOM)
      if theQuestion.Style.ZIndex = NULL then
           select case theQuestion.QuestionDataType
          'Info
          case DataTypeConstants.mtNone
                theQuestion.Style.ZIndex = -10
                
          'Long/Double/Text
          case DataTypeConstants.mtLong,DataTypeConstants.mtDouble, DataTypeConstants.mtText
                theQuestion.Style.ZIndex = -20
                
          'Categorical
          case DataTypeConstants.mtCategorical
      		select case theQuestion.style.control.type

      		'single/multi-choice
      		case controltypes.ctCheckButton or controltypes.ctRadioButton
            	theQuestion.Style.ZIndex = -40

      		'dropdowns
            case controlTypes.ctDropList
            	theQuestion.style.zindex = -60

      		'combobox
            case controlTypes.ctComboList
            	theQuestion.style.zindex = -70
			end Select                      	
           end select
      end if     
end sub

sub CreateInformationPopup (theQuestion, theTitle, theContent)
dim informationBanner
dim bannerArray[6]
	CreateBanner(theQuestion, "Information")
	set informationBanner  = theQuestion.Banners["Information"]
	bannerArray[0] = "<summary class='a-label-summary'>"
	bannerArray[1] = theTitle
	bannerArray[2] = "</summary>"
	bannerArray[3] = "<div class='a-label-details'>"
	bannerArray[4] = theContent
	bannerArray[5] = "</div>"
	
	informationBanner.text = CombineArray(bannerArray, "")
end sub

function CombineArray(theArray, theBetween)
dim limit
dim counter 
dim newString
	newString = ""
	limit = ubound(theArray)
	for counter = 0 to limit
		newString = newString + theArray[counter]
		newString = newString + theBetween
	Next
	CombineArray = newString
end function

sub RotateGrid(theGrid, theOrientation)
      theGrid.style.orientation = theOrientation
end sub
End Routing
