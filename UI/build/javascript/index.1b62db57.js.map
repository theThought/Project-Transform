{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,W,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,U,W,O,C,E,S,C,E,O,E,C,GCEA,IAgBA,EACA,EAjBI,EAAU,IAAI,IAgBlB,EAfA,SAAkB,CAAO,CAAE,CAAQ,EACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAG,EAAG,GAAK,EAC5C,EAAQ,GAAG,CAAC,CAAQ,CAAC,EAAE,CAAE,CACvB,QAAS,EACT,KAAM,CAAQ,CAAC,EAAI,EAAE,AACvB,EAEJ,EASA,EARA,SAAiB,CAAE,EACjB,IAAI,EAAW,EAAQ,GAAG,CAAC,GAC3B,GAAI,AAAY,MAAZ,EACF,MAAM,AAAI,MAAM,oCAAsC,GAExD,OAAO,IAAI,IAAI,EAAS,IAAI,CAAE,EAAS,OAAO,EAAE,QAAQ,EAC1D,C,G,E,Q,S,C,C,C,E,I,E,E,QChBA,CAAA,EAAA,OAAA,CAAkB,EAAK,SAAU,IAAI,CAAC,IAAM,EAAc,S,G,E,Q,S,C,C,C,ECK1D,EAAA,OAAA,CAJA,SAAc,CAAE,EAEd,OAAO,MAAA,CAAmB,AAAA,EAAA,SAAA,OAAA,CAAsC,GAClE,C,GCLA,AAAA,EAAA,SAAA,QAAA,CAA8C,IAAA,IAAoB,GAAA,YAAA,GAAA,EAAI,QAAQ,GAAG,KAAK,KAAK,CAAC,mGIA7E,OAAA,UAAwB,YAInC,OAAA,CAAA,CAAA,CACO,IAAA,CAAA,kBAAA,CAAqB,CAAC,YAAY,AAAA,AAEzC,cAAc,CAMV,GALA,KAAK,GAEL,IAAI,CAAC,MAAM,CAAG,IAAI,CAAC,aAAa,CAA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","sources":["<anon>","UI/node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","UI/node_modules/@parcel/runtime-js/lib/runtime-99d3b3338d87b63f.js","UI/node_modules/@parcel/runtime-js/lib/helpers/browser/esm-js-loader.js","UI/node_modules/@parcel/runtime-js/lib/runtime-c2567dfbdaf5550a.js","UI/src/javascript/index.ts","UI/src/javascript/utils/browser-supports-features.ts","UI/src/javascript/ui-init.ts","UI/src/javascript/web-components/wc-example.ts","UI/src/javascript/web-components/m-input-singlelineedit.ts","UI/src/javascript/utils/helpers.ts"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"gmstN\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", function () { return $be94cadb8bc8e090$export$6503ec6e8aabbaf; }, function (v) { return $be94cadb8bc8e090$export$6503ec6e8aabbaf = v; });\n$parcel$export(module.exports, \"resolve\", function () { return $be94cadb8bc8e090$export$f7ad0328861e2f03; }, function (v) { return $be94cadb8bc8e090$export$f7ad0328861e2f03 = v; });\nvar $be94cadb8bc8e090$export$6503ec6e8aabbaf;\nvar $be94cadb8bc8e090$export$f7ad0328861e2f03;\n\"use strict\";\nvar $be94cadb8bc8e090$var$mapping = new Map();\nfunction $be94cadb8bc8e090$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$be94cadb8bc8e090$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $be94cadb8bc8e090$var$resolve(id) {\n    var resolved = $be94cadb8bc8e090$var$mapping.get(id);\n    if (resolved == null) throw new Error('Could not resolve bundle with id ' + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$be94cadb8bc8e090$export$6503ec6e8aabbaf = $be94cadb8bc8e090$var$register;\n$be94cadb8bc8e090$export$f7ad0328861e2f03 = $be94cadb8bc8e090$var$resolve;\n\n});\n\nparcelRegister(\"hIVfd\", function(module, exports) {\n\nvar $XXhuC = parcelRequire(\"XXhuC\");\nmodule.exports = $XXhuC(\"huHpT\").then(()=>parcelRequire('cy3Db'));\n\n});\nparcelRegister(\"XXhuC\", function(module, exports) {\n\"use strict\";\n\nfunction $0b437ecda2bfffa7$var$load(id) {\n    // eslint-disable-next-line no-undef\n    return import((parcelRequire(\"gmstN\")).resolve(id));\n}\nmodule.exports = $0b437ecda2bfffa7$var$load;\n\n});\n\n\nvar $956d085d4dd2b88c$exports = {};\n\n(parcelRequire(\"gmstN\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse(\"[\\\"drKE6\\\",\\\"index.1b62db57.js\\\",\\\"huHpT\\\",\\\"polyfills.cf459d19.js\\\"]\"));\n\n// Import CSS.\n\n/*\r\n    Use the \"browserslist\" config in \"package.json\" file to determine which features need to be supported with polyfills.\r\n\r\n    Please refer to these articles for explanation:\r\n    - https://philipwalton.com/articles/loading-polyfills-only-when-needed/.\r\n    - https://golb.hplar.ch/2018/02/Conditionally-load-polyfills.html.\r\n*/ const $b3975b22d1fb0ce4$export$33ff6ac0c1dc8af3 = ()=>{\n    // As an example... test for native <dialog> support.\n    const isDialog = typeof document.createElement('dialog').showModal === 'function';\n    return isDialog;\n};\n\n\n// DEMO web component for Storybook introduction.\nclass $0631caab67deec9d$export$2e2bcd8739ae039 extends HTMLElement {\n    static #_ = // Triggers attributeChangedCallback() lifecycle method whenever attributes listed here change.\n    this.observedAttributes = [\n        'attribute'\n    ];\n    constructor(){\n        super();\n        this.button = this.querySelector('button');\n        this.count = 0;\n        if (!this.button) return;\n        this.init();\n        this.button?.addEventListener('click', this);\n    }\n    init() {\n        this.button?.removeAttribute('hidden');\n    }\n    handleGlobalClick(e) {\n        const target = e.target;\n        const insideButton = this.button?.contains(target);\n        if (!insideButton) console.log('Click target:', target, 'Clicked outside component:', this);\n    }\n    // Handle attribute changes.\n    attributeChangedCallback(name, oldValue, newValue) {\n        console.log(`Attribute ${name} has changed from ${oldValue} to ${newValue}.`);\n    }\n    // Handle constructor() event listeners.\n    handleEvent(e) {\n        const target = e.currentTarget;\n        this.count++;\n        if (target) target.innerHTML = `Clicked ${this.count} time(s)`;\n    }\n    // Handle (global) event listeners which are not part of this web component.\n    connectedCallback() {\n        document.addEventListener('click', (e)=>this.handleGlobalClick(e));\n    }\n    disconnectedCallback() {\n        document.removeEventListener('click', this.handleGlobalClick);\n    }\n}\n\n\n/**\r\n * Function - converts custom properties string to JSON.\r\n *\r\n * @param {string} [properties] - stringified custom properties JSON.\r\n *\r\n * @return {JSON}\r\n */ const $e2634b9eb5104ca3$export$7f645d55b4b275dc = (properties)=>{\n    return JSON.parse(properties);\n};\n\n\nclass $2406097b92f0b598$export$2e2bcd8739ae039 extends HTMLElement {\n    constructor(){\n        super();\n        this.qid = this.dataset.questionid;\n        this.qgroup = this.dataset.questiongroup;\n        this.element = document.querySelector('.a-input-singlelineedit');\n        this.question = this.closest('.o-question-container');\n        if (!this.element) return;\n        this.init();\n        this.element?.addEventListener('click', this);\n        this.element?.addEventListener('change', this);\n    }\n    init() {\n        console.log('MInputSinglelineedit: init...', this.qid, this.qgroup, this.element);\n        this.handleCustomProps();\n    }\n    handleCustomProps() {\n        const elemCustomProps = this.question?.querySelector('[data-custom-props]');\n        if (this.qid !== elemCustomProps?.dataset.questionid && this.qgroup !== elemCustomProps?.dataset.questiongroup && !elemCustomProps) return;\n        const customProps = elemCustomProps?.dataset.customProps;\n        if (customProps) {\n            const customPropsJson = (0, $e2634b9eb5104ca3$export$7f645d55b4b275dc)(customProps);\n            this.setInputType(customPropsJson);\n        // TODO: pre-/post-labels\n        }\n    }\n    // Set the appropriate 'type' attribute on <input> based on custom properties.\n    setInputType(customPropsJson) {\n        let inputType = 'text';\n        Object.entries(customPropsJson).forEach(([key, value])=>{\n            if (key === 'type') inputType = value;\n        });\n        switch(inputType){\n            case 'date':\n                inputType = 'date';\n                break;\n            case 'number':\n                inputType = 'number';\n                break;\n            default:\n                inputType = 'text';\n                break;\n        }\n        if (this.element) this.element.type = inputType;\n    }\n    // Handle constructor() event listeners.\n    handleEvent(e) {\n        switch(e.type){\n            case 'click':\n                console.log('click');\n                break;\n            case 'change':\n                console.log('change');\n                break;\n        }\n    }\n    // Handle (global) event listeners which are not part of this web component.\n    connectedCallback() {\n    // e.g. document.addEventListener('broadcastChange', ...);\n    }\n    disconnectedCallback() {\n    // e.g. document.removeEventListener('broadcastChange', ...);\n    }\n}\n\n\nconst $2a15bf81099470bd$export$12e25f693a4429ac = ()=>{\n    // DEMO web component for Storybook introduction.\n    !customElements.get('wc-example') && customElements.define('wc-example', (0, $0631caab67deec9d$export$2e2bcd8739ae039));\n    // Survey web components.\n    !customElements.get('m-input-singlelineedit') && customElements.define('m-input-singlelineedit', (0, $2406097b92f0b598$export$2e2bcd8739ae039));\n};\n\n\n\nif ((0, $b3975b22d1fb0ce4$export$33ff6ac0c1dc8af3)()) (0, $2a15bf81099470bd$export$12e25f693a4429ac)();\nelse // Dynamic import polyfills, then instantiate UI modules.\n(parcelRequire(\"hIVfd\")).then(()=>(0, $2a15bf81099470bd$export$12e25f693a4429ac)()).catch((e)=>console.error(e));\n\n\n//# sourceMappingURL=index.1b62db57.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","let load = require('./helpers/browser/esm-js-loader');\nmodule.exports = (load(\"huHpT\")).then(() => parcelRequire('cy3Db'));","\"use strict\";\n\nfunction load(id) {\n  // eslint-disable-next-line no-undef\n  return __parcel__import__(require('../bundle-manifest').resolve(id));\n}\nmodule.exports = load;","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"drKE6\\\",\\\"index.1b62db57.js\\\",\\\"huHpT\\\",\\\"polyfills.cf459d19.js\\\"]\"));","// Import CSS.\r\nimport '../../src/css/index.css';\r\n\r\n// Import key ES modules.\r\nimport { browserSupportsAllFeatures } from './utils/browser-supports-features';\r\nimport { uiInit } from './ui-init';\r\n\r\nif (browserSupportsAllFeatures()) {\r\n    uiInit();\r\n} else {\r\n    // Dynamic import polyfills, then instantiate UI modules.\r\n    import('./utils/polyfills')\r\n        .then(() => uiInit())\r\n        .catch((e) => console.error(e));\r\n}\r\n","/*\r\n    Use the \"browserslist\" config in \"package.json\" file to determine which features need to be supported with polyfills.\r\n\r\n    Please refer to these articles for explanation:\r\n    - https://philipwalton.com/articles/loading-polyfills-only-when-needed/.\r\n    - https://golb.hplar.ch/2018/02/Conditionally-load-polyfills.html.\r\n*/\r\nexport const browserSupportsAllFeatures = (): boolean => {\r\n    // As an example... test for native <dialog> support.\r\n    const isDialog =\r\n        typeof document.createElement('dialog').showModal === 'function';\r\n\r\n    return isDialog;\r\n};\r\n","// DEMO web component for Storybook introduction.\r\nimport WCExample from './web-components/wc-example';\r\n\r\n// Survey web components.\r\nimport MInputSinglelineedit from './web-components/m-input-singlelineedit';\r\n\r\nexport const uiInit = (): void => {\r\n    // DEMO web component for Storybook introduction.\r\n    !customElements.get('wc-example') &&\r\n        customElements.define('wc-example', WCExample);\r\n\r\n    // Survey web components.\r\n    !customElements.get('m-input-singlelineedit') &&\r\n        customElements.define('m-input-singlelineedit', MInputSinglelineedit);\r\n};\r\n","export default class WCExample extends HTMLElement {\r\n    private button: HTMLButtonElement | null;\r\n    private count: number;\r\n\r\n    // Triggers attributeChangedCallback() lifecycle method whenever attributes listed here change.\r\n    static observedAttributes = ['attribute'];\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.button = this.querySelector('button');\r\n        this.count = 0;\r\n\r\n        if (!this.button) return;\r\n\r\n        this.init();\r\n        this.button?.addEventListener('click', this);\r\n    }\r\n\r\n    private init(): void {\r\n        this.button?.removeAttribute('hidden');\r\n    }\r\n\r\n    private handleGlobalClick(e: MouseEvent): void {\r\n        const target = e.target as HTMLElement;\r\n        const insideButton = this.button?.contains(target);\r\n\r\n        if (!insideButton) {\r\n            console.log(\r\n                'Click target:',\r\n                target,\r\n                'Clicked outside component:',\r\n                this,\r\n            );\r\n        }\r\n    }\r\n\r\n    // Handle attribute changes.\r\n    public attributeChangedCallback(\r\n        name: string,\r\n        oldValue: string,\r\n        newValue: string,\r\n    ): void {\r\n        console.log(\r\n            `Attribute ${name} has changed from ${oldValue} to ${newValue}.`,\r\n        );\r\n    }\r\n\r\n    // Handle constructor() event listeners.\r\n    public handleEvent(e: MouseEvent) {\r\n        const target = e.currentTarget as HTMLElement;\r\n\r\n        this.count++;\r\n        if (target) {\r\n            target.innerHTML = `Clicked ${this.count} time(s)`;\r\n        }\r\n    }\r\n\r\n    // Handle (global) event listeners which are not part of this web component.\r\n    public connectedCallback() {\r\n        document.addEventListener('click', (e: MouseEvent) =>\r\n            this.handleGlobalClick(e),\r\n        );\r\n    }\r\n\r\n    public disconnectedCallback() {\r\n        document.removeEventListener('click', this.handleGlobalClick);\r\n    }\r\n}\r\n","import { parseCustomProperties } from '../utils/helpers';\r\n\r\nexport default class MInputSinglelineedit extends HTMLElement {\r\n    private qid: string | undefined;\r\n    private qgroup: string | undefined;\r\n    private element: HTMLInputElement | null;\r\n    private question: HTMLElement | null;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.qid = this.dataset.questionid;\r\n        this.qgroup = this.dataset.questiongroup;\r\n        this.element = document.querySelector('.a-input-singlelineedit');\r\n        this.question = this.closest('.o-question-container');\r\n\r\n        if (!this.element) return;\r\n\r\n        this.init();\r\n\r\n        this.element?.addEventListener('click', this);\r\n        this.element?.addEventListener('change', this);\r\n    }\r\n\r\n    private init(): void {\r\n        console.log(\r\n            'MInputSinglelineedit: init...',\r\n            this.qid,\r\n            this.qgroup,\r\n            this.element,\r\n        );\r\n\r\n        this.handleCustomProps();\r\n    }\r\n\r\n    private handleCustomProps(): void {\r\n        const elemCustomProps = this.question?.querySelector(\r\n            '[data-custom-props]',\r\n        ) as HTMLElement;\r\n\r\n        if (\r\n            this.qid !== elemCustomProps?.dataset.questionid &&\r\n            this.qgroup !== elemCustomProps?.dataset.questiongroup &&\r\n            !elemCustomProps\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        const customProps = elemCustomProps?.dataset.customProps;\r\n        if (customProps) {\r\n            const customPropsJson = parseCustomProperties(customProps);\r\n            this.setInputType(customPropsJson);\r\n\r\n            // TODO: pre-/post-labels\r\n        }\r\n    }\r\n\r\n    // Set the appropriate 'type' attribute on <input> based on custom properties.\r\n    private setInputType(customPropsJson: Record<string, unknown>): void {\r\n        let inputType = 'text';\r\n\r\n        Object.entries(customPropsJson).forEach(([key, value]) => {\r\n            if (key === 'type') {\r\n                inputType = value as string;\r\n            }\r\n        });\r\n\r\n        switch (inputType) {\r\n            case 'date':\r\n                inputType = 'date';\r\n                break;\r\n            case 'number':\r\n                inputType = 'number';\r\n                break;\r\n            default:\r\n                inputType = 'text';\r\n                break;\r\n        }\r\n\r\n        if (this.element) {\r\n            this.element.type = inputType;\r\n        }\r\n    }\r\n\r\n    // Handle constructor() event listeners.\r\n    public handleEvent(e: Event) {\r\n        switch (e.type) {\r\n            case 'click':\r\n                console.log('click');\r\n                break;\r\n            case 'change':\r\n                console.log('change');\r\n                break;\r\n        }\r\n    }\r\n\r\n    // Handle (global) event listeners which are not part of this web component.\r\n    public connectedCallback() {\r\n        // e.g. document.addEventListener('broadcastChange', ...);\r\n    }\r\n\r\n    public disconnectedCallback() {\r\n        // e.g. document.removeEventListener('broadcastChange', ...);\r\n    }\r\n}\r\n","/**\r\n * Function - converts custom properties string to JSON.\r\n *\r\n * @param {string} [properties] - stringified custom properties JSON.\r\n *\r\n * @return {JSON}\r\n */\r\nexport const parseCustomProperties = (\r\n    properties: string,\r\n): Record<string, unknown> => {\r\n    return JSON.parse(properties);\r\n};\r\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$be94cadb8bc8e090$export$6503ec6e8aabbaf","$be94cadb8bc8e090$export$f7ad0328861e2f03","$be94cadb8bc8e090$var$mapping","Map","baseUrl","manifest","i","length","path","resolved","URL","toString","$XXhuC","then","resolve","url","JSON","parse","$0631caab67deec9d$export$2e2bcd8739ae039","HTMLElement","observedAttributes","constructor","button","querySelector","count","addEventListener","removeAttribute","handleGlobalClick","target","contains","console","log","attributeChangedCallback","name","oldValue","newValue","handleEvent","currentTarget","innerHTML","connectedCallback","document","disconnectedCallback","removeEventListener","$e2634b9eb5104ca3$export$7f645d55b4b275dc","properties","$2406097b92f0b598$export$2e2bcd8739ae039","qid","dataset","questionid","qgroup","questiongroup","element","question","closest","handleCustomProps","elemCustomProps","customProps","customPropsJson","setInputType","inputType","entries","forEach","key","value","type","$2a15bf81099470bd$export$12e25f693a4429ac","customElements","define","createElement","showModal","catch","error"],"version":3,"file":"index.1b62db57.js.map"}