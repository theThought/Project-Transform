@use 'globals';
$default-text-width: 197px;

/* a-input-singlelineedit
 * essential styling for the fundamental HTML input element
 */
.a-input-singlelineedit {
    padding: 10px 16px;
    border-radius: globals.$border-radius;
    border: 1px solid globals.$borders;
    color: globals.$input-text;
    margin: 0 0 .5em 0;
    width: $default-text-width;
    height: 19px;
    background-color: globals.$background;
    box-sizing: content-box;
}

/* m-input-singlelineedit
 * the molecule gets added by JavaScript when the a-input-singlelineedit
 * includes a pre or post label and therefore requires an additional wrapper
 * overflow: hidden added to fix issue with display in IE10
 */
.m-input-singlelineedit {
    margin-bottom: .5em;
    overflow: hidden;

    .a-input-singlelineedit {
        margin-bottom: 0;
    }
}

/* numerical single-line inputs
 * styles for the input element (that are built on top of the above defaults)
 * along with additional classes to manage the 'spinner' control that appears
 */
.a-input-singlelineedit[type=number] {
    text-align: right;
    width: $default-text-width;
    padding-right: 16px;
}

.show-spinner .a-input-singlelineedit[type=number] {
    padding-right: 28px;
    width: calc($default-text-width - 16px);
}

/* remove the default spinner as we are using a custom implementation */
.a-input-singlelineedit[type=number] {
    -moz-appearance: textfield;

    &::-webkit-inner-spin-button,
    &::-webkit-outer-spin-button {
        -webkit-appearance: none;
        opacity: 0;
        margin: 0;
    }

}

/* remove the clear entry button from IE as it breaks right-aligned text */
.a-input-singlelineedit[type=number]::-ms-clear {
    display: none;
}

/* IE10 does not support :read-only selector */
.read-only .a-input-singlelineedit {
    border: transparent !important;
    background: transparent;
    cursor: default;
}

input.read-only:focus-visible {
    outline: none;
}

/* This following rule shouldn't be necessary, as ready-only elements shouldn't get focus,
 * however I have observed Firefox adding an outline and this prevents that behaviour  */
input:read-only:focus-visible {
    outline: none;
}

.a-input-singlelineedit:read-only:focus {
    border: none;
}

.m-input-singlelineedit:last-of-type,
.a-input-singlelineedit:last-of-type {
    margin-bottom: 0;
}

.a-input-singlelineedit:hover:not(:read-only),
.a-input-singlelineedit:focus:not(:read-only) {
    color: globals.$borders-hover;
}

.a-input-singlelineedit:focus {
    outline: none;
    border: 1px solid globals.$theme-primary;
}

/* inputs when a child of a checkbox (other specifier) */
.m-option-base {
    .a-input-singlelineedit {
        margin-left: .5em;
        margin-bottom: 0;
        padding: 0;
        border: 0;
        border-radius: 0;
        border-bottom: 1px solid;
        width: 151px;
        height: auto;
    }
}

/* remove leading border if there is a pre-label which has to account for
 * for the possibility of the presence of a button wrapper around the input
 */
.a-label-prelabel + .a-input-singlelineedit,
.a-label-prelabel + div > .a-input-singlelineedit {
    border-left: none;
    border-radius: 0 globals.$border-radius globals.$border-radius 0;
}