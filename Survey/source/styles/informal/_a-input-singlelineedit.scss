@use 'globals';

$default-text-width: globals.$default-input-width;

/* a-input-singlelineedit
 * essential styling for the fundamental HTML input element
 */
.a-input-singlelineedit {
    padding: globals.$default-padding;
    border-radius: globals.$text-border-radius;
    border: globals.$border-thickness solid globals.$other1;
    color: globals.$input-text;
    margin: 0 0 .5em 0;
    width: $default-text-width;
    background-color: globals.$input-background;
    box-sizing: content-box;
    font-size: globals.$option-font-size;
    line-height: globals.$instruction-line-height;
}

.a-input-singlelineedit.has-content {
    border-color: transparent;
    background-color: globals.$input-background-has-content;
}

.balance .a-input-singlelineedit,
.balance .m-input-singlelineedit {
    margin-right: 1em;
}

html[dir="rtl"] {
    .balance .a-input-singlelineedit,
    .balance .m-input-singlelineedit {
        margin-right: auto;
        margin-left: 1em;
    }
}

/* m-input-singlelineedit
 * the molecule gets added by JavaScript when the a-input-singlelineedit
 * includes a pre or post label and therefore requires an additional wrapper
 * overflow: hidden added to fix issue with display in IE10
 */
.m-input-singlelineedit {
    display: inline-block;

    /* prevent double drop shadow when input is within a molecule container */
    &.focused .a-input-singlelineedit {
        box-shadow: none !important;
    }

    &.position-below {
        display: table;

        .a-input-singlelineedit {
            margin-left: 0;
        }
    }

    margin-bottom: .5em;

    .a-input-singlelineedit {
        margin-bottom: 0;
        margin-right: 0;
    }
}

html[dir="rtl"] .m-input-singlelineedit {
    &.position-below {

        .a-input-singlelineedit {
            margin-right: 0;
        }
    }

    .a-input-singlelineedit {
        margin-left: 0;
    }
}

/* numerical single-line inputs
 * styles for the input element (that are built on top of the above defaults)
 * along with additional classes to manage the 'spinner' control that appears
 */
.a-input-singlelineedit[type=number] {
    text-align: right;
    width: $default-text-width;
    padding-right: 16px;
}

.show-spinner .a-input-singlelineedit[type=number] {
    padding-right: 28px;
    width: calc($default-text-width - 16px);
}

html[dir="rtl"] .show-spinner .a-input-singlelineedit[type=number] {
    padding-right: 0;
    padding-left: 28px;
}

/* remove the default spinner as we are using a custom implementation */
.a-input-singlelineedit[type=number] {
    -moz-appearance: textfield;

    &::-webkit-inner-spin-button,
    &::-webkit-outer-spin-button {
        -webkit-appearance: none;
        opacity: 0;
        margin: 0;
    }
}

/* remove the clear entry button from IE as it breaks right-aligned text */
.a-input-singlelineedit[type=number]::-ms-clear {
    display: none;
}

/* IE10 does not support :read-only selector */
.read-only .a-input-singlelineedit,
.a-input-singlelineedit.read-only,
.a-input-singlelineedit[readonly],
.a-input-singlelineedit[data-readonly="true"] {
    border-color: globals.$disabled-text !important;
    cursor: default;

    &.has-content {
        color: globals.$disabled-text;
        background-color: #e6e5e7
    }
}


input.read-only:focus-visible {
    outline: none;
}

/* This following rule shouldn't be necessary, as ready-only elements shouldn't get focus,
 * however I have observed Firefox adding an outline and this prevents that behaviour  */
input:read-only:focus-visible {
    outline: none;
}

input[readonly]:focus-visible {
    outline: none;
}

.m-input-singlelineedit:last-of-type,
.a-input-singlelineedit:last-of-type {
    margin-bottom: 0;
}

.a-input-singlelineedit:not([readonly]):hover,
.a-input-singlelineedit:not([readonly]):focus {
    //color: globals.$borders-active;
}

.a-input-singlelineedit:not([readonly]):focus {
    outline: none;
    border: globals.$border-thickness solid globals.$theme-primary;
}

/* inputs when a child of a checkbox (other specifier) */
.m-option-base {
    .a-input-singlelineedit {
        position: relative;
        left: 8px; // moves the text input over the 8px padding
        z-index: 1;
        margin: -8px 0 -8px 4px;
        border-radius: globals.$text-border-radius globals.$border-radius globals.$border-radius globals.$text-border-radius;
        border-width: globals.$border-thickness;
        border-color: globals.$other1; // this property is kept separate to allow for overrides
        width: 151px;
        height: auto;

        &.has-content {
            border-color: transparent;
        }
    }

    &[data-readonly="true"] .a-input-singlelineedit,
    .read-only .a-input-singlelineedit,
    .a-input-singlelineedit.read-only {
        border-color: transparent !important;
    }
}

html[dir="rtl"] .m-option-base {
    .a-input-singlelineedit {
        margin-left: 0;
        margin-right: .5em;
    }
}